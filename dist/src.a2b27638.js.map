{"version":3,"sources":["node_modules/@monaco-editor/loader/lib/es/_virtual/_rollupPluginBabelHelpers.js","node_modules/state-local/lib/es/state-local.js","node_modules/@monaco-editor/loader/lib/es/config/index.js","node_modules/@monaco-editor/loader/lib/es/utils/curry.js","node_modules/@monaco-editor/loader/lib/es/utils/isObject.js","node_modules/@monaco-editor/loader/lib/es/validators/index.js","node_modules/@monaco-editor/loader/lib/es/utils/compose.js","node_modules/@monaco-editor/loader/lib/es/utils/deepMerge.js","node_modules/@monaco-editor/loader/lib/es/utils/makeCancelable.js","node_modules/@monaco-editor/loader/lib/es/loader/index.js","node_modules/@monaco-editor/loader/lib/es/index.js","node_modules/emmet-monaco-es/dist/emmet-monaco.esm.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_objectWithoutProperties","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","len","arr2","TypeError","compose","_len","fns","_key","x","reduceRight","y","f","curry","fn","curried","_this","_len2","args","_key2","_len3","nextArgs","_key3","concat","isObject","includes","isEmpty","isFunction","hasOwnProperty","property","validateChanges","initial","changes","errorHandler","some","field","validateSelector","selector","validateHandler","handler","values","_handler","validateInitial","throwError","errorMessages","type","Error","initialIsRequired","initialType","initialContent","handlerType","handlersType","selectorType","changeType","changeField","validators","create","state","current","didUpdate","didStateUpdate","update","updateState","validate","getChanges","extractChanges","getState","setState","causedChanges","_handler$field","index","config","paths","vs","validateConfig","urls","informAboutDeprecation","monacoBase","console","warn","deprecation","configIsRequired","configType","merge","assign","CANCELATION_MESSAGE","msg","makeCancelable","promise","hasCanceled_","wrappedPromise","Promise","resolve","reject","then","val","cancel","_state$create","config$1","isInitialized","monaco","_state$create2","globalConfig","_validators$config","init","_ref","wrapperPromise","window","editor","storeMonacoInstance","injectScripts","getMonacoLoaderScript","configureLoader","script","document","body","appendChild","createScript","src","createElement","_ref2","loaderScript","onload","onerror","_ref3","require","error","__getMonacoInstance","_ref4","loader","__spreadArray","to","pack","l","ar","isNumber$1","code","isAlpha$1","isAlphaNumericWord","isAlphaWord","isWhiteSpace$3","isSpace","isQuote$2","Scanner","str","start","end","string","pos","eof","limit","peek","charCodeAt","eat","match","ch","ok","eatWhile","backUp","substring","message","ScannerError","tokenScanner$1","tokens","size","peek$3","scanner","readable$1","consume$2","token","error$1","abbreviation","abbr","options","result","statements","elements","ctx","node","stack","element$2","group","isChildOperator","isSiblingOperator$1","isClimbOperator","pop","isGroupStart","isBracket$2","repeat","repeater","attr","elem","attributes","selfClose","elementName","isRepeater","text","getText","shortAttribute","attributeSet","isCloseOperator","isAttributeSetStart","attribute","isAttributeSetEnd","isWhiteSpace$2","isOperator$1","createLiteral$1","jsx","expression","literal$2","quoted","isEquals","quote","isQuote$1","single","allowBrackets","brackets","context","open","isCapitalizedLiteral","isClassNameOperator","isElementName","isTextStart","isOpen","Boolean","operator","isSingle","isLiteral$2","escaped","tokenize$1","getToken$1","field$2","repeaterPlaceholder","repeaterNumber","repeater$1","whiteSpace$1","literal$1$1","operator$1","bracket$1","isAllowedOperator","isElementName$1","isAllowedSpace","isAllowedRepeater","bracketType","isOpenBracket$2","op","operatorType$1","count","implicit","Number","reverse","base","parent","consumePlaceholder$2","stream","operators","child","class","climb","id","equal","close","sibling","tokenVisitor","Literal","Quote","Bracket","Operator","Field","getVariable","RepeaterPlaceholder","repeaters","inserted","RepeaterNumber","lastIx","parentIx","Math","max","parentRepeater","String","WhiteSpace","stringify$1","urlRegex","emailRegex","convert","textInserted","cleanText","s","trim","children","convertGroup","repeatGuard","maxRepeat","POSITIVE_INFINITY","_a","join","varValue","variables","deepest","deepestNode","last$1","insertText","href","insertHref","convertStatement","original","items","isGroup","convertElement","stringifyName","stringifyValue$1","selfClosing","convertAttribute","isField$1","attachRepeater","implied","isBoolean","valueType","shift","boolean","lastToken","startsWith","hrefAttribute","find","item","parseAbbreviation","tokenize","isValue","getToken","mergeTokens","shouldConsumeDashAfter","short","field$1","numberValue","colorValue","stringValue","bracket","whiteSpace","literal$1","consumePlaceholder$1","isIdentPrefix","isKeyword","isLiteral","createLiteral","consumeNumber","rawValue","unit","finished","valueStart","color","alpha","isHex","colorAlpha","r","g","b","a","parseColor","raw","isBracket","operatorType","afterNegative","hasDecimal","prevPos","hasFloat","parseInt","last","tokenScanner","peek$2","readable","consume$1","parser","consumeProperty","isSiblingOperator","important","valueFragment","valueMode","isLiteral$1","isFunctionStart","isValueDelimiter","isWhiteSpace$1","isImportant","consumeValue","isFragmentDelimiter","inArgument","consumeArguments","isOpenBracket$1","isCloseBracket$1","isArgumentDelimiter","isBracket$1","isOperator","t1","t2","parse$2","mergeAttributes","lookup","attrName","prev","mergeValue","mergeDeclarations","glue","append","t","dest","walk","ancestors","callback","findDeepest","isNode","resolveSnippets","reversed","snippet","snippets","snippetAbbr","walkResolve","topNode","mergeNodes","resolved","createOutputStream","level","offset","line","column","processText","_push","pushString","lines","splitByLines","il","pushNewline","indent","baseIndent","newline","pushIndent","pushField","placeholder","tagName","strCase","attrQuote","isBooleanAttribute","toLowerCase","isInline","inlineElements","split","toUpperCase","elementMap","p","ul","ol","table","tr","tbody","thead","tfoot","colgroup","select","optgroup","audio","video","map","implicitTag","resolveImplicitTag","getParentElement","contextName","parentName","lowercase","latin","ru","sp","vocabularies","reLorem","lorem","m","db","minWordCount","maxWordCount","wordCount","rand","findRepeater","paragraph","floor","random","sample","iterations","min","choice","sentence","words","capitalize","word","insertCommas","hasComma","totalCommas","dict","startWithCommon","totalWords","common","element","rename","xsl","matchesName","isAllowed","reElement","reModifier","blockCandidates1","className","blockCandidates2","bem","expandClassNames","expandShortNotation","data","getBEMData","classNames","cl","ix","uniqueClass","block","findBlockName","updateClass","path","prefix","originalClass","getBlockName","arrClassNames","_bem","classValue","stringifyValue","parseBEM","getBEMDataFromContext","depth","maxParentIx","walk$1","visitor","createWalkState","out","caret","isSnippet","isInlineElement","isField","pushTokens","largestIndex","splitByLines$1","shouldOutputAttribute","template","consumePlaceholder","namePos","afterPos","isTokenStart","isToken","before","after","createCommentState","enabled","trigger","commentNodeBefore","shouldComment","comment","output","commentNodeAfter","attrs","htmlTagRegex","html","format","shouldFormat","getIndent","pushAttribute","pushSnippet","innerFormat","hasNewline","startsWithBlockTag","lQuote","rQuote","fieldIx","findIndex","trimLeft","adjacentInline","matches","exec","indentFormat","element$1","primary","secondary","collectAttributes","shouldFormat$1","beforeName","afterName","pushPrimaryAttributes","pushSecondaryAttributes","pushValue","isPrimaryAttribute","replace","beforeAttribute","booleanValue","glueAttribute","afterAttribute","lineLengths","maxLength","valueLength","beforeTextLine","afterTextLine","haml","slim","pug","formatters","parse","oldTextValue","parseOpt","transform","stringify","formatter","syntax","reProperty","opt","createSnippet","keywords","parsed","parseValue","cssVal","collectKeywords","dependencies","nest","sort","snippetsSort","cur","isProperty","v","scoreMatch","str1","str2","partialMatch","str1Len","str2Len","minLength","j","score","ch1","ch2","found","acronym","matchRatio","delta","maxScore","sum","shortHex","asHex","asRGB","isShortHex","toShortHex","toHex","frac","num","digits","toFixed","hex","pad","css","isJSON","toCamelCase","propertyValue","outputImportant","outputToken","getSingleNumeric","getQuote","outputValue","separator","prevEnd","_","letter","gradientName","parse$1","cache","stylesheetSnippets","convertSnippets","isValueScope","filteredSnippets","getSnippetsForScope","resolveNode","resolveGradient","propName","resolveValueKeywords","findBestMatch","resolveAsProperty","resolveAsSnippet","resolveNumericValue","gradientFn","cssValue","inlineValue","getUnmatchedPart","kw","resolveKeyword","defaultValue","hasField","wrapWithField","minScore","reField","inputValue","literal","tail","matchedItem","getScoringPart","lastPos","ref","dep","aliases","unitless","q","markupSnippets","xslSnippets","pugSnippets","defaultSyntaxes","markup","stylesheet","defaultOptions","e","defaultConfig","syntaxConfig","parseSnippets","xhtml","xml","sass","stylus","k","resolveConfig","globals","mergedData","typeDefaults","typeOverride","syntaxDefaults","syntaxOverride","backwardScanner","sol","peek$1","previous","consume","consumeWhile","isQuote","c","consumeQuoted","bracePairs","isHtml","isWhiteSpace","consumeIdent","consumeAttributeWithUnquotedValue","consumeAttribute","consumeAttributeWithQuotedValue","isCloseBracket","isOpenBracket","isUnquotedValue","isIdent","isAlpha","isNumber","isNaN","specialChars","defaultOptions$1","lookAhead","extractAbbreviation$1","offsetPastAutoClosed","getStartOffset","isCloseBrace","isOpenBrace","isAbbreviation","location","compiledPrefix","consumePair","consumeArray","consumed","expandAbbreviation$1","resolvedConfig","cssData","htmlData","snippetKeyCache","Map","markupSnippetKeys","stylesheetCustomSnippetsKeyCache","htmlAbbreviationStartRegex","jsxAbbreviationStartRegex","cssAbbreviationRegex","htmlAbbreviationRegex","commonlyUsedTags","tags","bemFilterSuffix","filterDelimitor","trimFilterSuffix","commentFilterSuffix","maxFilters","doComplete","model","position","emmetConfig","isStyleSheetRes","isStyleSheet","has","registry","getDefaultSnippets","set","get","extractOptions","getSyntaxType","extractedValue","extractAbbreviation","abbreviationRange","currentLineTillPosition","currentWord","getCurrentWord","endsWith","expandOptions","getExpandOptions","expandedText","expandedAbbr","completionItems","createExpandedAbbr","isAbbreviationValid","isExpandedTextNoise","kind","languages","CompletionItemKind","Property","label","documentation","replaceTabStopsWithCursors","detail","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","range","escapeNonTabStopDollar","addFinalTabStop","properties","suggestions","incomplete","removeTabStops","filterText","stylesheetCustomSnippetsKeys","makeSnippetSuggestion","abbrRegex","RegExp","tagToFindMoreSuggestionsFor","newTagMatches","commonlyUsedTagSuggestions","showAbbreviationSuggestions","abbreviationSuggestions","sortText","showSuggestionsAsSnippets","Snippet","snippetKeys","snippetDetail","skipFullMatch","snippetCompletions","snippetKey","currentAbbr","substr","expandedWord","maxTabStop","maxTabStopRanges","foundLastStop","replaceWithLastStop","numberStart","numberEnd","currentTabStop","foundPlaceholder","i_1","rangeStart","rangeEnd","emmetSnippetField","syntaxType","emptyUserConfig","getFilters","currentLine","getLineContent","lineNumber","lengthOccupiedByFilter","rangeToReplace","Range","hexColorRegex","_b","between","endPrefixIndex","tag","dotMatches","filters","bemEnabled","commentEnabled","combinedOptions","expandAbbreviation","isValidEmmetToken","language","currentTokenType","isValidLocationForEmmetAbbreviation","_tokenization","tokenization","_tokenizationStateStore","_tokenizationSupport","tokenizationSupport","getBeginState","clone","tokenizationResult","valid","LANGUAGE_MODES","jade","scss","less","javascript","typescript","MAPPED_MODES","handlebars","php","twig","DEFAULT_CONFIG","showExpandedAbbreviation","registerProvider","providers","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","provider","dispose","emmetHTML","emmetCSS","emmetJSX","HTML_CODE","CSS_LINKS","editorCode","getElementById","editorPreview","contentWindow","editorCopyButton","editorFormatter","linkURL","link","rel","head","createEditor","editorContainer","minimap","autoIndent","formatOnPaste","formatOnType","automaticLayout","contextmenu","fontSize","theme","scrollbar","useShadows","vertical","horizontal","horizontalScrollbarSize","verticalScrollbarSize","innerHTML","onDidChangeModelContent","getValue","setTimeout","getAction","run","onclick","log","copyToClipboard","editorCopyButtonText","disabled","el","execCommand","removeChild","bundleURL","getBundleURLCached","getBundleURL","getBaseURL","url","exports","bundle","updateLink","newLink","cloneNode","remove","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module"],"mappings":"AaAA,ACAA,IDAImgC,ACAAM,MAAM,GDAG,ACAA10B,GDAG,IAAI,ACAA,CAAC,cAAc,CAAC;ADCpC,ACCA,SDDSq0B,ACCAM,UAAU,CAACxC,IAAI,EAAE,CDDC,GAAG;ADA9B,ECCE,ACCA,IDDI,ACCAyC,CDDCR,MCCM,GDDG,ACCAjC,EDDE,ECCE,CAAC0C,SAAS,EAAE;AFDhC,EEEED,EDDER,KCCK,CAACv0B,GDDG,GAAGy0B,ACCA,GAAG,SDDS,EAAE,CCCC;AFD/B,ECCE,ECCEnC,IAAI,CAAC2C,MAAM,EAAE;AFF2B,ECG1C,ACAA,CAAC,MDAMV,SAAS;AXNlB,AOAA,AHAA,AHAA,AIAA,AHAA,AIAA,AHAA,AQOA,AZPA,AWAA,EEOEQ,EZPEl4B,AIAAlE,KHAKQ,ACAAW,AUOA,AbPA1F,CCAC,AYOAgX,CRPC,EJAE,CIAC,AHAA,AWOA,CXPChS,EAAE,ACAA,AUOAk5B,CVPC/9B,CDAC,EWOE,CAAC6W,CRPCzS,AFAA,CHAC,CGAC,AHAAtE,CaOC,CAAC4f,CbPC,EKAE,ALAA3f,EaOE,CRPC,AQOA,AbPA,EAAEC,CaOC,CAAC,CAAC,CAAC,CAAC,AbPA,EAAE,CaOC,GAAG,GAAG2gC,IAAI,CAACC,GAAG,EAAE;ALN3D,AFCA,ACDA,AHAA,AQQA,EXREr4B,AIAA,AHAA,ACAA,AUOAw1B,AbPA,EOAE30B,EMOE,AbPArJ,CCAC,AIAA,AQOA8gC,EZPE,ACAA,AICA33B,AHDA,ASQAg3B,AZRA,CGAC,CEAC77B,AFAA,CAACV,CHAC7D,CMCC,CDDC,ACCAoB,CNDC,CaOC,CRPCE,AHAA0D,AWOAg8B,AbPA,EGAE,CGCC,AHDA5+B,ASQA,ENPEZ,ACDA,CKQC,CVRC,ACAA,CAACtB,AIAA,CFAC,CAACqB,AHAA,CICC,COMC,CPNC,AHDA,AUOAm/B,CVPC,CAACh7B,CEAC,EAAElB,EQOE,CRPC,CQOCy5B,CVPC,CEAC,AFAA,EUOE,CAACgD,CRPCt+B,IFAI,CEAC,AFAA,CEAC4B,IAAI,AQOA,CRPC,AQOA,ERPEE,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGF,IAAI,EAAEE,IAAI,EAAE,EAAE;AGC1F,ALAA,ACD4C,ASQ5C,AFJA,ELFEtE,ACDA2G,AKQA,EXRE4B,AIAAlE,AHAA,AFAArE,ECAE,AMAA,CFAC,CJAC,AIAAsE,AHAAQ,AICA,ACDA,CDCCtE,CNDC,CAACP,CKAC,CAAC,AHAA,AICA,CAACoB,EDDEF,AHAA,IAAI,AICA,CAAC,ACDA,CDCCG,GDDG,ALAA,CKACgD,ALAAzE,GMCG,ANDA,CKAC,ACCA,CDDC,ALAAC,GAAG,EAAE,IMCIA,GAAG,EAAE;AEA7C,ALDC,ACCD,AMHA,AGWA,AFLA,EVHE,AIAA,AEAAsJ,AKQA,EVPE,AIAA,AOOA23B,CNRC,CKQC,AZRAhhC,COAC,CDCCsB,CJAC,EFDE,EECE+C,AFDArE,CMCC,AOOA,CPPCD,AHAAwF,EDAE,AWOA,CPPC,ANDA,CMCC,CJACnE,CWOC,EVPE,MDAM,CAACC,CIACpB,KJAK,CIAC,CJACgF,CIAC,GJAG,GAAG,IAAIxC,KAAK,CAAC4B,IAAI,CAAC,EAAEE,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGF,IAAI,EAAEE,IAAI,EAAE,EAAE;ADA7F,AOAA,ALAuB,AIAvB,AHAA,AMHA,AGWA,AFLA,CVHC,AMAA,CFCC,EOOE,EVPEU,AIAA,ANDA9E,GKCG,AQOA8gC,CXPC,AIAA//B,AMOA,CVPCqD,GUOGsC,CVPC,CAAC,AIAA,ANDA,CMCC9G,COOC,AbRA,CKCCyE,AHAApD,AUOA,CPPC,ACAA,CAAC,AOOA,CRPC,ALDA,CMCC,KJAK,CAACmD,IAAI,CAAC;ADDhC,AQJF,ADKA,ADDE,AHCF,AMHA,ACMA,ECKE,ACAA,CDAC,CPPC,AHAA,AUOA,ADLE+4B,EEKA0D,AbRA5gC,EMCEH,GDAGqE,AOOAhB,EDLI,CNFD,ACAA,AMOA,CXPCgF,AIAA7D,ACAA0E,CMOC,ACAA,EAAE,AbRA,EAAE,CCCC,AKAA,CAAC7H,ENDE,EKCE,CAAC,CCAC,CAACvB,GAAG,CAAC,EAAEmJ,EDAExE,CAAC,EAAEC,ACAA,CDAC,ACAAzD,EDAE,ICAI,CAACnB,GAAG,CAAC,EAAEuB,MAAM,CAACvB,GAAG,CAAC,CAAC,CAAC,ysBK0BlE;AV1BoB,AQNkB,ADMvC,ADAA,AHAA,AMHA,AC8BA,ITzBI,AUMA,ACAA,AFmBEw9B,EN1BA,ACAA,ANDAl9B,EYQE0nB,CLRCze,ELEErE,EGDEN,AM0BE,CN1BD,ALDA,CKCCD,AHCA,AUMA,CPPC,AHCArD,AFFA,AW2BE,CN1BD,COOC,CAAC,EAAE,CVNC,CKFC,CAACkI,AKQAjG,EVNEuB,CUMC,CVNC,AUMAqK,CVNC7N,EKFE,EAAE,AKQA,EVNE,AUMAoM,GVNG5I,EAAE,AUMA,CVNC7D,AUMA,KVNK,CAAC,IAAI,EAAEiE,IAAI,CAAC,GAAG,YAAY,YS2BxE,mBCrBuG,CAAC;AJRjD,AJCxD,AMHA,EHGE,AMQA,ERPE,ACAA,AMOA,AZRA,CKCC,ALDA,CEEC,AKFAuE,APAA,CKCChF,CAAC,AOOAujB,CPPC,EHCE,IAAI/iB,AUMA,EAAE,CLRC,ELEE,CKFC,ELEE5D,GKFG,MLEM,CAACC,MAAM,EAAE+D,QAAQ,GAAG,IAAI3C,KAAK,CAACuC,KAAK,CAAC,EAAEE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,KAAK,EAAEE,KAAK,EAAE,EAAE;AMDzG,AEHA,ACgCA,EN5BE,ACAA,ACDA,AMSA87B,AbTA,CKCC,ACAA,ANDA,CMCC,ECDEv3B,AKQA,EVNErE,CFFC,GaSG,CDDC+6B,ECCEd,CXPC,CAACn6B,GKFG,ELEE,CAAC,AKFA,AKQA,CAAC6iB,CCCC,CXPC3mB,AWOA,CNTCsI,IKQI,CAAC,CAAC,CLRC,AKQA,CVNC,AKFA,AKQA,CVNCxE,EWOE,GXPG,CAAC,GKFGyE,OAAO,EAAEC,MAAM,EAAE;ARR9D,AMUA,ADDA,AMHA,ACgCA,CN5BC,CCAC,ECDEL,AKQA,ACCA,AbTAzJ,AW6BE09B,ET3BA,CFFC,CaSC0D,AbTAnhC,CDTCF,AOUA,AFDA4I,EGAE,APAA,COACoB,APAA,CMCH5I,AOQI,CFoBG,CX7BDjB,COAC,AMSAiL,CNTC,AI6BEA,GX7BC,GIAG,CLTC,AKSA3C,ASSA,CdlBCxI,AckBAqhC,AFoBE,CAAC1D,CJ7BD3zB,CRTC,EAAE/J,AQSA,AHAA,EGAE,AHAA,CLTC,EAAEC,KAAK,AYsCE,CEpBD,AFoBE,CZtCD,AckBA,UPRnB,CK4BgC,CL5B/B,AK4BgC,IL5BhCiB,QOQ0C,CAAC,8BPR7B,EAAC,CAAC,CAAC,EAAEC,MAAM,CAAC,EAAEI,MAAM,CAAC;AEA3D,AHAE,ACCF,AIJA,ACgCA,EZtCE,AKSA,AQQA,AZRA,EQAE0I,AKSA,AFoBE0zB,EZtCA39B,AGYA,AKHA,AHAA,CAACuI,ELTE,AckBA,IdlBIxI,AGYAgF,AKHA0E,AHAA,ASSArI,CAAC,CRPCiD,ADFA4B,CLTC,CSSC,AKSA,AFoBE,CZtCD,AckBA,ELTEwB,ANGA,AWMArG,AFoBE8J,CT1BDjK,AWMA,CRPC,EQOEkgC,CNTC,CLGC,CAACn8B,AEHA,CGAC6E,AHAA,AO6BE,CEpBD,AFoBE6zB,CEpBDp8B,EXNE,EAAE,AKHA,CAAC+H,CLGC,AWMA,CXNC9D,CWMCnE,CLTb,AKSc,CLTboG,CKSe,EXNE,AWMA,AFoBE,CT1BDtC,AS0BE,EH7Bd,AJAc,CIAb,AJAc,CFGC,EAAEG,IKHI,CAAC,GLGG,AKHAuE,CLGC,AS0BE,CT1BD,AS0BE,CAACg0B,IJ7BE,CAAC7zB,GAAG,CAAC,II6BM,CACzEmB,QAAQ;AN5BW,ACDrB,AIHD,ACiCA,EP9BE,AQSA,AZRA,EDVEhL,ASSFqI,ANGE,AKHA,AI8BEs1B,CT3BD,AKHA,CAAC,AHAA,ASSA,CTTC,EQSE,AZRA99B,CDVC,ASSF,AKSEwgC,CdlBCpgC,AKSJqF,CIAG0E,AISE,AZRA,GMCGf,COOC,CAACi3B,GPPG,AK4BE,GAAGl1B,EZvCA,CAACnL,ASSR,CKSS,CTTZ,ASSaohC,CdlBC,CKSb54B,CLTevI,AYuCE,CAAC09B,CErBD,CdlBC,AckBAt8B,CAAC,CdlBC,AKSd,ASSc,CTTb,ASSc0V,ETTZ7Q,ESSgB,CAAC,IFqBM,CErBDs6B,AFqBE,IP9BZ,CAAC,CSSe,CAACJ,UTTJ,CAAC,CSSe,EAAE,AFqBE,CAAC,CErBD;APPlD,AIJpB,AEYA,AZRA,AW6BA,ET3BE,AEFA,CFEC,CMHDh2B,ADAEX,AI8BEs0B,EZvCA79B,AKUAsI,ESQEi4B,GdlBG,AQSA,CAAC,AHCA,CLVCvgC,AKUA0I,IIDE,AJCE,CLVC,AckBA,CLTD,ADAE,AHCA,ASQAw4B,AFqBE,CJ9BD,CAACt3B,CI8BGqB,EH9BF,AKSE,CAAC9J,CAAC,CNTC,AMSA,CNTC,AMSA,EFqBI,CAACs8B,cAAc,CAAC,WAAW,CAAC;AT1B5D,AQNA,AEaA,AZRA,EOFE,CAAC,CCAD9zB,ADAE,AHCAhB,ELVExI,AckBA,GDCGggC,AZRA7/B,EQFA,EAAE,GTTK,ACWA,CQFD,AREEC,CDXC,CamBC,CAAC6/B,EbnBE,CamBC,AZRA,EYQE,AZRA5/B,CIDC,EAAE,WJCW,EAAE;AECxC,AQLD,ACiCA,EJ9BE,AKUA,AZRA,EQFAoJ,AJCE,ASQA,EdlBExJ,ACWAK,GOFGgJ,AKUA,CJVD,AIUE,AZRA,CIDC,CIDD,AIUE,CZRCxJ,EEEE2E,AUMAw7B,CJVD,ETTI,AamBA,CZRC,CDXC,AGaA,AUMAvX,AZRApoB,GOFG,CRTC,AQSAsJ,APEA,CAACxJ,EYQE,CAAC,ELVE,CPEC,CAAC,COFC,YAAY,+DKU+D,EAAE,IAAI,CAAC,GAAG,GAAG;AVNrG,AQNpB,AEaA,ADoBAg9B,EX3BE,EQHApzB,ADAE,AMUA62B,EdnBE3gC,AKUAkI,AJEAtI,GW2BG,CH9BD,AG8BEsB,CJ9BCiI,AHCA,CIDD,ARGE,CIFC,AJEA9I,CDZC,AcmBA,EdnBE,CcmBC,AFoBA,CAAC,GEpBG,ENVE,GAAG,EI8BPo9B,EJ9BW,IPGI,CW2BR,CX3BU,CW2BL;ADhC/B,AEcAuC,EJXA,ADAE,AMUA,AFoBA,CH9BD,ADAE,AMUA,CdnBC,ASSF,ARGE,CDZC,AQSA52B,AMUA,CdnBC,AYuCEs0B,CCnBD,ACDA,CTTCv1B,AQUA03B,ACDA,AbPAv/B,EIFE,AO6BE,EP7BA2H,CO6BG2C,EX3BA,GIFG,AJEAhL,COHC,AHCAyI,CQUC,CDmBG,CAAC4C,CP7BD,AQUA20B,CRVCr3B,AJEA,CAAClI,UW2BY,CAAC,KCnBG,CDmBG,CAAC,GX3BC,CAACH,MAAM,CAAC;AOFtD,AKWA8/B,ACDA,EdnBE,ASSEj2B,AG8BF2zB,CZvCC,CCYC,EIFE,AO6BA,CCnBC,ADmBAlnB,CCnBCspB,AZRA3/B,CDZC,EYuCE,GAAGs9B,EH9BI,EIWA,CJXG,EIWAqC,ADmBA,CX3BC,CQHDh+B,CRGGxB,OYQO,AZRA,GAAGA,OAAO,CAACC,MAAM,CAAC,UAAUC,GQHxB,ARG2B,EQH1BmJ,ARG4B,aQHf,EAAE,CAAC,CAAC;ADApD,AGFD,AGcAo3B,ELXIn5B,AG8BF81B,EZvCEj+B,AKUA,CAAC,CSUC,AbRA,AW2BA,CZvCC,AcoBAugC,AFmBArC,CZvCCj+B,CWMCkM,CFGG,AG8BF,CZvCC,CAAC,CSSG7B,ARGFnK,AW2BA,CEnBC,CdpBCD,AQUAsJ,EMUE23B,EbRE,CDZC,ACYAngC,EUNE,CAACoL,EAAE,ACiCA,CEnBC,CLXG,AEHFnI,CFGG,CAAC,ADCF,CCDG,CEHD,EAAEoI,IAAI,EAAE,KVMK,CAAC5L,MAAM,EAAEM,GAAG,CAAC,CAACV,UAAU;AOFvC,ERT3B,ASSE+H,AJCF,AMJE,ACiCFw1B,EX3BE,CAAC,CUNGvxB,AVMF,IQHM,AEHA,GFGG/B,CEHChJ,CCiCD,CAAC68B,IAAI,CAAC9yB,EDjCI,CAAC9J,GFGG,CAAC,CAAC,CAAC,AEHA,ECiCA,CAAC08B,EDjCI,CAAC,CCiCD,CDjCG,ACiCF,KDjCO,IAAI58B,CAAC,GAAG,CAAC,EAAEiL,CAAC,GAAGrI,IAAI,CAAC1C,MAAM,EAAEgL,EAAE,EAAElL,CAAC,GAAGiL,CAAC,EAAEjL,CAAC,EAAE,EAAE;AFIzF,AG8BA,CAAC,CZtCC,AKUA,AO4BA,EDjCM,AVMJV,IUNQ4L,AVMJ,CDXCvM,AKUAwI,AJCAvH,CUNK,EXLF,CCWC,CUNK,AVMJC,CIDC,CMLKG,CAAC,EVMF,CAACV,CUNKsD,GVMD,CUNK,CAAC,AVMJpD,EUNM,KVMC,CAAC;ADVlC,ASQA,AJEA,EJCE,IUNU,IAAI,CAAC0L,EAAE,EAAEA,EAAE,GAAG5J,KAAK,CAACT,SAAS,CAAC4B,KAAK,CAAC1B,IAAI,CAAC6B,IAAI,EAAE,CAAC,EAAE5C,CAAC,CAAC;AXHhE,ASOA,AJEA,AO4BA,EX1BE,IUPUkL,EAAE,CXJL/L,AWIMa,AVONV,CUPO,CAAC,EVOJ,CUPOsD,EXJJ,CAACxD,CWIO,CAACY,CAAC,CAAC,EXJJ,EAAEX,cAAc,EAAE;ASQzC,AJEA,AJEA,AW0BA,EZrCE,EWIM,EXJFC,IAAI,GAAGR,MAAM,CAACQ,IAAI,CAACF,MAAM,CAAC;AKUhC,AJGA,AWyBA,EZpCE,AWGE,IXHEN,GCWGgB,GDXG,CAACP,UCWU,CAACQ,MAAM,EAAE,EDXE,EAAE;ASQpC,AG6BA,EDjCI,AVQF,EDXE,GCWG,CDXCP,CSOC2H,AEJE4D,EAAE,AVQF/K,CURGmE,AVQF,GDXG,ASOA,ARIA,CQJC+E,ARIA,EDXEpK,AWGE,AVQFkB,CURGkL,AVQF,EURI,CVQDjL,EDXE,CAACV,AWGE+B,GFIC,EAAE,AEJE,CAACT,AVQF,CAACX,MAAM,EURI,AVQFF,CURGyC,AVQF,EAAE,EAAE,CDXC,AWGE,CXHDrD,AWGE2B,IAAI,CAAC6B,CXHD,CAAC,EWGI,CAAC,CAAC;ANO5D,AMNA,EFIE,ETPE,ACWA,EQJEuG,ETPE9J,ACWAc,CIFCqH,KJEK,GAAGvH,KDXK,EAAET,ASOA,ERIE,CQJC2G,ARIAnG,CAAC,CAAC,EDXE,AKSA,EJEE,CDXCR,AKSA,GJEG,GAAGS,CDXC,CAACR,ASOL,CAAC0H,KTPU,CAAC,ASOL,ARIK,CQJJ+B,ARIKlJ,CAAC,CAAC,GAAG,CAAC,CAAC,EDXEN,GAAG,ASOL,CAAC,CTPM;AYqChEmL,EP3BEnD,EIFIsB,ARKF,EDZE,ECYEhJ,CIHC,AJGA,CQLG,AJEF2H,EJGE,CDZC7I,ASOEqK,ARKF,CIHC,CAAC3D,AJGA,AWwBT,CAAC4D,GZpCY,CAACzJ,AYoCT,EAAE,CAAC+I,IAAI,CP3BU,AO2BT,CP3BUd,EIFI,CAACoB,MAAM,AG6BpBA,EP3BoB,CAAC,GLTG,AYoClB,CZpCmB5J,CYoCd,KZpCoB,EAAEM,GAAG,CAAC,CAACV,UAAU;AKUpE,AMNA,ECiCE+9B,EZpCE,ASOE51B,CTPD,CAAC,ACYAhI,IQLM,GAAG,ARKF,CAACL,AWwBA,CAACu9B,EH7BA17B,GRKK,CAACR,IWwBI,CAAC,CXxBC,CAAC,EAAE,IAAI,CAAC,CAACC,OAAO,CAAC,UAAUxB,GAAG,EAAE,OQLpB,EAACuK,kBAAkB,EAAE,CAAC,QAAQ,CAAC,CAAC;AJIvE,AMPA,EFKEpC,AG4BA,EZpCEzH,EYoCF08B,EZpCM,ACYAt9B,CDZCkB,AKUA2F,CIFC,CAAC,ETRE,CAAC1F,KAAK,AKUA,CLVCP,AKUAkG,CIFCa,ERIE,CDZC,ACYAtG,EDZEP,ASQA,EAAE,ERIE,AWwBnB,EXxBqBZ,CDZC,AKUA,AO0BpB,CZpCqB,CKUC6G,AJEA,EAAEtF,EIFE,EAAE,EJEE,CAACvB,GAAG,CAAC,CAAC;AURjD,ACiCA,CAAC,CZpCC,AKUA,AO0BA,EH5BE,ERIE,CAAC,CIFC,AJEA,GQJG,CJEC8G,KAAK,CAACF,aAAa,CAACC,IAAI,CAAC,IAAID,aAAa,CAAC,SAAS,CAAC,CAAC;AAClE,AMPA,ACkCA,EZpCE,ECWE,CAAC,CQJC2B,GTPG7H,AWEA6L,ACkCA4xB,EXzBE,CQJC,CTPC,CSOC,CRICj+B,GQJDiJ,CELK,CAACqD,CVSC,AWyBA,CXzBC/K,AWyBA28B,EDlCE,EAAE,UFKP,CG6BkB,CH7BjB32B,CG6BmB,IH7Bd,CAACc,GRIqB,EAAE,CQJjB,EAAEA,MAAM,CAAC;ATNzC,AKUA,EMRI,ACkCF,EP1BE3B,EIHEwD,ARIAlK,AWyBA0K,GDlCK4B,GFKC,ARIA,AWyBA,CDlCG,AVSF9K,CQJC0I,CG6BCA,CDlCG,CNQD,CMRG,ENQA,CO0BC,CDlCGoC,ACkCF5B,IDlCM,ECkCA,CDlCG,AVSF,AWyBApD,CXzBCrG,CUTG,ICkCE,CXzBC,AWyBAi9B,EXzBEl+B,MAAM,CAACuB,MWyBM,EAAE,iBXzBiB,CAACF,MAAM,CAAC,CAAC;ADT/E,AWCA,ENQE0H,EIHE,ARIA,AWyBAhJ,CH7BC,ARIA,IDVIiB,AYmCA,EXzBE,AWyBAq8B,OP1BO,EAAE,AO0BA,GZnCG,CAACp8B,MAAM,EAAE,0BKS0B;AMP1D,EXDE,ASMA,AJGA+H,CIHC,CAAC,AG6BAmyB,EXzBE96B,CDVC,IAAIa,CAAC,AKSA,AO0BA,CXzBC,CIDC,AJCAlB,AWyBA,CZnCC,CAAC,EAAEkB,CAAC,CCUC,AWyBA,CXzBCG,CDVCF,KCUK,CAAC,CAAC,CAACG,CDVC,CAACF,KCUK,CDVC,ACUA,EDVEF,CAAC,EAAE,EAAE,GCUGpB,GAAG,EAAE,OIDO;AIF5D,AELA,ENQE,ELTE,AYmCAq+B,IZnCI98B,ACUArB,GIDG,AO0BA,EP1BE,AO0BA,CZnCC,ACUA,CAACC,EDVEkB,SAAS,CAACD,CAAC,CAAC,ACUA,CAACD,GDVG,GCUG,CDVC,CCUCnB,EDVEqB,CCUC,EAAEnB,MDVM,ACUA,CDVCkB,ACUAL,CDVC,CAAC,GAAG,CAAC,CAAC,iBKSiB,AJCA,CAACQ,MAAM,EAAEvB,GAAG,CAAC,CAAC;AQHxF,AELA,ENQEgJ,ELRE,ECSE,AWwBSwd,CXxBR,CDTCplB,ACSA,CDTC,GAAG,CAAC,AKQA,AOyBS,EZjCP,AKQA,AOyBS;AH3BxB,AJGA,AMRA,CNQC,GJCG,AWuByB,CAAC,CZhCxBb,GWAGkM,IXAI,CAACvM,IWAI,CAACsM,CXAC,CAACjL,EWAE,EAAEyC,EXAE,CAAC,CWAC,CXAC,CWACmI,EAAE,CXAC,CAAC,AWAA,CXAC3K,OAAO,CAAC,UAAUxB,GAAG,EAAE;ASM3D,AJEE,EMPEgE,AVSF,EWuBEs6B,EDhCI,EXAAx+B,CWAGkE,IAAI,CCgCD,EAAE,CDhCG,EAAE,CAAC,ACgCF,CDhCG,EXAA,CAAC7C,MAAM,EAAEnB,GAAG,EAAEuB,MAAM,CAACvB,GAAG,CAAC,CAAC;ASMjD,AJEA,EMPImM,AVUF,EIHElG,AMPE,ACgCFs4B,EZhCE,CAAC,AWAEpyB,CXAD,CWAG,AVUFhL,IUVM,EAAE,AVUF,CIHC,AMPE,CAAC,ACgCF,EPzBE,AOyBA,IPzBA0D,AOyBI,cPzBC,EAAC8B,UAAU,CAAC,CAACC,aAAa,CAAC;AAAC,AJIpD,EUVI4F,EXAA,AYgCAgyB,CZhCC,CWAG,IAAI,CXAD,AWAE,EAAE,CAAC,CXADt+B,AWAE,CCgCD,EAAE,GZhCG,CAACuB,AYgCA,yBZhCyB,EAAE;ASOjD,AJAA,AJKA,EUXI,ENMA8F,AO0BAk3B,EZhCEv+B,GSMGsK,AENEgC,AVWFnI,GDXG,CAAC3C,ASMA,AENE,CNMD,EIAE,ARKA,CILC,AMNEsC,EVWA,AWqBA,EDhCI,ACgCF,IDhCMwI,ACgCF,IZhCI,AWAE,CXADrL,GWAKgL,EAAE,CXAD,EAAEjM,MAAM,CAACuB,yBAAyB,CAACF,MAAM,CAAC,CAAC;AWC/E,EFME,AJAAgH,AJKA,EDXE,AYgCAm2B,CZhCC,CSMCj3B,CRKC,CILC,EAAEiB,CLNC,ASMA,ARKApE,GQLG4D,CRKC,AWqBA,EAAE,CXrBC7G,IQLI,AG0BA,CH1BC,IRKI,CAACC,KQLKmJ,CRKC,EAAElG,CQLC,EAAE,ARKA,GAAG,IAAI7B,KAAK,CAAC4B,IAAI,CAAC,EAAEE,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGF,IAAI,EAAEE,IAAI,EAAE,EAAE;AIJ1F,AMNA,CNMC,GIAG,ARKAD,AWqBAo6B,EZhCEp+B,CCWC,CQLC6J,ARKA5F,CUXCkI,GVWG,AWqBA,CZhCC,ACWA,CDXCxM,ASMA,AG0BA,EXrBEmB,AWqBA,CH1BCoJ,GTNG,CAAClJ,ASMA,CAAC6I,GRKG,CAAC5F,CDXC,AWAA,CXAC,ASMA,AENAgI,CXAC,CAAChL,ACWA,CAAC,CUXC,EAAE,GXAG,CAAC,UAAUxB,GAAG,EAAE;AKMnD,EMLE,AVWF,EWqBE4+B,EH1BIz0B,ETNAjK,CWAGqM,ACgCF,EAAE,GZhCG,CAACpM,AKOAoH,IIDM,AENA,CAACiF,CCgCD,CH1BG/B,EENE,CNOD,AMPE,CFMC,CAACN,ETNA,AWAEwC,CXADxL,MAAM,EAAEnB,ESMI,AENA,CXAD,AWAEwM,EXAAtM,EWAI,CAAC,GXAC,CAACa,wBAAwB,CAACQ,MAAM,EAAEvB,GAAG,CAAC,CAAC;AKO/D,AMNzB,EVYE,EWoBE6+B,EZhCE,ASMEj1B,CTND,CAAC,CCYC,IQNM,AG0BF,EAAE,CH1BGa,GRMChG,CQNG,ARMF,CQNGmF,CRMD,MQNQ;AEL9B,IXAI,ASMA,ARMA,EWoBEk1B,GDhCGnyB,EFME,ARMApI,GAAG,CAACG,CWoBC,EAAE,EDhCE,CAAC8H,ECgCE,EDhCE,CVYC,CUZC,AVYA,UAAU7H,CAAC,EAAEC,CAAC,EAAE;EDXzC,AWAE,IFMEwF,ARMA,AWoBA20B,GDhCKvyB,GFMC,CENG,AVYF5H,CQNCwF,ARMA,AWoBA,CXpBCzF,CAAC,AWoBA,CXpBC,CUZG,EFMA,AENE,CAAC,ICgCE,ODhCS8H,SAAS,CAACD,IAAI,CAAC;AACjD,EXCE,ECWE,CAAC,CQNCrC,AG0BA60B,CXpBCv6B,CAAC,CDXCtD,ACWA,MDXM,CY+BC,EAAE,CH1BC,EAAEgJ,MG0BM,OH1BO;ATJlC,AWDA,EVYE,CAAC,GQNGP,AG0BAq1B,OH1BO,EAAEr1B,cG0Bc,EAAE,EAAE;AZ7BjC,AWFA,AVYA,IQNI,CAAC,CG0BCs1B,GZ9BGv9B,kBY8BkB,EAAE,SZ9BS,CAACJ,MAAM,EAAEK,QAAQ,EAAE;AWDzD,AVaA,EDXE,ASIA,CAAC,CAAC,AG0BA,EZ9BEL,GCWGsD,GDXG,ECWE,CAACC,CDXC,CCWC,EAAE,CDXC,EAAE,OAAO,CAAC,CAAC;AWD/B,EXEE,ASKA,ARMA,AWmBA,CAAC,CAAC,EZ9BE3D,ASKA,CAACsG,ERME,GDXG,ASKA,CAAC0C,ETLE,CAAC,CAAC,CCWCpF,OAAO,CQNC,EAAE,ARMA;AUZ5B,EXEE,ESKEoD,ARMA,EDXEtG,ECWEmD,CUbC4H,GFOG,CAAC,ARMA,GDXG,ACWA,GDXG1M,CCWC,GUbG,CAACsM,CXEC,CAAC9L,EWFE,EXEE,AWFA,CXECa,MAAM,CAAC;EACpC,AWFE,ACgCF,EXlBE,EDZEvB,ASKAmK,GTLG,AWFEqC,AVcF,EDZEpL,CAAC,CWFG,AVcF6D,KUdO,AVcF,CQPC,CEPG,CFOD,AEPE,AVcF5D,SAAS,CAACC,KUbpBkL,CVa0B,EAAEtH,CUbxB,GVa4B,EUbvB,CAAC,AVayB,CUbxB,GVa4BxC,KAAK,CAACuC,IUZ7CuH,CVYkD,CAAC,EUZ/C,AVYiDrH,KUZ5C,AVYiD,GUZ9C,AVYiD,CUZhD,AVYiD,CUZhD,CVYkDA,KAAK,GAAGF,KAAK,EAAEE,KAAK,EAAE,EAAE;AUXnG,EXCE,AY6BAw4B,EHzBE,CAAC,CAAC,AROAz4B,CDXC9D,CAAC,ECWE,CDXC,ACWA+D,CDXC,EAAE/D,CAAC,AY6BA,CXlBC,AWkBA+J,CXlBC,CDXCtJ,ECWER,AWkBA,CAAC89B,OZ7BO,CAAC79B,ACWA,CAAC6D,AWkBA,GAAGo4B,EZ7BE,ACWA,CAAC,CDXCn8B,CAAC,EAAE,EAAE,AY6BA;AD7B1C,EC+BEwJ,EZ9BE5K,ASKA,ARMA,GDXG,CSKCyH,AGyBA,CAAC23B,CZ9BCv9B,GSKG,CAACuI,MTLM,ASKA,CTLChJ,CAAC,ASKA,CTLC,SY8BS,CAAC,YAAM;AD9BvC,IXCI,ACYA,AWkBAu8B,EHzBEl2B,ETLE7F,GSKG,AROAsD,CQPC0E,GROG,CDZC,ACYAtI,CDZCQ,AY8BA,CAACqJ,CHzBC,CAAC1D,EROE,AWkBA,CAAC03B,CZ9BC,CAACn/B,ASKA,CAACoK,AROAtF,EDZE,ACYA,CDZC,ACYAxD,GQPG,AGyBA,CZ9BC,ASKA,CTLC,CCYC,AWkBAsJ,CZ9BC,ECYE9F,EAAE,CAAC7D,AWkBA,CAACo+B,IXlBI,CAAC,GWkBG,CXlBC,CWkBC,CXlBCn6B,IAAI,CAAC,GAAG,YAAY;AUZzE,EC+BE,CAAC,CZ9BC/D,AY8BA,EHzBE,AROA,IDZI,CAACnB,ACYA,EQPE,CTLC,CAAC,ACYAoF,EQPFmE,CTLKhI,ECYE,GAAGF,CDZC,CAACrB,GAAG,CAAC,GCYG,CAACsB,MAAM,CQPZ,CROc+D,CQPbqF,OROqB,GAAG,IQPV,AROchI,CQPb,IROkB,CAAC0C,KAAK,CAAC,EAAEE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,KAAK,EAAEE,KAAK,EAAE,EAAE;AUZzG,EXCE,AY+BAg6B,EH1BE,IROIj6B,CUbCwH,GCgCG,CAAC,GDhCG,AVaA,CUbCL,AVaAlH,IUbI,CVaC,CUbC,AVaA,EWmBJ,CXnBOjE,SAAS,CAACiE,KAAK,CAAC;EDVxC,AWFE,EFOA,AGyBAsF,EXnBE,EQNED,CTLCxJ,AWFEyL,CCgCD,CAAC2yB,GHzBG,CTLC,ASKAn1B,KGyBK,CHzBC,AGyBA,EDhCI,CAACoC,CFOD7B,GEPK,CAAC,EFOA,CAACP,CENrBoC,IAAI,CFMuB,CAAC5B,GENnB,EAAE,CFMuB,AENtB,EFMwB,IGyBI,CAAC,CAAC40B,GAAG,CD9B7ChzB,CC8B+C,GD9B3C,KAAK,EAAE,CAAC,CAAC;AXCxB,AWAA,IC8BI5B,EHzBEC,AROA,IWkBI,CAAC4b,EXlBE1hB,KWkBK,CAAC,CXlBC,CAAC9D,IQPI,CAAC0J,AROA,CAAC3F,GWkBG,EHzBE,AROA,AWkBA,CHzBCoF,CROC,EAAE,CAAC7E,EQPE,CAAC,GROG,CAACL,IAAI,EAAEG,QAAQ,CAAC,CAAC,EWkBE,CAAC;AZ5B/D,AWDA,EC8BE,CAAC,CXlBC,CAAC,AWkBA,CHzBCoC,GTJG1F,AY6BA,CAAC,CHzBC,CAAC6H,OAAO,CAACe,MAAM,CAACP,MTJM,ASIA,CTJC7I,ASIA,MTJM,EAAEK,QAAQ,EAAE;AWApD,EXCE,ACWA,AWmBAk8B,CXnBC,GDXGv8B,ASIA,MTJM,CSIC,GTJG,CSIHgI,AG0BI,CAACk2B,EZ9BE,EAAE,GY8BG,GAAG,CZ9BC,CAAC,CAAC,SSIJ,AG0BO,EH1BN/0B,cAAc,CAAC;AEJ3C,AVYA,EDVE,ESGE,AG0BAE,EZ7BEzJ,IY6BI,CAACo+B,CZ7BC,GAAG59B,KY6BK,CAAC,uBZ7BuB,CAACJ,MAAM,AY6BA,CAAC,CZ7BCK,AY6BA49B,GAAG,EAAE,GZ7BG,CAAC;AWD9D,AVaA,EDVE,AY4BA,CAAC,CHzBC,ETHEx/B,ESGFqE,CTHK,AWHAyI,AVaAtH,EDVEpE,CAAC,KCUK,CUbC,AVaAnB,CUbCuM,IAAI,AVaA,CQPZ,CENc,AVaA,CQPb1B,aAAa,EAAEC,qBAAqB,CAAC,CAACC,eAAe,CAAC;ETDhE,ASEA,AENE,AVaF,AWkBA6yB,IZ3BI39B,GWJKsM,AVaF,CAAC,CAAC,CDTC,ACSA5I,CDTCjD,AWJE,KAAK,AC+BF,CAAC8+B,CD/BG,AVaF,CUbG,AVaFt9B,IAAI,CAAClC,AWkBA,GAAG,EXlBE,CUbGuM,AVaF,CAAC/G,CDTC,EAAE,AWJE,KAAK,AVaF,AWkBN,CXlBO,CUbG,CAAC,MVaI,CAAC;AUZnD,AVaA,EQNE,ETHE,AY2BAqD,IZ3BI9G,CSGC,EGwBE,CAAC09B,CHxBHn2B,EGwBM,CAACqB,MAAM,CAACy0B,CZ3BC,GAAGn/B,IY2BI,EZ3BE,AY2BA,CZ3BCS,AY2BA,EHxBX,EAAC+J,cAAc,CAAC,ETHgB,CAACnJ,MAAM,CAAC;ASI/D,AROA,IDTI,AY0BAo+B,KZ1BKv+B,ACSAsE,CDTC,GAAG,CAAC,EAAEtE,ACSA,CDTC,ACSArB,EWiBE,CZ1BCiC,ACSA,AWiBA4I,EXjBE,IWiBI,CAACy0B,QAAQ,CZ1BC,CAAC/9B,AY0BA,CAAC,KZ1BK,EAAEF,CAAC,EAAE,EAAE;ASGlD,AEPA,EVcE,EWiBE,EZ1BEpB,EY0BI4/B,CZ1BD,ACSA,CAAC1/B,EDTE8B,ICSI,CAACtB,IAAI,CAACX,GAAG,CAAC,CAACuB,CDTC,AY0BE,CZ1BDF,CAAC,CAAC,AY0BEy8B,EXjBA,cWiBgB,CAACsB,SAAS;AHvB3D,AEPA,AVcA,IWiBItB,EZ1BE,IAAIj8B,QAAQ,CAACE,CY0BC,CAACq9B,KZ1BK,CAACn/B,GAAG,AY0BA,CZ1BC,EY0BE,EZ1BE,CAAC,EAAE,IY0BI;AHvB1C,AEPA,AVeA,IWgBI69B,EZ1BE,GCUGl4B,CDVC,CAACzF,MAAM,CAAC+B,CCUC,CAAChC,AWgBA,CAAC4/B,IXhBI,EDVE,ACUA,CDVC39B,CY0BC,GAAG,IAAI,YZ1BY,CAACC,IAAI,CAACZ,MAAM,EAAEvB,GAAG,CAAC,EAAE;ASGpE,AEPA,EVeE,EWgBEs/B,EZ1BEn+B,AWLA4L,GVeG,GDVG,CAAC/M,AWLA,CAAC,AC+BA,CAAC,CZ1BC,ACUAC,CDVC,GAAGsB,CCUC,KDVK,ACUA,CDVCvB,AY0BN,GZ1BS,CAAC,KCUK;AQPpC,ARQA,EUfI8D,EXKA,EY0BE+5B,OD/BS,CAAC7wB,GAAG,EAAEC,GC+BC,CAAC4yB,CD/BG,EAAE3yB,GAAG,EAAE,AC+BF,GAAG,KAAK;AXdvC,EDXE,EWLM,EC+BF2wB,ED/BM3wB,CVgBHtH,EUhBM,IAAI,IAAI,GC+BD,CD/BK,AVgBJ,AWeAu5B,CXfC3+B,MUhBUwM,AVgBJ,EAAEnH,AWeA,CD/BK,EC+BF+5B,GD/BO,EVgBF,EAAE,IUhBQ,EAAE,OC+BG;AHtBvD,ETFE,ACUA,EWeE,CAAC,CD/BO1yB,CC+BL,EZzBE/L,ASEA2J,AERM,AVgBN5K,CWeC,CAAC,CD/BO8M,GXMH,AWNM,AVgBN,CUhBO1L,AVgBNW,MQRM,AERM,CFQLgJ,ERQE,CAACrF,GQRG,EAAE,SRQS,CAACzD,IAAI,CAAC3B,MAAM,EAAEqF,QAAQ,CAAC;ADT/D,ACUA,EQRE,AGuBA,CAAC,CD/BK,KFQCqF,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACH,MAAM,CAAC;ATA1C,ASCA,ARSA,AWcA,ID/BQ,IAAI,CXOH7I,AWPI+K,AViBJrH,MUjBU,GAAGkH,GAAG,EXOF,CAAC3K,ACUA,CAAC0D,EDVE,EAAE3E,CAAC,EAAE,ACUA,EAAE4E,OAAO,EAAE;AQR3C,AGwBA,EZzBE,ACUA,EUjBM,EViBF,CAACR,CUjBK,CXOHlD,AWPI8K,ACgCJuyB,GDhCO,GAAG,AViBJ,CAAC35B,GUjBO,CAACiH,GViBD,CDVC,ACUA,AWeA,CZzBC5K,AWPI,ACgCJ2K,CXfC/G,EDVE,AWPIgH,ACgCJ,CZzBC,CYyBC,GZzBG1K,AWPI,IAAI,CAAC,AViBJ,CAAC,YAAY,CAAC,EDVE,CAACF,GAAG,EAAEjB,CAAC,CAAC,IAAIoB,2BAA2B,CAACH,GAAG,EAAEjB,CAAC,CAAC,IAAIqB,gBAAgB,EAAE;AAC3H,ASCA,ERSE,AWeA,EDhCM,EViBFvC,AWeE4/B,EDhCI,ACgCF,CDhCG5yB,ECgCAhC,CDhCG,AViBJ,CAACxK,EUjBMwM,EViBF,CUjBK,AViBJlH,CWeG,CAACuF,EDhCI,CAAC,EViBF,CAAC,CAACrF,IAAI,CAAC,CWeG,CAAC,QXfMC,EWeI,CAAC,EXfA,EAAE;ADRjD,ASAA,EERI,ACgCF25B,EXfE,AWeA,CAAC7/B,IZxBIqC,CYwBC,CXfC,CAACsD,CWeCoH,GAAG,QZxBQ,CAAC3K,CCSC,CAAC0D,CDTC,EAAE,ICSI,EAAEI,KAAK,CAAC;AQR1C,ETAE,AWRE,AViBF,AWeA+E,CXfC,CAAC,EDTExI,ACSAuD,IWeI,CZxBC,AYwBAkF,CZxBCxI,GYwBG,CAACyI,EXfE,CDTC,ACSA,CDTC/I,GAAG,CAAC,EAAE,CYwBC,CAACy9B,EAAE,CAAC,CXfC,CDTCz9B,ACSA,GDTG;AACpC,ASAA,AERA,EViBE,AWeAy9B,EAAE,CAACvf,IXfIva,EWeE,EAAE,GXfG;ADPhB,AWTA,AViBA,EWeEkF,OZvBO3I,CYuBC,CAACw9B,WAAW,CAAC,MAAM,CZvBC,AYuBA,CZvBC19B,GAAG,EAAEjB,CAAC,EAAE;ASCvC,ARSA,EDTE,AWTEiM,ACgCFnC,GDhCK,CXSD,EWTI,CFSDG,ARSAjF,CWcC,CAAC+E,EZvBEvI,EYuBE,CAACo9B,GZvBG,ESAE,CAAC10B,ETAE,CSAC,ARSA,CAACjF,CQTC,AGuBA,CAACy5B,EAAE,CAAC,GXdG,CDTC,CCSC,GDTG,EAAEl9B,MAAM,CAACC,QAAQ,IAAI3C,MAAM,CAACmC,GAAG,CAAC,CAAC,EAAE;AYwB1E,EZvBE,ASAA,ARSA,EUlBM,EXSFS,ASAAmI,ARSA,CAACtF,GDTG,CWTK,CFSH,CTAC,EAAE,ASAAuF,AETI,CAACkC,CVkBH,CAAC/G,CUlBK,IFSA,AETI,CFSHkF,ERSE,CUlBK,AVkBJ,CUlBK2B,CVkBHjH,EUlBM,MFSE,CAAC,GRSG,CAAC,IQTI,CAAC,SRSS,CAAC;AACzD,EDTE,ASAA,AETE,IXSElD,EAAE,CSACuI,ETAE,CSAC,GTAG,ESAEL,MAAM,CAACK,GAAG,GAAGA,GAAG,CAAC,EAAEL,MAAM;AAC1C,ARUA,EDVE,AWTE,IXSEjI,EAAE,CCUCsD,EDVE,KAAK,QCUQ,CAACC,OAAO,EAAE;AQTlC,AETA,EXSE,ACUA,IDVItD,ACUA,EDVE,ACUA0C,GDVGzC,OCUO,CAACqD,CDVC,MCUM,CAAC,IAAIf,QAAQ,CAACe,OAAO,CAAC,CAAC,EAAEN,YAAY,CAAC,aAAa,CAAC;AQT9E,AETA,EXUE,ACSA,IDTI,ACSAT,QAAQ,CAACe,OAAO,CAAC,IAAIrG,MAAM,CAACsG,MAAM,CAACD,OAAO,CAAC,CAACL,IAAI,CAAC,UAAUO,QAAQ,EAAE;AQT3E,AETA,IXUI,ACSA,KDTK,ECSE,CAACd,CDTCxC,EAAE,GAAGd,GAAG,CAACO,ACSA,CAAC6D,KDTK,CAAC5D,ECSE,CAAC,KDTK,CAAC,EAAE,EAAEO,EAAE,EAAE,EAAEL,EAAE,GAAG,CAACK,EAAE,GAAGD,EAAE,CAACE,IAAI,EAAE,EAAEC,IAAI,CAAC,EAAEP,EAAE,GAAG,IAAI,EAAE;ASAxF,AETA,EVmBE,CAAC,CAAC,EDTED,ACSAmD,IDTI,CAACjF,IAAI,CAACoC,EAAE,ACSA,CDTCnD,ACSA,KDTK,CAAC,QCSQ,CAAC;AAClC,EUnBIqN,IXWE,CWXG,CAACL,EXWA7L,CAAC,EWXI,EXWA0B,AWXEoK,GAAG,CXWD,CAAC5L,AWXE,MXWI,KAAKF,CAAC,EAAE;ASAlC,ARUA,IDTI,AWXI,KFUC2J,ARUArE,EUpBM,IAAIqG,OAAO,CAAC,CVoBH,CAAChH,EUpBM,CAACoH,EFUF,CAACnC,CRUC,EUpBM,AVoBJ,EUpBMiC,KAAK,EAAEC,GFUD,AEVI,CAAC,CFUH;ETE9C,ASDA,AEVE,AVoBF,CDTC,CAAC,ESDEzF,ARUA,CAAC1B,IDTIxC,ASDA,GTCG,ASDA2E,ARUA,EDTE,ACSAjC,MQVM,CAAC,KRUK,CAAC,IQVIuF,KAAK,EAAE,QRUQ,CAAC;EUnB7C,AVoBF,EDTExI,ASDA,ETCE,ACSA,CAACwC,CQVC+C,CTCC,IAAI,CSDC,CRUC,CAACxC,CQVCyF,KAAK,CAACjD,ARUA,CAAC,EAAEtC,GQVG,SRUS,CAAC,aAAa,CAAC;AUnBrD,EVoBE,EDTEhD,EAAE,ASDE4G,ARUFnE,GDTGnC,GAAG,ASDE,CRUD,CAACwC,CQVGyF,KAAK,CAAC3B,ARUF,CAAC,EAAE5D,GQVK,SRUO,CAAC,gBAAgB,CAAC;AUnBtD,AVoBA,EDTE,CAAC,CSDC,OAAO,CTCC;AWVZ,AVqBA,IDVI,ESDEsC,ETCE,CCUC5B,GQXG,EAAE4B,KRWK,CQXC,ARWA3B,aAAa,EAAEC,IAAI,EAAE;EUpBrC0G,AVqBF,IDVI,ASDA1D,AEVE,EVqBA,CUrBG,CXWD,CAAC9G,CSDC,ARWA+D,CDVC,CSDC+C,GTCG1G,ACUA,CAACyD,CDVC,CAAC,QAAQ,CAAC,ECUE,CAACC,CDVC,GCUG,CDVC,ACUA,EDVE1D,EAAE,ACUAyD,CDVC,QAAQ,CAAC,EAAE,CCUC,CAAC,SAAS,CAAC,CAAC;AAClE,IDVI,ASDA,AEVI,CXWH,ASDA,MEVU,GXWD,CWXK,CAACuG,MAAM,CAACK,UAAU,CAAC,IAAI,CAACJ,GAAG,CAAC;AVuB/C,EQZE,AEVE,CFUD,CAAC,ARYAxG,EDXE,IAAI5D,EAAE,EAAE,GCWG,GDXGC,ACWA,EDXE;ESApB,AEVE,AVsBF8D,EDXE,ESDE0E,YAAY,CRYC,EQZEJ,ARYA,YQZY,CAAC,EAAE,CAAC9F,MAAM,CAACkC,IRYI,CQZC,CAACc,MAAM,CAACC,KAAK,CAACC,EAAE,EAAE,YAAY,CAAC,CAAC;AETjF,EXWE,ASAAgD,ARWAzE,WAAW,CQXC,CAAC0E,ARWA,MQXM,GAAG,YAAY,cRWc;AUrBlD,EXYE,ACUAzE,EQXE,KTCKnE,ESDEkI,ETCE,GCUG,EAAE,QQXQ,EAAE,mCRWmC;ADT/D,AWZA,EFWE,ARWA9D,CQXC,URWU,EAAE,2CAA2C;ADR1D,ESDEuE,AEZEpI,AVsBF8D,IUtBM,GXaC3E,AWbE,KFYG,ARUA,CQVCmJ,CRUC,MQVM,GAAGlE,KAAK,CAACoC,KTCK,CAACrG,ASDA,CTCC,EAAEC,MAAM,EAAE,ICSI;EDRlD,ASDA,ARUA2D,EUtBM,EXaF,CAAC5D,CAAC,AWbI,CFYHiI,CTCC,EWbM,CAAC2B,CVsBH,EUtBM,AVsBJ,GUtBO,EFYF,EEZM,CAACD,MAAM,CAAC7L,MAAM,EAAE,QVsBI;AQT/C,ETCE,ACSA+F,IDTI,AWbM,MVsBA,CDTC7D,AWbM,CXaL,ACSA,GUtBS,CAAC2J,CXaL,KWbW,CAACK,EXaJ,EAAE,MWbY,CXaL9J,AWbM,IAAI,CAAC0J,GAAG,EAAE,CAAC,MXaA,CAAC5J,CAAC,EAAEC,ICSI,EDTE,CAAC;ASAhE,ETCE,ACSA6D,EUtBM,EXaF3D,CAAC,GAAGzD,GCSG,EAAE,CDTC,CAAC+B,SAAS,CAAC2B,QAAQ,CAACzB,IAAI,CAACqB,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,uDCSuD;AQT/G,ETCE,AWbE,AVsBF,IDTIF,CAAC,ICSI,CDTC,CCSC,ODTO,IAAIH,CAAC,CAACM,WAAW,EAAEH,CAAC,GAAGH,CAAC,CAACM,WAAW,CAACC,IAAI;ASA7D,ARUA,CAAC,CDTC,AWbE,IXaEJ,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOjB,KAAK,CAACsB,IAAI,CAACR,CAAC,CAAC;AWZtD,AVsBA,EDTE,ECSEyC,EDTEtC,CAAC,KAAK,ICSI,GAAGkB,IDTI,CCSC,CAAC8B,EDTE,QCSQ,CAAC,CAACC,aAAa,CAAC,kBDTkB,CAAC3C,IAAI,CAACN,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AAClH,ASAA,AEbA,AVsBA,IAAI8D,KQTKyD,KRSK,GAAG,OQTO,GAAG;ATE3B,AWdA,EFaE,ARSAhF,IQTIyB,GTCG/D,ACQA,EQTE,ARSAoC,GQTGoC,QAAQ,CAAC,GTCG,ACQA,CDRC7F,GAAG,EAAE6B,CSDC0H,ETCE,EAAE,CSDC,EAAE;AEZxC,EXcE,ACQAvF,EQTE,ETCEnC,ESDEqE,CTCC,CCQC,EAAEnC,CDRC,CSDC,GTCG,ASDAwF,ITCI1H,CSDC,CAACqE,CTCC,GAAGlG,CCQC,CQTC,CTCC,CAACf,MAAM,EAAE4C,GAAG,GAAG7B,GAAG,CAACf,MAAM;AWbvD,EXeE,ACOAiF,IQTMqD,CTED,ECOE,EDPExI,ACOAkF,CDPC,CSFG,ETEA,CAAC,ASFEsF,ETEAzH,GSFK,CTED,ASFEyF,GTEC,CCOC,GDPGlH,ASFE,KTEG,CAACwB,GAAG,CAAC,EAAE9C,CAAC,GAAG8C,GAAG,EAAE9C,CAAC,EAAE,EAAE+C,IAAI,CAAC/C,CAAC,CAAC,GAAGiB,GAAG,CAACjB,CAAC,CAAC;EAErE,AWhBEqM,AVsBF1H,GUtBK,CFaC8D,AEbA6D,GXgBCvJ,ACMA,EUtBI,AVsBFuC,CQTG,CTGD,AWhBE,EFaEkF,KAAK,CAAC/B,MAAM;ATI7B,ACMA,CAAC,GQTG,AEbI,MAAM8D,CFaH,CEbK,GAAG,IAAI,CAACJ,IAAI,EAAE;AXkB9B,ACMA,IUvBQ,EFaFhF,GTIG9F,ACMA+E,CUvBKoG,EFaF,AEbI,EFaFrF,CEbK,AVuBJ,CAACxC,IQVI,EEbM2H,CVuBH,EDNE,ACMA,EUvBM,CXiBH,IWjBQ,UAAU,GAAGA,KAAK,CAACC,EAAE,CAAC,GAAGA,EAAE,KAAKD,KAAK;EXkBvE,ACMA,EUvBM,EFaF9D,ARUArD,EDNE,AWjBIqH,EAAE,EXiBFxJ,AWjBI,CFaH,ARUA,EQVEwF,CRUCvI,KDNK,CAAC,ASJA,GRUG,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAK6B,SAAS,GAAG7B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,2EDN2E,CAAC;AAClK,ECMEkG,IQVIsC,AEbM,IAAI,CAACxG,CFaL,ARUA,CAAC0C,CQVC8D,CEbO,EAAE,GVuBH,CAAC9D,OAAO,CAAC;EAC3BwB,EQVE,AEbI,CFaH,ORUO,CAAChB,OAAO,CAACA,OAAO,CAAC;EQT3B,ARUA,CQVC,CAAC,AEbI,EVuBFkB,KUvBSmG,AVuBJ,EUvBM,CVuBH;EQTZ,AEbE,EVuBAlG,EQVEmE,KRUK,EQVE,ARUA9F,GQVG4E,MAAM,CAACkB,OAAO;EAE5BA,AEdE,AVuBF,CAAC,MQTM,CAACtD,MAAM,CAACd,KAAK,CAACc,MAAM,CAAC;AEb9B,EFeEsD,ARQA,IAAIlE,GQRG,CAAC,CAAC,IRQI,GAAG9C,KAAK,CAAC+C,UQRU,CAAC,EAAE,CRQC,CAAC,CAACH,KAAK,EQRE2C,ARQA7D,MQRM,CRQC,CQRC,ARQA;AUtBvD,EVuBE,EQREsE,ERQEhD,MAAM,GAAGhD,KAAK,CAACiD,EQRE,CAACsC,MAAM,CAAC,CRQC,CAAC,CAAC3C,KAAK,CAAC;AUtBxC,EVuBE,EQREA,ERQEM,GQRG,CAAC6B,IRQI,GQRG,ARQA/E,CQRCuF,IRQI,CAAC7C,CQRC,CAAC,QRQQ,CAACvB,OAAO,CAAC,CAACD,OAAO,CAAC;EQPjD,AEfE8H,AVuBF,CQRC,EAAE,CRQC7F,IUvBM,CAAC0F,IFeE5B,CEfG,AVuBF,EUvBI,CVuBDjH,CQRC,EAAE,ERQE,CAACoD,cAAc,CAAC,CAACR,KAAK,CAAC;EA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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _arrayWithHoles as arrayWithHoles, _defineProperty as defineProperty, _iterableToArrayLimit as iterableToArrayLimit, _nonIterableRest as nonIterableRest, _objectSpread2 as objectSpread2, _objectWithoutProperties as objectWithoutProperties, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _slicedToArray as slicedToArray, _unsupportedIterableToArray as unsupportedIterableToArray };\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n}\n\nfunction curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len3 = arguments.length, nextArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        nextArgs[_key3] = arguments[_key3];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nfunction isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nfunction isEmpty(obj) {\n  return !Object.keys(obj).length;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\nfunction validateChanges(initial, changes) {\n  if (!isObject(changes)) errorHandler('changeType');\n  if (Object.keys(changes).some(function (field) {\n    return !hasOwnProperty(initial, field);\n  })) errorHandler('changeField');\n  return changes;\n}\n\nfunction validateSelector(selector) {\n  if (!isFunction(selector)) errorHandler('selectorType');\n}\n\nfunction validateHandler(handler) {\n  if (!(isFunction(handler) || isObject(handler))) errorHandler('handlerType');\n  if (isObject(handler) && Object.values(handler).some(function (_handler) {\n    return !isFunction(_handler);\n  })) errorHandler('handlersType');\n}\n\nfunction validateInitial(initial) {\n  if (!initial) errorHandler('initialIsRequired');\n  if (!isObject(initial)) errorHandler('initialType');\n  if (isEmpty(initial)) errorHandler('initialContent');\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  initialIsRequired: 'initial state is required',\n  initialType: 'initial state should be an object',\n  initialContent: 'initial state shouldn\\'t be an empty object',\n  handlerType: 'handler should be an object or a function',\n  handlersType: 'all handlers should be a functions',\n  selectorType: 'selector should be a function',\n  changeType: 'provided value of changes should be an object',\n  changeField: 'it seams you want to change a field in the state which is not specified in the \"initial\" state',\n  \"default\": 'an unknown error accured in `state-local` package'\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  changes: validateChanges,\n  selector: validateSelector,\n  handler: validateHandler,\n  initial: validateInitial\n};\n\nfunction create(initial) {\n  var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  validators.initial(initial);\n  validators.handler(handler);\n  var state = {\n    current: initial\n  };\n  var didUpdate = curry(didStateUpdate)(state, handler);\n  var update = curry(updateState)(state);\n  var validate = curry(validators.changes)(initial);\n  var getChanges = curry(extractChanges)(state);\n\n  function getState() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (state) {\n      return state;\n    };\n    validators.selector(selector);\n    return selector(state.current);\n  }\n\n  function setState(causedChanges) {\n    compose(didUpdate, update, validate, getChanges)(causedChanges);\n  }\n\n  return [getState, setState];\n}\n\nfunction extractChanges(state, causedChanges) {\n  return isFunction(causedChanges) ? causedChanges(state.current) : causedChanges;\n}\n\nfunction updateState(state, changes) {\n  state.current = _objectSpread2(_objectSpread2({}, state.current), changes);\n  return changes;\n}\n\nfunction didStateUpdate(state, handler, changes) {\n  isFunction(handler) ? handler(state.current) : Object.keys(changes).forEach(function (field) {\n    var _handler$field;\n\n    return (_handler$field = handler[field]) === null || _handler$field === void 0 ? void 0 : _handler$field.call(handler, state.current[field]);\n  });\n  return changes;\n}\n\nvar index = {\n  create: create\n};\n\nexport default index;\n","var config = {\n  paths: {\n    vs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.33.0/min/vs'\n  }\n};\n\nexport default config;\n","function curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len2 = arguments.length, nextArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        nextArgs[_key2] = arguments[_key2];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nexport default curry;\n","function isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nexport default isObject;\n","import curry from '../utils/curry.js';\nimport isObject from '../utils/isObject.js';\n\n/**\n * validates the configuration object and informs about deprecation\n * @param {Object} config - the configuration object \n * @return {Object} config - the validated configuration object\n */\n\nfunction validateConfig(config) {\n  if (!config) errorHandler('configIsRequired');\n  if (!isObject(config)) errorHandler('configType');\n\n  if (config.urls) {\n    informAboutDeprecation();\n    return {\n      paths: {\n        vs: config.urls.monacoBase\n      }\n    };\n  }\n\n  return config;\n}\n/**\n * logs deprecation message\n */\n\n\nfunction informAboutDeprecation() {\n  console.warn(errorMessages.deprecation);\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  configIsRequired: 'the configuration object is required',\n  configType: 'the configuration object should be an object',\n  \"default\": 'an unknown error accured in `@monaco-editor/loader` package',\n  deprecation: \"Deprecation warning!\\n    You are using deprecated way of configuration.\\n\\n    Instead of using\\n      monaco.config({ urls: { monacoBase: '...' } })\\n    use\\n      monaco.config({ paths: { vs: '...' } })\\n\\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\\n  \"\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  config: validateConfig\n};\n\nexport default validators;\nexport { errorHandler, errorMessages };\n","var compose = function compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n};\n\nexport default compose;\n","import { objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nfunction merge(target, source) {\n  Object.keys(source).forEach(function (key) {\n    if (source[key] instanceof Object) {\n      if (target[key]) {\n        Object.assign(source[key], merge(target[key], source[key]));\n      }\n    }\n  });\n  return _objectSpread2(_objectSpread2({}, target), source);\n}\n\nexport default merge;\n","// The source (has been changed) is https://github.com/facebook/react/issues/5465#issuecomment-157888325\nvar CANCELATION_MESSAGE = {\n  type: 'cancelation',\n  msg: 'operation is manually canceled'\n};\n\nfunction makeCancelable(promise) {\n  var hasCanceled_ = false;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(function (val) {\n      return hasCanceled_ ? reject(CANCELATION_MESSAGE) : resolve(val);\n    });\n    promise[\"catch\"](reject);\n  });\n  return wrappedPromise.cancel = function () {\n    return hasCanceled_ = true;\n  }, wrappedPromise;\n}\n\nexport default makeCancelable;\nexport { CANCELATION_MESSAGE };\n","import { slicedToArray as _slicedToArray, objectWithoutProperties as _objectWithoutProperties } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(globalConfig) {\n  var _validators$config = validators.config(globalConfig),\n      monaco = _validators$config.monaco,\n      config = _objectWithoutProperties(_validators$config, [\"monaco\"]);\n\n  setState(function (state) {\n    return {\n      config: merge(state.config, config),\n      monaco: monaco\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var monaco = _ref.monaco,\n        isInitialized = _ref.isInitialized,\n        resolve = _ref.resolve;\n    return {\n      monaco: monaco,\n      isInitialized: isInitialized,\n      resolve: resolve\n    };\n  });\n\n  if (!state.isInitialized) {\n    setState({\n      isInitialized: true\n    });\n\n    if (state.monaco) {\n      state.resolve(state.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      state.resolve(window.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\n\nexport default loader;\n","import loader from './loader/index.js';\nexport { default } from './loader/index.js';\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\n/**\n * Check if given code is a number\n */\nfunction isNumber$1(code) {\n    return code > 47 && code < 58;\n}\n/**\n * Check if given character code is alpha code (letter through A to Z)\n */\nfunction isAlpha$1(code, from, to) {\n    from = from || 65; // A\n    to = to || 90; // Z\n    code &= ~32; // quick hack to convert any char code to uppercase char code\n    return code >= from && code <= to;\n}\nfunction isAlphaNumericWord(code) {\n    return isNumber$1(code) || isAlphaWord(code);\n}\nfunction isAlphaWord(code) {\n    return code === 95 /* _ */ || isAlpha$1(code);\n}\n/**\n * Check if given character code is a white-space character: a space character\n * or line breaks\n */\nfunction isWhiteSpace$3(code) {\n    return code === 32 /* space */\n        || code === 9 /* tab */\n        || code === 160; /* non-breaking space */\n}\n/**\n * Check if given character code is a space character\n */\nfunction isSpace(code) {\n    return isWhiteSpace$3(code)\n        || code === 10 /* LF */\n        || code === 13; /* CR */\n}\n/**\n * Check if given character code is a quote character\n */\nfunction isQuote$2(code) {\n    return code === 39 /* ' */ || code === 34 /* \" */;\n}\n\n/**\n * A streaming, character code-based string reader\n */\nclass Scanner {\n    constructor(str, start, end) {\n        if (end == null && typeof str === 'string') {\n            end = str.length;\n        }\n        this.string = str;\n        this.pos = this.start = start || 0;\n        this.end = end || 0;\n    }\n    /**\n     * Returns true only if the stream is at the end of the file.\n     */\n    eof() {\n        return this.pos >= this.end;\n    }\n    /**\n     * Creates a new stream instance which is limited to given `start` and `end`\n     * range. E.g. its `eof()` method will look at `end` property, not actual\n     * stream end\n     */\n    limit(start, end) {\n        return new Scanner(this.string, start, end);\n    }\n    /**\n     * Returns the next character code in the stream without advancing it.\n     * Will return NaN at the end of the file.\n     */\n    peek() {\n        return this.string.charCodeAt(this.pos);\n    }\n    /**\n     * Returns the next character in the stream and advances it.\n     * Also returns <code>undefined</code> when no more characters are available.\n     */\n    next() {\n        if (this.pos < this.string.length) {\n            return this.string.charCodeAt(this.pos++);\n        }\n    }\n    /**\n     * `match` can be a character code or a function that takes a character code\n     * and returns a boolean. If the next character in the stream 'matches'\n     * the given argument, it is consumed and returned.\n     * Otherwise, `false` is returned.\n     */\n    eat(match) {\n        const ch = this.peek();\n        const ok = typeof match === 'function' ? match(ch) : ch === match;\n        if (ok) {\n            this.next();\n        }\n        return ok;\n    }\n    /**\n     * Repeatedly calls <code>eat</code> with the given argument, until it\n     * fails. Returns <code>true</code> if any characters were eaten.\n     */\n    eatWhile(match) {\n        const start = this.pos;\n        while (!this.eof() && this.eat(match)) { /* */ }\n        return this.pos !== start;\n    }\n    /**\n     * Backs up the stream n characters. Backing it up further than the\n     * start of the current token will cause things to break, so be careful.\n     */\n    backUp(n) {\n        this.pos -= (n || 1);\n    }\n    /**\n     * Get the string between the start of the current token and the\n     * current stream position.\n     */\n    current() {\n        return this.substring(this.start, this.pos);\n    }\n    /**\n     * Returns substring for given range\n     */\n    substring(start, end) {\n        return this.string.slice(start, end);\n    }\n    /**\n     * Creates error object with current stream state\n     */\n    error(message, pos = this.pos) {\n        return new ScannerError(`${message} at ${pos + 1}`, pos, this.string);\n    }\n}\nclass ScannerError extends Error {\n    constructor(message, pos, str) {\n        super(message);\n        this.pos = pos;\n        this.string = str;\n    }\n}\n\nfunction tokenScanner$1(tokens) {\n    return {\n        tokens,\n        start: 0,\n        pos: 0,\n        size: tokens.length\n    };\n}\nfunction peek$3(scanner) {\n    return scanner.tokens[scanner.pos];\n}\nfunction next(scanner) {\n    return scanner.tokens[scanner.pos++];\n}\nfunction slice(scanner, from = scanner.start, to = scanner.pos) {\n    return scanner.tokens.slice(from, to);\n}\nfunction readable$1(scanner) {\n    return scanner.pos < scanner.size;\n}\nfunction consume$2(scanner, test) {\n    const token = peek$3(scanner);\n    if (token && test(token)) {\n        scanner.pos++;\n        return true;\n    }\n    return false;\n}\nfunction error$1(scanner, message, token = peek$3(scanner)) {\n    if (token && token.start != null) {\n        message += ` at ${token.start}`;\n    }\n    const err = new Error(message);\n    err['pos'] = token && token.start;\n    return err;\n}\n\nfunction abbreviation(abbr, options = {}) {\n    const scanner = tokenScanner$1(abbr);\n    const result = statements(scanner, options);\n    if (readable$1(scanner)) {\n        throw error$1(scanner, 'Unexpected character');\n    }\n    return result;\n}\nfunction statements(scanner, options) {\n    const result = {\n        type: 'TokenGroup',\n        elements: []\n    };\n    let ctx = result;\n    let node;\n    const stack = [];\n    while (readable$1(scanner)) {\n        if (node = element$2(scanner, options) || group(scanner, options)) {\n            ctx.elements.push(node);\n            if (consume$2(scanner, isChildOperator)) {\n                stack.push(ctx);\n                ctx = node;\n            }\n            else if (consume$2(scanner, isSiblingOperator$1)) {\n                continue;\n            }\n            else if (consume$2(scanner, isClimbOperator)) {\n                do {\n                    if (stack.length) {\n                        ctx = stack.pop();\n                    }\n                } while (consume$2(scanner, isClimbOperator));\n            }\n        }\n        else {\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Consumes group from given scanner\n */\nfunction group(scanner, options) {\n    if (consume$2(scanner, isGroupStart)) {\n        const result = statements(scanner, options);\n        const token = next(scanner);\n        if (isBracket$2(token, 'group', false)) {\n            result.repeat = repeater(scanner);\n        }\n        return result;\n    }\n}\n/**\n * Consumes single element from given scanner\n */\nfunction element$2(scanner, options) {\n    let attr;\n    const elem = {\n        type: 'TokenElement',\n        name: void 0,\n        attributes: void 0,\n        value: void 0,\n        repeat: void 0,\n        selfClose: false,\n        elements: []\n    };\n    if (elementName(scanner, options)) {\n        elem.name = slice(scanner);\n    }\n    while (readable$1(scanner)) {\n        scanner.start = scanner.pos;\n        if (!elem.repeat && !isEmpty(elem) && consume$2(scanner, isRepeater)) {\n            elem.repeat = scanner.tokens[scanner.pos - 1];\n        }\n        else if (!elem.value && text(scanner)) {\n            elem.value = getText(scanner);\n        }\n        else if (attr = shortAttribute(scanner, 'id', options) || shortAttribute(scanner, 'class', options) || attributeSet(scanner)) {\n            if (!elem.attributes) {\n                elem.attributes = Array.isArray(attr) ? attr.slice() : [attr];\n            }\n            else {\n                elem.attributes = elem.attributes.concat(attr);\n            }\n        }\n        else {\n            if (!isEmpty(elem) && consume$2(scanner, isCloseOperator)) {\n                elem.selfClose = true;\n                if (!elem.repeat && consume$2(scanner, isRepeater)) {\n                    elem.repeat = scanner.tokens[scanner.pos - 1];\n                }\n            }\n            break;\n        }\n    }\n    return !isEmpty(elem) ? elem : void 0;\n}\n/**\n * Consumes attribute set from given scanner\n */\nfunction attributeSet(scanner) {\n    if (consume$2(scanner, isAttributeSetStart)) {\n        const attributes = [];\n        let attr;\n        while (readable$1(scanner)) {\n            if (attr = attribute(scanner)) {\n                attributes.push(attr);\n            }\n            else if (consume$2(scanner, isAttributeSetEnd)) {\n                break;\n            }\n            else if (!consume$2(scanner, isWhiteSpace$2)) {\n                throw error$1(scanner, `Unexpected \"${peek$3(scanner).type}\" token`);\n            }\n        }\n        return attributes;\n    }\n}\n/**\n * Consumes attribute shorthand (class or id) from given scanner\n */\nfunction shortAttribute(scanner, type, options) {\n    if (isOperator$1(peek$3(scanner), type)) {\n        scanner.pos++;\n        const attr = {\n            name: [createLiteral$1(type)]\n        };\n        // Consume expression after shorthand start for React-like components\n        if (options.jsx && text(scanner)) {\n            attr.value = getText(scanner);\n            attr.expression = true;\n        }\n        else {\n            attr.value = literal$2(scanner) ? slice(scanner) : void 0;\n        }\n        return attr;\n    }\n}\n/**\n * Consumes single attribute from given scanner\n */\nfunction attribute(scanner) {\n    if (quoted(scanner)) {\n        // Consumed quoted value: it’s a value for default attribute\n        return {\n            value: slice(scanner)\n        };\n    }\n    if (literal$2(scanner, true)) {\n        return {\n            name: slice(scanner),\n            value: consume$2(scanner, isEquals) && (quoted(scanner) || literal$2(scanner, true))\n                ? slice(scanner)\n                : void 0\n        };\n    }\n}\nfunction repeater(scanner) {\n    return isRepeater(peek$3(scanner))\n        ? scanner.tokens[scanner.pos++]\n        : void 0;\n}\n/**\n * Consumes quoted value from given scanner, if possible\n */\nfunction quoted(scanner) {\n    const start = scanner.pos;\n    const quote = peek$3(scanner);\n    if (isQuote$1(quote)) {\n        scanner.pos++;\n        while (readable$1(scanner)) {\n            if (isQuote$1(next(scanner), quote.single)) {\n                scanner.start = start;\n                return true;\n            }\n        }\n        throw error$1(scanner, 'Unclosed quote', quote);\n    }\n    return false;\n}\n/**\n * Consumes literal (unquoted value) from given scanner\n */\nfunction literal$2(scanner, allowBrackets) {\n    const start = scanner.pos;\n    const brackets = {\n        attribute: 0,\n        expression: 0,\n        group: 0\n    };\n    while (readable$1(scanner)) {\n        const token = peek$3(scanner);\n        if (brackets.expression) {\n            // If we’re inside expression, we should consume all content in it\n            if (isBracket$2(token, 'expression')) {\n                brackets[token.context] += token.open ? 1 : -1;\n            }\n        }\n        else if (isQuote$1(token) || isOperator$1(token) || isWhiteSpace$2(token) || isRepeater(token)) {\n            break;\n        }\n        else if (isBracket$2(token)) {\n            if (!allowBrackets) {\n                break;\n            }\n            if (token.open) {\n                brackets[token.context]++;\n            }\n            else if (!brackets[token.context]) {\n                // Stop if found unmatched closing brace: it must be handled\n                // by parent consumer\n                break;\n            }\n            else {\n                brackets[token.context]--;\n            }\n        }\n        scanner.pos++;\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\n/**\n * Consumes element name from given scanner\n */\nfunction elementName(scanner, options) {\n    const start = scanner.pos;\n    if (options.jsx && consume$2(scanner, isCapitalizedLiteral)) {\n        // Check for edge case: consume immediate capitalized class names\n        // for React-like components, e.g. `Foo.Bar.Baz`\n        while (readable$1(scanner)) {\n            const { pos } = scanner;\n            if (!consume$2(scanner, isClassNameOperator) || !consume$2(scanner, isCapitalizedLiteral)) {\n                scanner.pos = pos;\n                break;\n            }\n        }\n    }\n    while (readable$1(scanner) && consume$2(scanner, isElementName)) {\n        // empty\n    }\n    if (scanner.pos !== start) {\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\n/**\n * Consumes text value from given scanner\n */\nfunction text(scanner) {\n    const start = scanner.pos;\n    if (consume$2(scanner, isTextStart)) {\n        let brackets = 0;\n        while (readable$1(scanner)) {\n            const token = next(scanner);\n            if (isBracket$2(token, 'expression')) {\n                if (token.open) {\n                    brackets++;\n                }\n                else if (!brackets) {\n                    break;\n                }\n                else {\n                    brackets--;\n                }\n            }\n        }\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\nfunction getText(scanner) {\n    let from = scanner.start;\n    let to = scanner.pos;\n    if (isBracket$2(scanner.tokens[from], 'expression', true)) {\n        from++;\n    }\n    if (isBracket$2(scanner.tokens[to - 1], 'expression', false)) {\n        to--;\n    }\n    return slice(scanner, from, to);\n}\nfunction isBracket$2(token, context, isOpen) {\n    return Boolean(token && token.type === 'Bracket'\n        && (!context || token.context === context)\n        && (isOpen == null || token.open === isOpen));\n}\nfunction isOperator$1(token, type) {\n    return Boolean(token && token.type === 'Operator' && (!type || token.operator === type));\n}\nfunction isQuote$1(token, isSingle) {\n    return Boolean(token && token.type === 'Quote' && (isSingle == null || token.single === isSingle));\n}\nfunction isWhiteSpace$2(token) {\n    return Boolean(token && token.type === 'WhiteSpace');\n}\nfunction isEquals(token) {\n    return isOperator$1(token, 'equal');\n}\nfunction isRepeater(token) {\n    return Boolean(token && token.type === 'Repeater');\n}\nfunction isLiteral$2(token) {\n    return token.type === 'Literal';\n}\nfunction isCapitalizedLiteral(token) {\n    if (isLiteral$2(token)) {\n        const ch = token.value.charCodeAt(0);\n        return ch >= 65 && ch <= 90;\n    }\n    return false;\n}\nfunction isElementName(token) {\n    return token.type === 'Literal' || token.type === 'RepeaterNumber' || token.type === 'RepeaterPlaceholder';\n}\nfunction isClassNameOperator(token) {\n    return isOperator$1(token, 'class');\n}\nfunction isAttributeSetStart(token) {\n    return isBracket$2(token, 'attribute', true);\n}\nfunction isAttributeSetEnd(token) {\n    return isBracket$2(token, 'attribute', false);\n}\nfunction isTextStart(token) {\n    return isBracket$2(token, 'expression', true);\n}\nfunction isGroupStart(token) {\n    return isBracket$2(token, 'group', true);\n}\nfunction createLiteral$1(value) {\n    return { type: 'Literal', value };\n}\nfunction isEmpty(elem) {\n    return !elem.name && !elem.value && !elem.attributes;\n}\nfunction isChildOperator(token) {\n    return isOperator$1(token, 'child');\n}\nfunction isSiblingOperator$1(token) {\n    return isOperator$1(token, 'sibling');\n}\nfunction isClimbOperator(token) {\n    return isOperator$1(token, 'climb');\n}\nfunction isCloseOperator(token) {\n    return isOperator$1(token, 'close');\n}\n\n/**\n * If consumes escape character, sets current stream range to escaped value\n */\nfunction escaped(scanner) {\n    if (scanner.eat(92 /* Escape */)) {\n        scanner.start = scanner.pos;\n        if (!scanner.eof()) {\n            scanner.pos++;\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction tokenize$1(source) {\n    const scanner = new Scanner(source);\n    const result = [];\n    const ctx = {\n        group: 0,\n        attribute: 0,\n        expression: 0,\n        quote: 0\n    };\n    let ch = 0;\n    let token;\n    while (!scanner.eof()) {\n        ch = scanner.peek();\n        token = getToken$1(scanner, ctx);\n        if (token) {\n            result.push(token);\n            if (token.type === 'Quote') {\n                ctx.quote = ch === ctx.quote ? 0 : ch;\n            }\n            else if (token.type === 'Bracket') {\n                ctx[token.context] += token.open ? 1 : -1;\n            }\n        }\n        else {\n            throw scanner.error('Unexpected character');\n        }\n    }\n    return result;\n}\n/**\n * Returns next token from given scanner, if possible\n */\nfunction getToken$1(scanner, ctx) {\n    return field$2(scanner, ctx)\n        || repeaterPlaceholder(scanner)\n        || repeaterNumber(scanner)\n        || repeater$1(scanner)\n        || whiteSpace$1(scanner)\n        || literal$1$1(scanner, ctx)\n        || operator$1(scanner)\n        || quote(scanner)\n        || bracket$1(scanner);\n}\n/**\n * Consumes literal from given scanner\n */\nfunction literal$1$1(scanner, ctx) {\n    const start = scanner.pos;\n    let value = '';\n    while (!scanner.eof()) {\n        // Consume escaped sequence no matter of context\n        if (escaped(scanner)) {\n            value += scanner.current();\n            continue;\n        }\n        const ch = scanner.peek();\n        if (ch === ctx.quote || ch === 36 /* Dollar */ || isAllowedOperator(ch, ctx)) {\n            // 1. Found matching quote\n            // 2. The `$` character has special meaning in every context\n            // 3. Depending on context, some characters should be treated as operators\n            break;\n        }\n        if (ctx.expression && ch === 125 /* CurlyBracketClose */) {\n            break;\n        }\n        if (!ctx.quote && !ctx.expression) {\n            // Consuming element name\n            if (!ctx.attribute && !isElementName$1(ch)) {\n                break;\n            }\n            if (isAllowedSpace(ch, ctx) || isAllowedRepeater(ch, ctx) || isQuote$2(ch) || bracketType(ch)) {\n                // Stop for characters not allowed in unquoted literal\n                break;\n            }\n        }\n        value += scanner.string[scanner.pos++];\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return {\n            type: 'Literal',\n            value,\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes white space characters as string literal from given scanner\n */\nfunction whiteSpace$1(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(isSpace)) {\n        return {\n            type: 'WhiteSpace',\n            start,\n            end: scanner.pos,\n            value: scanner.substring(start, scanner.pos)\n        };\n    }\n}\n/**\n * Consumes quote from given scanner\n */\nfunction quote(scanner) {\n    const ch = scanner.peek();\n    if (isQuote$2(ch)) {\n        return {\n            type: 'Quote',\n            single: ch === 39 /* SingleQuote */,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes bracket from given scanner\n */\nfunction bracket$1(scanner) {\n    const ch = scanner.peek();\n    const context = bracketType(ch);\n    if (context) {\n        return {\n            type: 'Bracket',\n            open: isOpenBracket$2(ch),\n            context,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes operator from given scanner\n */\nfunction operator$1(scanner) {\n    const op = operatorType$1(scanner.peek());\n    if (op) {\n        return {\n            type: 'Operator',\n            operator: op,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes node repeat token from current stream position and returns its\n * parsed value\n */\nfunction repeater$1(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(42 /* Asterisk */)) {\n        scanner.start = scanner.pos;\n        let count = 1;\n        let implicit = false;\n        if (scanner.eatWhile(isNumber$1)) {\n            count = Number(scanner.current());\n        }\n        else {\n            implicit = true;\n        }\n        return {\n            type: 'Repeater',\n            count,\n            value: 0,\n            implicit,\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes repeater placeholder `$#` from given scanner\n */\nfunction repeaterPlaceholder(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(36 /* Dollar */) && scanner.eat(35 /* Hash */)) {\n        return {\n            type: 'RepeaterPlaceholder',\n            value: void 0,\n            start,\n            end: scanner.pos\n        };\n    }\n    scanner.pos = start;\n}\n/**\n * Consumes numbering token like `$` from given scanner state\n */\nfunction repeaterNumber(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(36 /* Dollar */)) {\n        const size = scanner.pos - start;\n        let reverse = false;\n        let base = 1;\n        let parent = 0;\n        if (scanner.eat(64 /* At */)) {\n            // Consume numbering modifiers\n            while (scanner.eat(94 /* Climb */)) {\n                parent++;\n            }\n            reverse = scanner.eat(45 /* Dash */);\n            scanner.start = scanner.pos;\n            if (scanner.eatWhile(isNumber$1)) {\n                base = Number(scanner.current());\n            }\n        }\n        scanner.start = start;\n        return {\n            type: 'RepeaterNumber',\n            size,\n            reverse,\n            base,\n            parent,\n            start,\n            end: scanner.pos\n        };\n    }\n}\nfunction field$2(scanner, ctx) {\n    const start = scanner.pos;\n    // Fields are allowed inside expressions and attributes\n    if ((ctx.expression || ctx.attribute) && scanner.eat(36 /* Dollar */) && scanner.eat(123 /* CurlyBracketOpen */)) {\n        scanner.start = scanner.pos;\n        let index;\n        let name = '';\n        if (scanner.eatWhile(isNumber$1)) {\n            // It’s a field\n            index = Number(scanner.current());\n            name = scanner.eat(58 /* Colon */) ? consumePlaceholder$2(scanner) : '';\n        }\n        else if (isAlpha$1(scanner.peek())) {\n            // It’s a variable\n            name = consumePlaceholder$2(scanner);\n        }\n        if (scanner.eat(125 /* CurlyBracketClose */)) {\n            return {\n                type: 'Field',\n                index, name,\n                start,\n                end: scanner.pos\n            };\n        }\n        throw scanner.error('Expecting }');\n    }\n    // If we reached here then there’s no valid field here, revert\n    // back to starting position\n    scanner.pos = start;\n}\n/**\n * Consumes a placeholder: value right after `:` in field. Could be empty\n */\nfunction consumePlaceholder$2(stream) {\n    const stack = [];\n    stream.start = stream.pos;\n    while (!stream.eof()) {\n        if (stream.eat(123 /* CurlyBracketOpen */)) {\n            stack.push(stream.pos);\n        }\n        else if (stream.eat(125 /* CurlyBracketClose */)) {\n            if (!stack.length) {\n                stream.pos--;\n                break;\n            }\n            stack.pop();\n        }\n        else {\n            stream.pos++;\n        }\n    }\n    if (stack.length) {\n        stream.pos = stack.pop();\n        throw stream.error(`Expecting }`);\n    }\n    return stream.current();\n}\n/**\n * Check if given character code is an operator and it’s allowed in current context\n */\nfunction isAllowedOperator(ch, ctx) {\n    const op = operatorType$1(ch);\n    if (!op || ctx.quote || ctx.expression) {\n        // No operators inside quoted values or expressions\n        return false;\n    }\n    // Inside attributes, only `equals` is allowed\n    return !ctx.attribute || op === 'equal';\n}\n/**\n * Check if given character is a space character and is allowed to be consumed\n * as a space token in current context\n */\nfunction isAllowedSpace(ch, ctx) {\n    return isSpace(ch) && !ctx.expression;\n}\n/**\n * Check if given character can be consumed as repeater in current context\n */\nfunction isAllowedRepeater(ch, ctx) {\n    return ch === 42 /* Asterisk */ && !ctx.attribute && !ctx.expression;\n}\n/**\n * If given character is a bracket, returns it’s type\n */\nfunction bracketType(ch) {\n    if (ch === 40 /* RoundBracketOpen */ || ch === 41 /* RoundBracketClose */) {\n        return 'group';\n    }\n    if (ch === 91 /* SquareBracketOpen */ || ch === 93 /* SquareBracketClose */) {\n        return 'attribute';\n    }\n    if (ch === 123 /* CurlyBracketOpen */ || ch === 125 /* CurlyBracketClose */) {\n        return 'expression';\n    }\n}\n/**\n * If given character is an operator, returns it’s type\n */\nfunction operatorType$1(ch) {\n    return (ch === 62 /* Child */ && 'child')\n        || (ch === 43 /* Sibling */ && 'sibling')\n        || (ch === 94 /* Climb */ && 'climb')\n        || (ch === 46 /* Dot */ && 'class')\n        || (ch === 35 /* Hash */ && 'id')\n        || (ch === 47 /* Slash */ && 'close')\n        || (ch === 61 /* Equals */ && 'equal')\n        || void 0;\n}\n/**\n * Check if given character is an open bracket\n */\nfunction isOpenBracket$2(ch) {\n    return ch === 123 /* CurlyBracketOpen */\n        || ch === 91 /* SquareBracketOpen */\n        || ch === 40 /* RoundBracketOpen */;\n}\n/**\n * Check if given character is allowed in element name\n */\nfunction isElementName$1(ch) {\n    return isAlphaNumericWord(ch)\n        || ch === 45 /* Dash */\n        || ch === 58 /* Colon */\n        || ch === 33 /* Excl */;\n}\n\nconst operators = {\n    child: '>',\n    class: '.',\n    climb: '^',\n    id: '#',\n    equal: '=',\n    close: '/',\n    sibling: '+'\n};\nconst tokenVisitor = {\n    Literal(token) {\n        return token.value;\n    },\n    Quote(token) {\n        return token.single ? '\\'' : '\"';\n    },\n    Bracket(token) {\n        if (token.context === 'attribute') {\n            return token.open ? '[' : ']';\n        }\n        else if (token.context === 'expression') {\n            return token.open ? '{' : '}';\n        }\n        else {\n            return token.open ? '(' : '}';\n        }\n    },\n    Operator(token) {\n        return operators[token.operator];\n    },\n    Field(token, state) {\n        if (token.index != null) {\n            // It’s a field: by default, return TextMate-compatible field\n            return token.name\n                ? `\\${${token.index}:${token.name}}`\n                : `\\${${token.index}`;\n        }\n        else if (token.name) {\n            // It’s a variable\n            return state.getVariable(token.name);\n        }\n        return '';\n    },\n    RepeaterPlaceholder(token, state) {\n        // Find closest implicit repeater\n        let repeater;\n        for (let i = state.repeaters.length - 1; i >= 0; i--) {\n            if (state.repeaters[i].implicit) {\n                repeater = state.repeaters[i];\n                break;\n            }\n        }\n        state.inserted = true;\n        return state.getText(repeater && repeater.value);\n    },\n    RepeaterNumber(token, state) {\n        let value = 1;\n        const lastIx = state.repeaters.length - 1;\n        // const repeaterIx = Math.max(0, state.repeaters.length - 1 - token.parent);\n        const repeater = state.repeaters[lastIx];\n        if (repeater) {\n            value = token.reverse\n                ? token.base + repeater.count - repeater.value - 1\n                : token.base + repeater.value;\n            if (token.parent) {\n                const parentIx = Math.max(0, lastIx - token.parent);\n                if (parentIx !== lastIx) {\n                    const parentRepeater = state.repeaters[parentIx];\n                    value += repeater.count * parentRepeater.value;\n                }\n            }\n        }\n        let result = String(value);\n        while (result.length < token.size) {\n            result = '0' + result;\n        }\n        return result;\n    },\n    WhiteSpace(token) {\n        return token.value;\n    }\n};\n/**\n * Converts given value token to string\n */\nfunction stringify$1(token, state) {\n    if (!tokenVisitor[token.type]) {\n        throw new Error(`Unknown token ${token.type}`);\n    }\n    return tokenVisitor[token.type](token, state);\n}\n\nconst urlRegex = /^((https?:|ftp:|file:)?\\/\\/|(www|ftp)\\.)[^ ]*$/;\nconst emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,5}$/;\n/**\n * Converts given token-based abbreviation into simplified and unrolled node-based\n * abbreviation\n */\nfunction convert(abbr, options = {}) {\n    let textInserted = false;\n    let cleanText;\n    if (options.text) {\n        if (Array.isArray(options.text)) {\n            cleanText = options.text.filter(s => s.trim());\n        }\n        else {\n            cleanText = options.text;\n        }\n    }\n    const result = {\n        type: 'Abbreviation',\n        children: convertGroup(abbr, {\n            inserted: false,\n            repeaters: [],\n            text: options.text,\n            cleanText,\n            repeatGuard: options.maxRepeat || Number.POSITIVE_INFINITY,\n            getText(pos) {\n                var _a;\n                textInserted = true;\n                let value;\n                if (Array.isArray(options.text)) {\n                    if (pos !== undefined && pos >= 0 && pos < cleanText.length) {\n                        return cleanText[pos];\n                    }\n                    value = pos !== undefined ? options.text[pos] : options.text.join('\\n');\n                }\n                else {\n                    value = (_a = options.text) !== null && _a !== void 0 ? _a : '';\n                }\n                return value;\n            },\n            getVariable(name) {\n                const varValue = options.variables && options.variables[name];\n                return varValue != null ? varValue : name;\n            }\n        })\n    };\n    if (options.text != null && !textInserted) {\n        // Text given but no implicitly repeated elements: insert it into\n        // deepest child\n        const deepest = deepestNode(last$1(result.children));\n        if (deepest) {\n            const text = Array.isArray(options.text) ? options.text.join('\\n') : options.text;\n            insertText(deepest, text);\n            if (deepest.name === 'a' && options.href) {\n                // Automatically update value of `<a>` element if inserting URL or email\n                insertHref(deepest, text);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Converts given statement to abbreviation nodes\n */\nfunction convertStatement(node, state) {\n    let result = [];\n    if (node.repeat) {\n        // Node is repeated: we should create copies of given node\n        // and supply context token with actual repeater state\n        const original = node.repeat;\n        const repeat = Object.assign({}, original);\n        repeat.count = repeat.implicit && Array.isArray(state.text)\n            ? state.cleanText.length\n            : (repeat.count || 1);\n        let items;\n        state.repeaters.push(repeat);\n        for (let i = 0; i < repeat.count; i++) {\n            repeat.value = i;\n            node.repeat = repeat;\n            items = isGroup(node)\n                ? convertGroup(node, state)\n                : convertElement(node, state);\n            if (repeat.implicit && !state.inserted) {\n                // It’s an implicit repeater but no repeater placeholders found inside,\n                // we should insert text into deepest node\n                const target = last$1(items);\n                const deepest = target && deepestNode(target);\n                if (deepest) {\n                    insertText(deepest, state.getText(repeat.value));\n                }\n            }\n            result = result.concat(items);\n            // We should output at least one repeated item even if it’s reached\n            // repeat limit\n            if (--state.repeatGuard <= 0) {\n                break;\n            }\n        }\n        state.repeaters.pop();\n        node.repeat = original;\n        if (repeat.implicit) {\n            state.inserted = true;\n        }\n    }\n    else {\n        result = result.concat(isGroup(node) ? convertGroup(node, state) : convertElement(node, state));\n    }\n    return result;\n}\nfunction convertElement(node, state) {\n    let children = [];\n    const elem = {\n        type: 'AbbreviationNode',\n        name: node.name && stringifyName(node.name, state),\n        value: node.value && stringifyValue$1(node.value, state),\n        attributes: void 0,\n        children,\n        repeat: node.repeat && Object.assign({}, node.repeat),\n        selfClosing: node.selfClose,\n    };\n    let result = [elem];\n    for (const child of node.elements) {\n        children = children.concat(convertStatement(child, state));\n    }\n    if (node.attributes) {\n        elem.attributes = [];\n        for (const attr of node.attributes) {\n            elem.attributes.push(convertAttribute(attr, state));\n        }\n    }\n    // In case if current node is a text-only snippet without fields, we should\n    // put all children as siblings\n    if (!elem.name && !elem.attributes && elem.value && !elem.value.some(isField$1)) {\n        // XXX it’s unclear that `children` is not bound to `elem`\n        // due to concat operation\n        result = result.concat(children);\n    }\n    else {\n        elem.children = children;\n    }\n    return result;\n}\nfunction convertGroup(node, state) {\n    let result = [];\n    for (const child of node.elements) {\n        result = result.concat(convertStatement(child, state));\n    }\n    if (node.repeat) {\n        result = attachRepeater(result, node.repeat);\n    }\n    return result;\n}\nfunction convertAttribute(node, state) {\n    let implied = false;\n    let isBoolean = false;\n    let valueType = node.expression ? 'expression' : 'raw';\n    let value;\n    const name = node.name && stringifyName(node.name, state);\n    if (name && name[0] === '!') {\n        implied = true;\n    }\n    if (name && name[name.length - 1] === '.') {\n        isBoolean = true;\n    }\n    if (node.value) {\n        const tokens = node.value.slice();\n        if (isQuote$1(tokens[0])) {\n            // It’s a quoted value: remove quotes from output but mark attribute\n            // value as quoted\n            const quote = tokens.shift();\n            if (tokens.length && last$1(tokens).type === quote.type) {\n                tokens.pop();\n            }\n            valueType = quote.single ? 'singleQuote' : 'doubleQuote';\n        }\n        else if (isBracket$2(tokens[0], 'expression', true)) {\n            // Value is expression: remove brackets but mark value type\n            valueType = 'expression';\n            tokens.shift();\n            if (isBracket$2(last$1(tokens), 'expression', false)) {\n                tokens.pop();\n            }\n        }\n        value = stringifyValue$1(tokens, state);\n    }\n    return {\n        name: isBoolean || implied\n            ? name.slice(implied ? 1 : 0, isBoolean ? -1 : void 0)\n            : name,\n        value,\n        boolean: isBoolean,\n        implied,\n        valueType\n    };\n}\n/**\n * Converts given token list to string\n */\nfunction stringifyName(tokens, state) {\n    let str = '';\n    for (let i = 0; i < tokens.length; i++) {\n        str += stringify$1(tokens[i], state);\n    }\n    return str;\n}\n/**\n * Converts given token list to value list\n */\nfunction stringifyValue$1(tokens, state) {\n    const result = [];\n    let str = '';\n    for (let i = 0, token; i < tokens.length; i++) {\n        token = tokens[i];\n        if (isField$1(token)) {\n            // We should keep original fields in output since some editors has their\n            // own syntax for field or doesn’t support fields at all so we should\n            // capture actual field location in output stream\n            if (str) {\n                result.push(str);\n                str = '';\n            }\n            result.push(token);\n        }\n        else {\n            str += stringify$1(token, state);\n        }\n    }\n    if (str) {\n        result.push(str);\n    }\n    return result;\n}\nfunction isGroup(node) {\n    return node.type === 'TokenGroup';\n}\nfunction isField$1(token) {\n    return typeof token === 'object' && token.type === 'Field' && token.index != null;\n}\nfunction last$1(arr) {\n    return arr[arr.length - 1];\n}\nfunction deepestNode(node) {\n    return node.children.length ? deepestNode(last$1(node.children)) : node;\n}\nfunction insertText(node, text) {\n    if (node.value) {\n        const lastToken = last$1(node.value);\n        if (typeof lastToken === 'string') {\n            node.value[node.value.length - 1] += text;\n        }\n        else {\n            node.value.push(text);\n        }\n    }\n    else {\n        node.value = [text];\n    }\n}\nfunction insertHref(node, text) {\n    var _a;\n    let href = '';\n    if (urlRegex.test(text)) {\n        href = text;\n        if (!/\\w+:/.test(href) && !href.startsWith('//')) {\n            href = `http://${href}`;\n        }\n    }\n    else if (emailRegex.test(text)) {\n        href = `mailto:${text}`;\n    }\n    const hrefAttribute = (_a = node.attributes) === null || _a === void 0 ? void 0 : _a.find(attr => attr.name === 'href');\n    if (!hrefAttribute) {\n        if (!node.attributes) {\n            node.attributes = [];\n        }\n        node.attributes.push({ name: 'href', value: [href], valueType: 'doubleQuote' });\n    }\n    else if (!hrefAttribute.value) {\n        hrefAttribute.value = [href];\n    }\n}\nfunction attachRepeater(items, repeater) {\n    for (const item of items) {\n        if (!item.repeat) {\n            item.repeat = Object.assign({}, repeater);\n        }\n    }\n    return items;\n}\n\n/**\n * Parses given abbreviation into node tree\n */\nfunction parseAbbreviation(abbr, options) {\n    try {\n        const tokens = typeof abbr === 'string' ? tokenize$1(abbr) : abbr;\n        return convert(abbreviation(tokens, options), options);\n    }\n    catch (err) {\n        if (err instanceof ScannerError && typeof abbr === 'string') {\n            err.message += `\\n${abbr}\\n${'-'.repeat(err.pos)}^`;\n        }\n        throw err;\n    }\n}\n\nfunction tokenize(abbr, isValue) {\n    let brackets = 0;\n    let token;\n    const scanner = new Scanner(abbr);\n    const tokens = [];\n    while (!scanner.eof()) {\n        token = getToken(scanner, brackets === 0 && !isValue);\n        if (!token) {\n            throw scanner.error('Unexpected character');\n        }\n        if (token.type === 'Bracket') {\n            if (!brackets && token.open) {\n                mergeTokens(scanner, tokens);\n            }\n            brackets += token.open ? 1 : -1;\n            if (brackets < 0) {\n                throw scanner.error('Unexpected bracket', token.start);\n            }\n        }\n        tokens.push(token);\n        // Forcibly consume next operator after unit-less numeric value or color:\n        // next dash `-` must be used as value delimiter\n        if (shouldConsumeDashAfter(token) && (token = operator(scanner))) {\n            tokens.push(token);\n        }\n    }\n    return tokens;\n}\n/**\n * Returns next token from given scanner, if possible\n */\nfunction getToken(scanner, short) {\n    return field$1(scanner)\n        || numberValue(scanner)\n        || colorValue(scanner)\n        || stringValue(scanner)\n        || bracket(scanner)\n        || operator(scanner)\n        || whiteSpace(scanner)\n        || literal$1(scanner, short);\n}\nfunction field$1(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(36 /* Dollar */) && scanner.eat(123 /* CurlyBracketOpen */)) {\n        scanner.start = scanner.pos;\n        let index;\n        let name = '';\n        if (scanner.eatWhile(isNumber$1)) {\n            // It’s a field\n            index = Number(scanner.current());\n            name = scanner.eat(58 /* Colon */) ? consumePlaceholder$1(scanner) : '';\n        }\n        else if (isAlpha$1(scanner.peek())) {\n            // It’s a variable\n            name = consumePlaceholder$1(scanner);\n        }\n        if (scanner.eat(125 /* CurlyBracketClose */)) {\n            return {\n                type: 'Field',\n                index, name,\n                start,\n                end: scanner.pos\n            };\n        }\n        throw scanner.error('Expecting }');\n    }\n    // If we reached here then there’s no valid field here, revert\n    // back to starting position\n    scanner.pos = start;\n}\n/**\n * Consumes a placeholder: value right after `:` in field. Could be empty\n */\nfunction consumePlaceholder$1(stream) {\n    const stack = [];\n    stream.start = stream.pos;\n    while (!stream.eof()) {\n        if (stream.eat(123 /* CurlyBracketOpen */)) {\n            stack.push(stream.pos);\n        }\n        else if (stream.eat(125 /* CurlyBracketClose */)) {\n            if (!stack.length) {\n                stream.pos--;\n                break;\n            }\n            stack.pop();\n        }\n        else {\n            stream.pos++;\n        }\n    }\n    if (stack.length) {\n        stream.pos = stack.pop();\n        throw stream.error(`Expecting }`);\n    }\n    return stream.current();\n}\n/**\n * Consumes literal from given scanner\n * @param short Use short notation for consuming value.\n * The difference between “short” and “full” notation is that first one uses\n * alpha characters only and used for extracting keywords from abbreviation,\n * while “full” notation also supports numbers and dashes\n */\nfunction literal$1(scanner, short) {\n    const start = scanner.pos;\n    if (scanner.eat(isIdentPrefix)) {\n        // SCSS or LESS variable\n        // NB a bit dirty hack: if abbreviation starts with identifier prefix,\n        // consume alpha characters only to allow embedded variables\n        scanner.eatWhile(start ? isKeyword : isLiteral);\n    }\n    else if (scanner.eat(isAlphaWord)) {\n        scanner.eatWhile(short ? isLiteral : isKeyword);\n    }\n    else {\n        // Allow dots only at the beginning of literal\n        scanner.eat(46 /* Dot */);\n        scanner.eatWhile(isLiteral);\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return createLiteral(scanner, scanner.start = start);\n    }\n}\nfunction createLiteral(scanner, start = scanner.start, end = scanner.pos) {\n    return {\n        type: 'Literal',\n        value: scanner.substring(start, end),\n        start,\n        end\n    };\n}\n/**\n * Consumes numeric CSS value (number with optional unit) from current stream,\n * if possible\n */\nfunction numberValue(scanner) {\n    const start = scanner.pos;\n    if (consumeNumber(scanner)) {\n        scanner.start = start;\n        const rawValue = scanner.current();\n        // eat unit, which can be a % or alpha word\n        scanner.start = scanner.pos;\n        scanner.eat(37 /* Percent */) || scanner.eatWhile(isAlphaWord);\n        return {\n            type: 'NumberValue',\n            value: Number(rawValue),\n            rawValue,\n            unit: scanner.current(),\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes quoted string value from given scanner\n */\nfunction stringValue(scanner) {\n    const ch = scanner.peek();\n    const start = scanner.pos;\n    let finished = false;\n    if (isQuote$2(ch)) {\n        scanner.pos++;\n        while (!scanner.eof()) {\n            // Do not throw error on malformed string\n            if (scanner.eat(ch)) {\n                finished = true;\n                break;\n            }\n            else {\n                scanner.pos++;\n            }\n        }\n        scanner.start = start;\n        return {\n            type: 'StringValue',\n            value: scanner.substring(start + 1, scanner.pos - (finished ? 1 : 0)),\n            quote: ch === 39 /* SingleQuote */ ? 'single' : 'double',\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes a color token from given string\n */\nfunction colorValue(scanner) {\n    // supported color variations:\n    // #abc   → #aabbccc\n    // #0     → #000000\n    // #fff.5 → rgba(255, 255, 255, 0.5)\n    // #t     → transparent\n    const start = scanner.pos;\n    if (scanner.eat(35 /* Hash */)) {\n        const valueStart = scanner.pos;\n        let color = '';\n        let alpha = '';\n        if (scanner.eatWhile(isHex)) {\n            color = scanner.substring(valueStart, scanner.pos);\n            alpha = colorAlpha(scanner);\n        }\n        else if (scanner.eat(116 /* Transparent */)) {\n            color = '0';\n            alpha = colorAlpha(scanner) || '0';\n        }\n        else {\n            alpha = colorAlpha(scanner);\n        }\n        if (color || alpha || scanner.eof()) {\n            const { r, g, b, a } = parseColor(color, alpha);\n            return {\n                type: 'ColorValue',\n                r, g, b, a,\n                raw: scanner.substring(start + 1, scanner.pos),\n                start,\n                end: scanner.pos\n            };\n        }\n        else {\n            // Consumed # but no actual value: invalid color value, treat it as literal\n            return createLiteral(scanner, start);\n        }\n    }\n    scanner.pos = start;\n}\n/**\n * Consumes alpha value of color: `.1`\n */\nfunction colorAlpha(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(46 /* Dot */)) {\n        scanner.start = start;\n        if (scanner.eatWhile(isNumber$1)) {\n            return scanner.current();\n        }\n        return '1';\n    }\n    return '';\n}\n/**\n * Consumes white space characters as string literal from given scanner\n */\nfunction whiteSpace(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(isSpace)) {\n        return {\n            type: 'WhiteSpace',\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes bracket from given scanner\n */\nfunction bracket(scanner) {\n    const ch = scanner.peek();\n    if (isBracket(ch)) {\n        return {\n            type: 'Bracket',\n            open: ch === 40 /* RoundBracketOpen */,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes operator from given scanner\n */\nfunction operator(scanner) {\n    const op = operatorType(scanner.peek());\n    if (op) {\n        return {\n            type: 'Operator',\n            operator: op,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Eats number value from given stream\n * @return Returns `true` if number was consumed\n */\nfunction consumeNumber(stream) {\n    const start = stream.pos;\n    stream.eat(45 /* Dash */);\n    const afterNegative = stream.pos;\n    const hasDecimal = stream.eatWhile(isNumber$1);\n    const prevPos = stream.pos;\n    if (stream.eat(46 /* Dot */)) {\n        // It’s perfectly valid to have numbers like `1.`, which enforces\n        // value to float unit type\n        const hasFloat = stream.eatWhile(isNumber$1);\n        if (!hasDecimal && !hasFloat) {\n            // Lone dot\n            stream.pos = prevPos;\n        }\n    }\n    // Edge case: consumed dash only: not a number, bail-out\n    if (stream.pos === afterNegative) {\n        stream.pos = start;\n    }\n    return stream.pos !== start;\n}\nfunction isIdentPrefix(code) {\n    return code === 64 /* At */ || code === 36 /* Dollar */;\n}\n/**\n * If given character is an operator, returns it’s type\n */\nfunction operatorType(ch) {\n    return (ch === 43 /* Sibling */ && \"+\" /* Sibling */)\n        || (ch === 33 /* Excl */ && \"!\" /* Important */)\n        || (ch === 44 /* Comma */ && \",\" /* ArgumentDelimiter */)\n        || (ch === 58 /* Colon */ && \":\" /* PropertyDelimiter */)\n        || (ch === 45 /* Dash */ && \"-\" /* ValueDelimiter */)\n        || void 0;\n}\n/**\n * Check if given code is a hex value (/0-9a-f/)\n */\nfunction isHex(code) {\n    return isNumber$1(code) || isAlpha$1(code, 65, 70); // A-F\n}\nfunction isKeyword(code) {\n    return isAlphaNumericWord(code) || code === 45 /* Dash */;\n}\nfunction isBracket(code) {\n    return code === 40 /* RoundBracketOpen */ || code === 41 /* RoundBracketClose */;\n}\nfunction isLiteral(code) {\n    return isAlphaWord(code) || code === 37 /* Percent */ || code === 47 /* Slash */;\n}\n/**\n * Parses given color value from abbreviation into RGBA format\n */\nfunction parseColor(value, alpha) {\n    let r = '0';\n    let g = '0';\n    let b = '0';\n    let a = Number(alpha != null && alpha !== '' ? alpha : 1);\n    if (value === 't') {\n        a = 0;\n    }\n    else {\n        switch (value.length) {\n            case 0:\n                break;\n            case 1:\n                r = g = b = value + value;\n                break;\n            case 2:\n                r = g = b = value;\n                break;\n            case 3:\n                r = value[0] + value[0];\n                g = value[1] + value[1];\n                b = value[2] + value[2];\n                break;\n            default:\n                value += value;\n                r = value.slice(0, 2);\n                g = value.slice(2, 4);\n                b = value.slice(4, 6);\n        }\n    }\n    return {\n        r: parseInt(r, 16),\n        g: parseInt(g, 16),\n        b: parseInt(b, 16),\n        a\n    };\n}\n/**\n * Check if scanner reader must consume dash after given token.\n * Used in cases where user must explicitly separate numeric values\n */\nfunction shouldConsumeDashAfter(token) {\n    return token.type === 'ColorValue' || (token.type === 'NumberValue' && !token.unit);\n}\n/**\n * Merges last adjacent tokens into a single literal.\n * This function is used to overcome edge case when function name was parsed\n * as a list of separate tokens. For example, a `scale3d()` value will be\n * parsed as literal and number tokens (`scale` and `3d`) which is a perfectly\n * valid abbreviation but undesired result. This function will detect last adjacent\n * literal and number values and combine them into single literal\n */\nfunction mergeTokens(scanner, tokens) {\n    let start = 0;\n    let end = 0;\n    while (tokens.length) {\n        const token = last(tokens);\n        if (token.type === 'Literal' || token.type === 'NumberValue') {\n            start = token.start;\n            if (!end) {\n                end = token.end;\n            }\n            tokens.pop();\n        }\n        else {\n            break;\n        }\n    }\n    if (start !== end) {\n        tokens.push(createLiteral(scanner, start, end));\n    }\n}\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\n\nfunction tokenScanner(tokens) {\n    return {\n        tokens,\n        start: 0,\n        pos: 0,\n        size: tokens.length\n    };\n}\nfunction peek$2(scanner) {\n    return scanner.tokens[scanner.pos];\n}\nfunction readable(scanner) {\n    return scanner.pos < scanner.size;\n}\nfunction consume$1(scanner, test) {\n    if (test(peek$2(scanner))) {\n        scanner.pos++;\n        return true;\n    }\n    return false;\n}\nfunction error(scanner, message, token = peek$2(scanner)) {\n    if (token && token.start != null) {\n        message += ` at ${token.start}`;\n    }\n    const err = new Error(message);\n    err['pos'] = token && token.start;\n    return err;\n}\n\nfunction parser(tokens, options = {}) {\n    const scanner = tokenScanner(tokens);\n    const result = [];\n    let property;\n    while (readable(scanner)) {\n        if (property = consumeProperty(scanner, options)) {\n            result.push(property);\n        }\n        else if (!consume$1(scanner, isSiblingOperator)) {\n            throw error(scanner, 'Unexpected token');\n        }\n    }\n    return result;\n}\n/**\n * Consumes single CSS property\n */\nfunction consumeProperty(scanner, options) {\n    let name;\n    let important = false;\n    let valueFragment;\n    const value = [];\n    const token = peek$2(scanner);\n    const valueMode = !!options.value;\n    if (!valueMode && isLiteral$1(token) && !isFunctionStart(scanner)) {\n        scanner.pos++;\n        name = token.value;\n        // Consume any following value delimiter after property name\n        consume$1(scanner, isValueDelimiter);\n    }\n    // Skip whitespace right after property name, if any\n    if (valueMode) {\n        consume$1(scanner, isWhiteSpace$1);\n    }\n    while (readable(scanner)) {\n        if (consume$1(scanner, isImportant)) {\n            important = true;\n        }\n        else if (valueFragment = consumeValue(scanner, valueMode)) {\n            value.push(valueFragment);\n        }\n        else if (!consume$1(scanner, isFragmentDelimiter)) {\n            break;\n        }\n    }\n    if (name || value.length || important) {\n        return { name, value, important };\n    }\n}\n/**\n * Consumes single value fragment, e.g. all value tokens before comma\n */\nfunction consumeValue(scanner, inArgument) {\n    const result = [];\n    let token;\n    let args;\n    while (readable(scanner)) {\n        token = peek$2(scanner);\n        if (isValue(token)) {\n            scanner.pos++;\n            if (isLiteral$1(token) && (args = consumeArguments(scanner))) {\n                result.push({\n                    type: 'FunctionCall',\n                    name: token.value,\n                    arguments: args\n                });\n            }\n            else {\n                result.push(token);\n            }\n        }\n        else if (isValueDelimiter(token) || (inArgument && isWhiteSpace$1(token))) {\n            scanner.pos++;\n        }\n        else {\n            break;\n        }\n    }\n    return result.length\n        ? { type: 'CSSValue', value: result }\n        : void 0;\n}\nfunction consumeArguments(scanner) {\n    const start = scanner.pos;\n    if (consume$1(scanner, isOpenBracket$1)) {\n        const args = [];\n        let value;\n        while (readable(scanner) && !consume$1(scanner, isCloseBracket$1)) {\n            if (value = consumeValue(scanner, true)) {\n                args.push(value);\n            }\n            else if (!consume$1(scanner, isWhiteSpace$1) && !consume$1(scanner, isArgumentDelimiter)) {\n                throw error(scanner, 'Unexpected token');\n            }\n        }\n        scanner.start = start;\n        return args;\n    }\n}\nfunction isLiteral$1(token) {\n    return token && token.type === 'Literal';\n}\nfunction isBracket$1(token, open) {\n    return token && token.type === 'Bracket' && (open == null || token.open === open);\n}\nfunction isOpenBracket$1(token) {\n    return isBracket$1(token, true);\n}\nfunction isCloseBracket$1(token) {\n    return isBracket$1(token, false);\n}\nfunction isWhiteSpace$1(token) {\n    return token && token.type === 'WhiteSpace';\n}\nfunction isOperator(token, operator) {\n    return token && token.type === 'Operator' && (!operator || token.operator === operator);\n}\nfunction isSiblingOperator(token) {\n    return isOperator(token, \"+\" /* Sibling */);\n}\nfunction isArgumentDelimiter(token) {\n    return isOperator(token, \",\" /* ArgumentDelimiter */);\n}\nfunction isFragmentDelimiter(token) {\n    return isArgumentDelimiter(token);\n}\nfunction isImportant(token) {\n    return isOperator(token, \"!\" /* Important */);\n}\nfunction isValue(token) {\n    return token.type === 'StringValue'\n        || token.type === 'ColorValue'\n        || token.type === 'NumberValue'\n        || token.type === 'Literal'\n        || token.type === 'Field';\n}\nfunction isValueDelimiter(token) {\n    return isOperator(token, \":\" /* PropertyDelimiter */)\n        || isOperator(token, \"-\" /* ValueDelimiter */);\n}\nfunction isFunctionStart(scanner) {\n    const t1 = scanner.tokens[scanner.pos];\n    const t2 = scanner.tokens[scanner.pos + 1];\n    return t1 && t2 && isLiteral$1(t1) && t2.type === 'Bracket';\n}\n\n/**\n * Parses given abbreviation into property set\n */\nfunction parse$2(abbr, options) {\n    try {\n        const tokens = typeof abbr === 'string' ? tokenize(abbr, options && options.value) : abbr;\n        return parser(tokens, options);\n    }\n    catch (err) {\n        if (err instanceof ScannerError && typeof abbr === 'string') {\n            err.message += `\\n${abbr}\\n${'-'.repeat(err.pos)}^`;\n        }\n        throw err;\n    }\n}\n\n/**\n * Merges attributes in current node: de-duplicates attributes with the same name\n * and merges class names\n */\nfunction mergeAttributes(node, config) {\n    if (!node.attributes) {\n        return;\n    }\n    const attributes = [];\n    const lookup = {};\n    for (const attr of node.attributes) {\n        if (attr.name) {\n            const attrName = attr.name;\n            if (attrName in lookup) {\n                const prev = lookup[attrName];\n                if (attrName === 'class') {\n                    prev.value = mergeValue(prev.value, attr.value, ' ');\n                }\n                else {\n                    mergeDeclarations(prev, attr, config);\n                }\n            }\n            else {\n                // Create new attribute instance so we can safely modify it later\n                attributes.push(lookup[attrName] = Object.assign({}, attr));\n            }\n        }\n        else {\n            attributes.push(attr);\n        }\n    }\n    node.attributes = attributes;\n}\n/**\n * Merges two token lists into single list. Adjacent strings are merged together\n */\nfunction mergeValue(prev, next, glue) {\n    if (prev && next) {\n        if (prev.length && glue) {\n            append(prev, glue);\n        }\n        for (const t of next) {\n            append(prev, t);\n        }\n        return prev;\n    }\n    const result = prev || next;\n    return result && result.slice();\n}\n/**\n * Merges data from `src` attribute into `dest` and returns it\n */\nfunction mergeDeclarations(dest, src, config) {\n    dest.name = src.name;\n    if (!config.options['output.reverseAttributes']) {\n        dest.value = src.value;\n    }\n    // Keep high-priority properties\n    if (!dest.implied) {\n        dest.implied = src.implied;\n    }\n    if (!dest.boolean) {\n        dest.boolean = src.boolean;\n    }\n    if (dest.valueType !== 'expression') {\n        dest.valueType = src.valueType;\n    }\n    return dest;\n}\nfunction append(tokens, value) {\n    const lastIx = tokens.length - 1;\n    if (typeof tokens[lastIx] === 'string' && typeof value === 'string') {\n        tokens[lastIx] += value;\n    }\n    else {\n        tokens.push(value);\n    }\n}\n\n/**\n * Walks over each child node of given markup abbreviation AST node (not including\n * given one) and invokes `fn` on each node.\n * The `fn` callback accepts context node, list of ancestor nodes and optional\n * state object\n */\nfunction walk(node, fn, state) {\n    const ancestors = [node];\n    const callback = (ctx) => {\n        fn(ctx, ancestors, state);\n        ancestors.push(ctx);\n        ctx.children.forEach(callback);\n        ancestors.pop();\n    };\n    node.children.forEach(callback);\n}\n/**\n * Finds node which is the deepest for in current node or node itself.\n */\nfunction findDeepest(node) {\n    let parent;\n    while (node.children.length) {\n        parent = node;\n        node = node.children[node.children.length - 1];\n    }\n    return { parent, node };\n}\nfunction isNode(node) {\n    return node.type === 'AbbreviationNode';\n}\n\n/**\n * Finds matching snippet from `registry` and resolves it into a parsed abbreviation.\n * Resolved node is then updated or replaced with matched abbreviation tree.\n *\n * A HTML registry basically contains aliases to another Emmet abbreviations,\n * e.g. a predefined set of name, attributes and so on, possibly a complex\n * abbreviation with multiple elements. So we have to get snippet, parse it\n * and recursively resolve it.\n */\nfunction resolveSnippets(abbr, config) {\n    const stack = [];\n    const reversed = config.options['output.reverseAttributes'];\n    const resolve = (child) => {\n        const snippet = child.name && config.snippets[child.name];\n        // A snippet in stack means circular reference.\n        // It can be either a user error or a perfectly valid snippet like\n        // \"img\": \"img[src alt]/\", e.g. an element with predefined shape.\n        // In any case, simply stop parsing and keep element as is\n        if (!snippet || stack.includes(snippet)) {\n            return null;\n        }\n        const snippetAbbr = parseAbbreviation(snippet, config);\n        stack.push(snippet);\n        walkResolve(snippetAbbr, resolve);\n        stack.pop();\n        // Add attributes from current node into every top-level node of parsed abbreviation\n        for (const topNode of snippetAbbr.children) {\n            if (child.attributes) {\n                const from = topNode.attributes || [];\n                const to = child.attributes || [];\n                topNode.attributes = reversed ? to.concat(from) : from.concat(to);\n            }\n            mergeNodes(child, topNode);\n        }\n        return snippetAbbr;\n    };\n    walkResolve(abbr, resolve);\n    return abbr;\n}\nfunction walkResolve(node, resolve, config) {\n    let children = [];\n    for (const child of node.children) {\n        const resolved = resolve(child);\n        if (resolved) {\n            children = children.concat(resolved.children);\n            const deepest = findDeepest(resolved);\n            if (isNode(deepest.node)) {\n                deepest.node.children = deepest.node.children.concat(walkResolve(child, resolve));\n            }\n        }\n        else {\n            children.push(child);\n            child.children = walkResolve(child, resolve);\n        }\n    }\n    return node.children = children;\n}\n/**\n * Adds data from first node into second node\n */\nfunction mergeNodes(from, to) {\n    if (from.selfClosing) {\n        to.selfClosing = true;\n    }\n    if (from.value != null) {\n        to.value = from.value;\n    }\n    if (from.repeat) {\n        to.repeat = from.repeat;\n    }\n}\n\nfunction createOutputStream(options, level = 0) {\n    return {\n        options,\n        value: '',\n        level,\n        offset: 0,\n        line: 0,\n        column: 0\n    };\n}\n/**\n * Pushes plain string into output stream without newline processing\n */\nfunction push(stream, text) {\n    const processText = stream.options['output.text'];\n    _push(stream, processText(text, stream.offset, stream.line, stream.column));\n}\n/**\n * Pushes given string with possible newline formatting into output\n */\nfunction pushString(stream, value) {\n    // If given value contains newlines, we should push content line-by-line and\n    // use `pushNewline()` to maintain proper line/column state\n    const lines = splitByLines(value);\n    for (let i = 0, il = lines.length - 1; i <= il; i++) {\n        push(stream, lines[i]);\n        if (i !== il) {\n            pushNewline(stream, true);\n        }\n    }\n}\n/**\n * Pushes new line into given output stream\n */\nfunction pushNewline(stream, indent) {\n    const baseIndent = stream.options['output.baseIndent'];\n    const newline = stream.options['output.newline'];\n    push(stream, newline + baseIndent);\n    stream.line++;\n    stream.column = baseIndent.length;\n    if (indent) {\n        pushIndent(stream, indent === true ? stream.level : indent);\n    }\n}\n/**\n * Adds indentation of `size` to current output stream\n */\nfunction pushIndent(stream, size = stream.level) {\n    const indent = stream.options['output.indent'];\n    push(stream, indent.repeat(Math.max(size, 0)));\n}\n/**\n * Pushes field/tabstop into output stream\n */\nfunction pushField(stream, index, placeholder) {\n    const field = stream.options['output.field'];\n    // NB: use `_push` instead of `push` to skip text processing\n    _push(stream, field(index, placeholder, stream.offset, stream.line, stream.column));\n}\n/**\n * Returns given tag name formatted according to given config\n */\nfunction tagName(name, config) {\n    return strCase(name, config.options['output.tagCase']);\n}\n/**\n * Returns given attribute name formatted according to given config\n */\nfunction attrName(name, config) {\n    return strCase(name, config.options['output.attributeCase']);\n}\n/**\n * Returns character for quoting value of given attribute\n */\nfunction attrQuote(attr, config, isOpen) {\n    if (attr.valueType === 'expression') {\n        return isOpen ? '{' : '}';\n    }\n    return config.options['output.attributeQuotes'] === 'single' ? '\\'' : '\"';\n}\n/**\n * Check if given attribute is boolean\n */\nfunction isBooleanAttribute(attr, config) {\n    return attr.boolean\n        || config.options['output.booleanAttributes'].includes((attr.name || '').toLowerCase());\n}\n/**\n * Returns a token for self-closing tag, depending on current options\n */\nfunction selfClose(config) {\n    switch (config.options['output.selfClosingStyle']) {\n        case 'xhtml': return ' /';\n        case 'xml': return '/';\n        default: return '';\n    }\n}\n/**\n * Check if given tag name belongs to inline-level element\n * @param node Parsed node or tag name\n */\nfunction isInline(node, config) {\n    if (typeof node === 'string') {\n        return config.options.inlineElements.includes(node.toLowerCase());\n    }\n    // inline node is a node either with inline-level name or text-only node\n    return node.name ? isInline(node.name, config) : Boolean(node.value && !node.attributes);\n}\n/**\n * Splits given text by lines\n */\nfunction splitByLines(text) {\n    return text.split(/\\r\\n|\\r|\\n/g);\n}\n/**\n * Pushes raw string into output stream without any processing\n */\nfunction _push(stream, text) {\n    stream.value += text;\n    stream.offset += text.length;\n    stream.column += text.length;\n}\nfunction strCase(str, type) {\n    if (type) {\n        return type === 'upper' ? str.toUpperCase() : str.toLowerCase();\n    }\n    return str;\n}\n\nconst elementMap = {\n    p: 'span',\n    ul: 'li',\n    ol: 'li',\n    table: 'tr',\n    tr: 'td',\n    tbody: 'tr',\n    thead: 'tr',\n    tfoot: 'tr',\n    colgroup: 'col',\n    select: 'option',\n    optgroup: 'option',\n    audio: 'source',\n    video: 'source',\n    object: 'param',\n    map: 'area'\n};\nfunction implicitTag(node, ancestors, config) {\n    if (!node.name && node.attributes) {\n        resolveImplicitTag(node, ancestors, config);\n    }\n}\nfunction resolveImplicitTag(node, ancestors, config) {\n    const parent = getParentElement(ancestors);\n    const contextName = config.context ? config.context.name : '';\n    const parentName = lowercase(parent ? parent.name : contextName);\n    node.name = elementMap[parentName]\n        || (isInline(parentName, config) ? 'span' : 'div');\n}\nfunction lowercase(str) {\n    return (str || '').toLowerCase();\n}\n/**\n * Returns closest element node from given ancestors list\n */\nfunction getParentElement(ancestors) {\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n        const elem = ancestors[i];\n        if (isNode(elem)) {\n            return elem;\n        }\n    }\n}\n\nvar latin = {\n\t\"common\": [\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\"],\n\t\"words\": [\"exercitationem\", \"perferendis\", \"perspiciatis\", \"laborum\", \"eveniet\",\n\t\t\"sunt\", \"iure\", \"nam\", \"nobis\", \"eum\", \"cum\", \"officiis\", \"excepturi\",\n\t\t\"odio\", \"consectetur\", \"quasi\", \"aut\", \"quisquam\", \"vel\", \"eligendi\",\n\t\t\"itaque\", \"non\", \"odit\", \"tempore\", \"quaerat\", \"dignissimos\",\n\t\t\"facilis\", \"neque\", \"nihil\", \"expedita\", \"vitae\", \"vero\", \"ipsum\",\n\t\t\"nisi\", \"animi\", \"cumque\", \"pariatur\", \"velit\", \"modi\", \"natus\",\n\t\t\"iusto\", \"eaque\", \"sequi\", \"illo\", \"sed\", \"ex\", \"et\", \"voluptatibus\",\n\t\t\"tempora\", \"veritatis\", \"ratione\", \"assumenda\", \"incidunt\", \"nostrum\",\n\t\t\"placeat\", \"aliquid\", \"fuga\", \"provident\", \"praesentium\", \"rem\",\n\t\t\"necessitatibus\", \"suscipit\", \"adipisci\", \"quidem\", \"possimus\",\n\t\t\"voluptas\", \"debitis\", \"sint\", \"accusantium\", \"unde\", \"sapiente\",\n\t\t\"voluptate\", \"qui\", \"aspernatur\", \"laudantium\", \"soluta\", \"amet\",\n\t\t\"quo\", \"aliquam\", \"saepe\", \"culpa\", \"libero\", \"ipsa\", \"dicta\",\n\t\t\"reiciendis\", \"nesciunt\", \"doloribus\", \"autem\", \"impedit\", \"minima\",\n\t\t\"maiores\", \"repudiandae\", \"ipsam\", \"obcaecati\", \"ullam\", \"enim\",\n\t\t\"totam\", \"delectus\", \"ducimus\", \"quis\", \"voluptates\", \"dolores\",\n\t\t\"molestiae\", \"harum\", \"dolorem\", \"quia\", \"voluptatem\", \"molestias\",\n\t\t\"magni\", \"distinctio\", \"omnis\", \"illum\", \"dolorum\", \"voluptatum\", \"ea\",\n\t\t\"quas\", \"quam\", \"corporis\", \"quae\", \"blanditiis\", \"atque\", \"deserunt\",\n\t\t\"laboriosam\", \"earum\", \"consequuntur\", \"hic\", \"cupiditate\",\n\t\t\"quibusdam\", \"accusamus\", \"ut\", \"rerum\", \"error\", \"minus\", \"eius\",\n\t\t\"ab\", \"ad\", \"nemo\", \"fugit\", \"officia\", \"at\", \"in\", \"id\", \"quos\",\n\t\t\"reprehenderit\", \"numquam\", \"iste\", \"fugiat\", \"sit\", \"inventore\",\n\t\t\"beatae\", \"repellendus\", \"magnam\", \"recusandae\", \"quod\", \"explicabo\",\n\t\t\"doloremque\", \"aperiam\", \"consequatur\", \"asperiores\", \"commodi\",\n\t\t\"optio\", \"dolor\", \"labore\", \"temporibus\", \"repellat\", \"veniam\",\n\t\t\"architecto\", \"est\", \"esse\", \"mollitia\", \"nulla\", \"a\", \"similique\",\n\t\t\"eos\", \"alias\", \"dolore\", \"tenetur\", \"deleniti\", \"porro\", \"facere\",\n\t\t\"maxime\", \"corrupti\"]\n};\n\nvar ru = {\n\t\"common\": [\"далеко-далеко\", \"за\", \"словесными\", \"горами\", \"в стране\", \"гласных\", \"и согласных\", \"живут\", \"рыбные\", \"тексты\"],\n\t\"words\": [\"вдали\", \"от всех\", \"они\", \"буквенных\", \"домах\", \"на берегу\", \"семантика\",\n\t\t\"большого\", \"языкового\", \"океана\", \"маленький\", \"ручеек\", \"даль\",\n\t\t\"журчит\", \"по всей\", \"обеспечивает\", \"ее\",\"всеми\", \"необходимыми\",\n\t\t\"правилами\", \"эта\", \"парадигматическая\", \"страна\", \"которой\", \"жаренные\",\n\t\t\"предложения\", \"залетают\", \"прямо\", \"рот\", \"даже\", \"всемогущая\",\n\t\t\"пунктуация\", \"не\", \"имеет\", \"власти\", \"над\", \"рыбными\", \"текстами\",\n\t\t\"ведущими\", \"безорфографичный\", \"образ\", \"жизни\", \"однажды\", \"одна\",\n\t\t\"маленькая\", \"строчка\",\"рыбного\", \"текста\", \"имени\", \"lorem\", \"ipsum\",\n\t\t\"решила\", \"выйти\", \"большой\", \"мир\", \"грамматики\", \"великий\", \"оксмокс\",\n\t\t\"предупреждал\", \"о\", \"злых\", \"запятых\", \"диких\", \"знаках\", \"вопроса\",\n\t\t\"коварных\", \"точках\", \"запятой\", \"но\", \"текст\", \"дал\", \"сбить\",\n\t\t\"себя\", \"толку\", \"он\", \"собрал\", \"семь\", \"своих\", \"заглавных\", \"букв\",\n\t\t\"подпоясал\", \"инициал\", \"за\", \"пояс\", \"пустился\", \"дорогу\",\n\t\t\"взобравшись\", \"первую\", \"вершину\", \"курсивных\", \"гор\", \"бросил\",\n\t\t\"последний\", \"взгляд\", \"назад\", \"силуэт\", \"своего\", \"родного\", \"города\",\n\t\t\"буквоград\", \"заголовок\", \"деревни\", \"алфавит\", \"подзаголовок\", \"своего\",\n\t\t\"переулка\", \"грустный\", \"реторический\", \"вопрос\", \"скатился\", \"его\",\n\t\t\"щеке\", \"продолжил\", \"свой\", \"путь\", \"дороге\", \"встретил\", \"рукопись\",\n\t\t\"она\", \"предупредила\",  \"моей\", \"все\", \"переписывается\", \"несколько\",\n\t\t\"раз\", \"единственное\", \"что\", \"меня\", \"осталось\", \"это\", \"приставка\",\n\t\t\"возвращайся\", \"ты\", \"лучше\", \"свою\", \"безопасную\", \"страну\", \"послушавшись\",\n\t\t\"рукописи\", \"наш\", \"продолжил\", \"свой\", \"путь\", \"вскоре\", \"ему\",\n\t\t\"повстречался\", \"коварный\", \"составитель\", \"рекламных\", \"текстов\",\n\t\t\"напоивший\", \"языком\", \"речью\", \"заманивший\", \"свое\", \"агентство\",\n\t\t\"которое\", \"использовало\", \"снова\", \"снова\", \"своих\", \"проектах\",\n\t\t\"если\", \"переписали\", \"то\", \"живет\", \"там\", \"до\", \"сих\", \"пор\"]\n};\n\nvar sp = {\n\t\"common\": [\"mujer\", \"uno\", \"dolor\", \"más\", \"de\", \"poder\", \"mismo\", \"si\"],\n\t\"words\": [\"ejercicio\", \"preferencia\", \"perspicacia\", \"laboral\", \"paño\",\n\t\t\"suntuoso\", \"molde\", \"namibia\", \"planeador\", \"mirar\", \"demás\", \"oficinista\", \"excepción\",\n\t\t\"odio\", \"consecuencia\", \"casi\", \"auto\", \"chicharra\", \"velo\", \"elixir\",\n\t\t\"ataque\", \"no\", \"odio\", \"temporal\", \"cuórum\", \"dignísimo\",\n\t\t\"facilismo\", \"letra\", \"nihilista\", \"expedición\", \"alma\", \"alveolar\", \"aparte\",\n\t\t\"león\", \"animal\", \"como\", \"paria\", \"belleza\", \"modo\", \"natividad\",\n\t\t\"justo\", \"ataque\", \"séquito\", \"pillo\", \"sed\", \"ex\", \"y\", \"voluminoso\",\n\t\t\"temporalidad\", \"verdades\", \"racional\", \"asunción\", \"incidente\", \"marejada\",\n\t\t\"placenta\", \"amanecer\", \"fuga\", \"previsor\", \"presentación\", \"lejos\",\n\t\t\"necesariamente\", \"sospechoso\", \"adiposidad\", \"quindío\", \"pócima\",\n\t\t\"voluble\", \"débito\", \"sintió\", \"accesorio\", \"falda\", \"sapiencia\",\n\t\t\"volutas\", \"queso\", \"permacultura\", \"laudo\", \"soluciones\", \"entero\",\n\t\t\"pan\", \"litro\", \"tonelada\", \"culpa\", \"libertario\", \"mosca\", \"dictado\",\n\t\t\"reincidente\", \"nascimiento\", \"dolor\", \"escolar\", \"impedimento\", \"mínima\",\n\t\t\"mayores\", \"repugnante\", \"dulce\", \"obcecado\", \"montaña\", \"enigma\",\n\t\t\"total\", \"deletéreo\", \"décima\", \"cábala\", \"fotografía\", \"dolores\",\n\t\t\"molesto\", \"olvido\", \"paciencia\", \"resiliencia\", \"voluntad\", \"molestias\",\n\t\t\"magnífico\", \"distinción\", \"ovni\", \"marejada\", \"cerro\", \"torre\", \"y\",\n\t\t\"abogada\", \"manantial\", \"corporal\", \"agua\", \"crepúsculo\", \"ataque\", \"desierto\",\n\t\t\"laboriosamente\", \"angustia\", \"afortunado\", \"alma\", \"encefalograma\",\n\t\t\"materialidad\", \"cosas\", \"o\", \"renuncia\", \"error\", \"menos\", \"conejo\",\n\t\t\"abadía\", \"analfabeto\", \"remo\", \"fugacidad\", \"oficio\", \"en\", \"almácigo\", \"vos\", \"pan\",\n\t\t\"represión\", \"números\", \"triste\", \"refugiado\", \"trote\", \"inventor\",\n\t\t\"corchea\", \"repelente\", \"magma\", \"recusado\", \"patrón\", \"explícito\",\n\t\t\"paloma\", \"síndrome\", \"inmune\", \"autoinmune\", \"comodidad\",\n\t\t\"ley\", \"vietnamita\", \"demonio\", \"tasmania\", \"repeler\", \"apéndice\",\n\t\t\"arquitecto\", \"columna\", \"yugo\", \"computador\", \"mula\", \"a\", \"propósito\",\n\t\t\"fantasía\", \"alias\", \"rayo\", \"tenedor\", \"deleznable\", \"ventana\", \"cara\",\n\t\t\"anemia\", \"corrupto\"]\n};\n\nconst vocabularies = { ru, sp, latin };\nconst reLorem = /^lorem([a-z]*)(\\d*)(-\\d*)?$/i;\nfunction lorem(node, ancestors, config) {\n    let m;\n    if (node.name && (m = node.name.match(reLorem))) {\n        const db = vocabularies[m[1]] || vocabularies.latin;\n        const minWordCount = m[2] ? Math.max(1, Number(m[2])) : 30;\n        const maxWordCount = m[3] ? Math.max(minWordCount, Number(m[3].slice(1))) : minWordCount;\n        const wordCount = rand(minWordCount, maxWordCount);\n        const repeat = node.repeat || findRepeater(ancestors);\n        node.name = node.attributes = void 0;\n        node.value = [paragraph(db, wordCount, !repeat || repeat.value === 0)];\n        if (node.repeat && ancestors.length > 1) {\n            resolveImplicitTag(node, ancestors, config);\n        }\n    }\n}\n/**\n * Returns random integer between <code>from</code> and <code>to</code> values\n */\nfunction rand(from, to) {\n    return Math.floor(Math.random() * (to - from) + from);\n}\nfunction sample(arr, count) {\n    const len = arr.length;\n    const iterations = Math.min(len, count);\n    const result = [];\n    while (result.length < iterations) {\n        const str = arr[rand(0, len)];\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n    return result;\n}\nfunction choice(val) {\n    return val[rand(0, val.length - 1)];\n}\nfunction sentence(words, end) {\n    if (words.length) {\n        words = [capitalize(words[0])].concat(words.slice(1));\n    }\n    return words.join(' ') + (end || choice('?!...')); // more dots than question marks\n}\nfunction capitalize(word) {\n    return word[0].toUpperCase() + word.slice(1);\n}\n/**\n * Insert commas at randomly selected words. This function modifies values\n * inside `words` array\n */\nfunction insertCommas(words) {\n    if (words.length < 2) {\n        return words;\n    }\n    words = words.slice();\n    const len = words.length;\n    const hasComma = /,$/;\n    let totalCommas = 0;\n    if (len > 3 && len <= 6) {\n        totalCommas = rand(0, 1);\n    }\n    else if (len > 6 && len <= 12) {\n        totalCommas = rand(0, 2);\n    }\n    else {\n        totalCommas = rand(1, 4);\n    }\n    for (let i = 0, pos; i < totalCommas; i++) {\n        pos = rand(0, len - 2);\n        if (!hasComma.test(words[pos])) {\n            words[pos] += ',';\n        }\n    }\n    return words;\n}\n/**\n * Generate a paragraph of \"Lorem ipsum\" text\n * @param dict Words dictionary\n * @param wordCount Words count in paragraph\n * @param startWithCommon Should paragraph start with common \"lorem ipsum\" sentence.\n */\nfunction paragraph(dict, wordCount, startWithCommon) {\n    const result = [];\n    let totalWords = 0;\n    let words;\n    if (startWithCommon && dict.common) {\n        words = dict.common.slice(0, wordCount);\n        totalWords += words.length;\n        result.push(sentence(insertCommas(words), '.'));\n    }\n    while (totalWords < wordCount) {\n        words = sample(dict.words, Math.min(rand(2, 30), wordCount - totalWords));\n        totalWords += words.length;\n        result.push(sentence(insertCommas(words)));\n    }\n    return result.join(' ');\n}\nfunction findRepeater(ancestors) {\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n        const element = ancestors[i];\n        if (element.type === 'AbbreviationNode' && element.repeat) {\n            return element.repeat;\n        }\n    }\n}\n\n/**\n * JSX transformer: replaces `class` and `for` attributes with `className` and\n * `htmlFor` attributes respectively\n */\nfunction jsx(node) {\n    if (node.attributes) {\n        node.attributes.forEach(rename);\n    }\n}\nfunction rename(attr) {\n    if (attr.name === 'class') {\n        attr.name = 'className';\n    }\n    else if (attr.name === 'for') {\n        attr.name = 'htmlFor';\n    }\n}\n\n/**\n * XSL transformer: removes `select` attributes from certain nodes that contain\n * children\n */\nfunction xsl(node) {\n    if (matchesName(node.name) && node.attributes && (node.children.length || node.value)) {\n        node.attributes = node.attributes.filter(isAllowed);\n    }\n}\nfunction isAllowed(attr) {\n    return attr.name !== 'select';\n}\nfunction matchesName(name) {\n    return name === 'xsl:variable' || name === 'xsl:with-param';\n}\n\nconst reElement = /^(-+)([a-z0-9]+[a-z0-9-]*)/i;\nconst reModifier = /^(_+)([a-z0-9]+[a-z0-9-_]*)/i;\nconst blockCandidates1 = (className) => /^[a-z]\\-/i.test(className);\nconst blockCandidates2 = (className) => /^[a-z]/i.test(className);\nfunction bem(node, ancestors, config) {\n    expandClassNames(node);\n    expandShortNotation(node, ancestors, config);\n}\n/**\n * Expands existing class names in BEM notation in given `node`.\n * For example, if node contains `b__el_mod` class name, this method ensures\n * that element contains `b__el` class as well\n */\nfunction expandClassNames(node) {\n    const data = getBEMData(node);\n    const classNames = [];\n    for (const cl of data.classNames) {\n        // remove all modifiers and element prefixes from class name to get a base element name\n        const ix = cl.indexOf('_');\n        if (ix > 0 && !cl.startsWith('-')) {\n            classNames.push(cl.slice(0, ix));\n            classNames.push(cl.slice(ix));\n        }\n        else {\n            classNames.push(cl);\n        }\n    }\n    if (classNames.length) {\n        data.classNames = classNames.filter(uniqueClass);\n        data.block = findBlockName(data.classNames);\n        updateClass(node, data.classNames.join(' '));\n    }\n}\n/**\n * Expands short BEM notation, e.g. `-element` and `_modifier`\n */\nfunction expandShortNotation(node, ancestors, config) {\n    const data = getBEMData(node);\n    const classNames = [];\n    const { options } = config;\n    const path = ancestors.slice(1).concat(node);\n    for (let cl of data.classNames) {\n        let prefix = '';\n        let m;\n        const originalClass = cl;\n        // parse element definition (could be only one)\n        if (m = cl.match(reElement)) {\n            prefix = getBlockName(path, m[1].length, config.context) + options['bem.element'] + m[2];\n            classNames.push(prefix);\n            cl = cl.slice(m[0].length);\n        }\n        // parse modifiers definitions\n        if (m = cl.match(reModifier)) {\n            if (!prefix) {\n                prefix = getBlockName(path, m[1].length);\n                classNames.push(prefix);\n            }\n            classNames.push(`${prefix}${options['bem.modifier']}${m[2]}`);\n            cl = cl.slice(m[0].length);\n        }\n        if (cl === originalClass) {\n            // class name wasn’t modified: it’s not a BEM-specific class,\n            // add it as-is into output\n            classNames.push(originalClass);\n        }\n    }\n    const arrClassNames = classNames.filter(uniqueClass);\n    if (arrClassNames.length) {\n        updateClass(node, arrClassNames.join(' '));\n    }\n}\n/**\n * Returns BEM data from given abbreviation node\n */\nfunction getBEMData(node) {\n    if (!node._bem) {\n        let classValue = '';\n        if (node.attributes) {\n            for (const attr of node.attributes) {\n                if (attr.name === 'class' && attr.value) {\n                    classValue = stringifyValue(attr.value);\n                    break;\n                }\n            }\n        }\n        node._bem = parseBEM(classValue);\n    }\n    return node._bem;\n}\nfunction getBEMDataFromContext(context) {\n    if (!context._bem) {\n        context._bem = parseBEM(context.attributes && context.attributes.class || '');\n    }\n    return context._bem;\n}\n/**\n * Parses BEM data from given class name\n */\nfunction parseBEM(classValue) {\n    const classNames = classValue ? classValue.split(/\\s+/) : [];\n    return {\n        classNames,\n        block: findBlockName(classNames)\n    };\n}\n/**\n * Returns block name for given `node` by `prefix`, which tells the depth of\n * of parent node lookup\n */\nfunction getBlockName(ancestors, depth = 0, context) {\n    const maxParentIx = 0;\n    let parentIx = Math.max(ancestors.length - depth, maxParentIx);\n    do {\n        const parent = ancestors[parentIx];\n        if (parent) {\n            const data = getBEMData(parent);\n            if (data.block) {\n                return data.block;\n            }\n        }\n    } while (maxParentIx < parentIx--);\n    if (context) {\n        const data = getBEMDataFromContext(context);\n        if (data.block) {\n            return data.block;\n        }\n    }\n    return '';\n}\nfunction findBlockName(classNames) {\n    return find(classNames, blockCandidates1)\n        || find(classNames, blockCandidates2)\n        || void 0;\n}\n/**\n * Finds class name from given list which may be used as block name\n */\nfunction find(classNames, filter) {\n    for (const cl of classNames) {\n        if (reElement.test(cl) || reModifier.test(cl)) {\n            break;\n        }\n        if (filter(cl)) {\n            return cl;\n        }\n    }\n}\nfunction updateClass(node, value) {\n    for (const attr of node.attributes) {\n        if (attr.name === 'class') {\n            attr.value = [value];\n            break;\n        }\n    }\n}\nfunction stringifyValue(value) {\n    let result = '';\n    for (const t of value) {\n        result += typeof t === 'string' ? t : t.name;\n    }\n    return result;\n}\nfunction uniqueClass(item, ix, arr) {\n    return !!item && arr.indexOf(item) === ix;\n}\n\nfunction walk$1(abbr, visitor, state) {\n    const callback = (ctx, index, items) => {\n        const { parent, current } = state;\n        state.parent = current;\n        state.current = ctx;\n        visitor(ctx, index, items, state, next);\n        state.current = current;\n        state.parent = parent;\n    };\n    const next = (node, index, items) => {\n        state.ancestors.push(state.current);\n        callback(node, index, items);\n        state.ancestors.pop();\n    };\n    abbr.children.forEach(callback);\n}\nfunction createWalkState(config) {\n    return {\n        // @ts-ignore: Will set value in iterator\n        current: null,\n        parent: void 0,\n        ancestors: [],\n        config,\n        field: 1,\n        out: createOutputStream(config.options)\n    };\n}\n\nconst caret = [{ type: 'Field', index: 0, name: '' }];\n/**\n * Check if given node is a snippet: a node without name and attributes\n */\nfunction isSnippet(node) {\n    return node ? !node.name && !node.attributes : false;\n}\n/**\n * Check if given node is inline-level element, e.g. element with explicitly\n * defined node name\n */\nfunction isInlineElement(node, config) {\n    return node ? isInline(node, config) : false;\n}\n/**\n * Check if given value token is a field\n */\nfunction isField(token) {\n    return typeof token === 'object' && token.type === 'Field';\n}\nfunction pushTokens(tokens, state) {\n    const { out } = state;\n    let largestIndex = -1;\n    for (const t of tokens) {\n        if (typeof t === 'string') {\n            pushString(out, t);\n        }\n        else {\n            pushField(out, state.field + t.index, t.name);\n            if (t.index > largestIndex) {\n                largestIndex = t.index;\n            }\n        }\n    }\n    if (largestIndex !== -1) {\n        state.field += largestIndex + 1;\n    }\n}\n/**\n * Splits given value token by lines: returns array where each entry is a token list\n * for a single line\n */\nfunction splitByLines$1(tokens) {\n    const result = [];\n    let line = [];\n    for (const t of tokens) {\n        if (typeof t === 'string') {\n            const lines = t.split(/\\r\\n?|\\n/g);\n            line.push(lines.shift() || '');\n            while (lines.length) {\n                result.push(line);\n                line = [lines.shift() || ''];\n            }\n        }\n        else {\n            line.push(t);\n        }\n    }\n    line.length && result.push(line);\n    return result;\n}\n/**\n * Check if given attribute should be outputted\n */\nfunction shouldOutputAttribute(attr) {\n    // In case if attribute is implied, check if it has a defined value:\n    // either non-empty value or quoted empty value\n    return !attr.implied || attr.valueType !== 'raw' || (!!attr.value && attr.value.length > 0);\n}\n\n/**\n * Splits given string into template tokens.\n * Template is a string which contains placeholders which are uppercase names\n * between `[` and `]`, for example: `[PLACEHOLDER]`.\n * Unlike other templates, a placeholder may contain extra characters before and\n * after name: `[%PLACEHOLDER.]`. If data for `PLACEHOLDER` is defined, it will\n * be outputted with with these extra character, otherwise will be completely omitted.\n */\nfunction template(text) {\n    const tokens = [];\n    const scanner = { pos: 0, text };\n    let placeholder;\n    let offset = scanner.pos;\n    let pos = scanner.pos;\n    while (scanner.pos < scanner.text.length) {\n        pos = scanner.pos;\n        if (placeholder = consumePlaceholder(scanner)) {\n            if (offset !== scanner.pos) {\n                tokens.push(text.slice(offset, pos));\n            }\n            tokens.push(placeholder);\n            offset = scanner.pos;\n        }\n        else {\n            scanner.pos++;\n        }\n    }\n    if (offset !== scanner.pos) {\n        tokens.push(text.slice(offset));\n    }\n    return tokens;\n}\n/**\n * Consumes placeholder like `[#ID]` from given scanner\n */\nfunction consumePlaceholder(scanner) {\n    if (peek(scanner) === 91 /* Start */) {\n        const start = ++scanner.pos;\n        let namePos = start;\n        let afterPos = start;\n        let stack = 1;\n        while (scanner.pos < scanner.text.length) {\n            const code = peek(scanner);\n            if (isTokenStart(code)) {\n                namePos = scanner.pos;\n                while (isToken(peek(scanner))) {\n                    scanner.pos++;\n                }\n                afterPos = scanner.pos;\n            }\n            else {\n                if (code === 91 /* Start */) {\n                    stack++;\n                }\n                else if (code === 93 /* End */) {\n                    if (--stack === 0) {\n                        return {\n                            before: scanner.text.slice(start, namePos),\n                            after: scanner.text.slice(afterPos, scanner.pos++),\n                            name: scanner.text.slice(namePos, afterPos)\n                        };\n                    }\n                }\n                scanner.pos++;\n            }\n        }\n    }\n}\nfunction peek(scanner, pos = scanner.pos) {\n    return scanner.text.charCodeAt(pos);\n}\nfunction isTokenStart(code) {\n    return code >= 65 && code <= 90; // A-Z\n}\nfunction isToken(code) {\n    return isTokenStart(code)\n        || (code > 47 && code < 58) /* 0-9 */\n        || code === 95 /* Underscore */\n        || code === 45 /* Dash */;\n}\n\nfunction createCommentState(config) {\n    const { options } = config;\n    return {\n        enabled: options['comment.enabled'],\n        trigger: options['comment.trigger'],\n        before: options['comment.before'] ? template(options['comment.before']) : void 0,\n        after: options['comment.after'] ? template(options['comment.after']) : void 0\n    };\n}\n/**\n * Adds comment prefix for given node, if required\n */\nfunction commentNodeBefore(node, state) {\n    if (shouldComment(node, state) && state.comment.before) {\n        output(node, state.comment.before, state);\n    }\n}\n/**\n * Adds comment suffix for given node, if required\n */\nfunction commentNodeAfter(node, state) {\n    if (shouldComment(node, state) && state.comment.after) {\n        output(node, state.comment.after, state);\n    }\n}\n/**\n * Check if given node should be commented\n */\nfunction shouldComment(node, state) {\n    const { comment } = state;\n    if (!comment.enabled || !comment.trigger || !node.name || !node.attributes) {\n        return false;\n    }\n    for (const attr of node.attributes) {\n        if (attr.name && comment.trigger.includes(attr.name)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Pushes given template tokens into output stream\n */\nfunction output(node, tokens, state) {\n    const attrs = {};\n    const { out } = state;\n    // Collect attributes payload\n    for (const attr of node.attributes) {\n        if (attr.name && attr.value) {\n            attrs[attr.name.toUpperCase()] = attr.value;\n        }\n    }\n    // Output parsed tokens\n    for (const token of tokens) {\n        if (typeof token === 'string') {\n            pushString(out, token);\n        }\n        else if (attrs[token.name]) {\n            pushString(out, token.before);\n            pushTokens(attrs[token.name], state);\n            pushString(out, token.after);\n        }\n    }\n}\n\nconst htmlTagRegex = /^<([\\w\\-:]+)[\\s>]/;\nfunction html(abbr, config) {\n    const state = createWalkState(config);\n    state.comment = createCommentState(config);\n    walk$1(abbr, element, state);\n    return state.out.value;\n}\n/**\n * Outputs `node` content to output stream of `state`\n * @param node Context node\n * @param index Index of `node` in `items`\n * @param items List of `node`’s siblings\n * @param state Current walk state\n */\nfunction element(node, index, items, state, next) {\n    const { out, config } = state;\n    const format = shouldFormat(node, index, items, state);\n    // Pick offset level for current node\n    const level = getIndent(state);\n    out.level += level;\n    format && pushNewline(out, true);\n    if (node.name) {\n        const name = tagName(node.name, config);\n        commentNodeBefore(node, state);\n        pushString(out, `<${name}`);\n        if (node.attributes) {\n            for (const attr of node.attributes) {\n                if (shouldOutputAttribute(attr)) {\n                    pushAttribute(attr, state);\n                }\n            }\n        }\n        if (node.selfClosing && !node.children.length && !node.value) {\n            pushString(out, `${selfClose(config)}>`);\n        }\n        else {\n            pushString(out, '>');\n            if (!pushSnippet(node, state, next)) {\n                if (node.value) {\n                    const innerFormat = node.value.some(hasNewline) || startsWithBlockTag(node.value, config);\n                    innerFormat && pushNewline(state.out, ++out.level);\n                    pushTokens(node.value, state);\n                    innerFormat && pushNewline(state.out, --out.level);\n                }\n                node.children.forEach(next);\n                if (!node.value && !node.children.length) {\n                    const innerFormat = config.options['output.formatLeafNode']\n                        || config.options['output.formatForce'].includes(node.name);\n                    innerFormat && pushNewline(state.out, ++out.level);\n                    pushTokens(caret, state);\n                    innerFormat && pushNewline(state.out, --out.level);\n                }\n            }\n            pushString(out, `</${name}>`);\n            commentNodeAfter(node, state);\n        }\n    }\n    else if (!pushSnippet(node, state, next) && node.value) {\n        // A text-only node (snippet)\n        pushTokens(node.value, state);\n        node.children.forEach(next);\n    }\n    if (format && index === items.length - 1 && state.parent) {\n        const offset = isSnippet(state.parent) ? 0 : 1;\n        pushNewline(out, out.level - offset);\n    }\n    out.level -= level;\n}\n/**\n * Outputs given attribute’s content into output stream\n */\nfunction pushAttribute(attr, state) {\n    const { out, config } = state;\n    if (attr.name) {\n        const name = attrName(attr.name, config);\n        const lQuote = attrQuote(attr, config, true);\n        const rQuote = attrQuote(attr, config);\n        let value = attr.value;\n        if (isBooleanAttribute(attr, config) && !value) {\n            // If attribute value is omitted and it’s a boolean value, check for\n            // `compactBoolean` option: if it’s disabled, set value to attribute name\n            // (XML style)\n            if (!config.options['output.compactBoolean']) {\n                value = [name];\n            }\n        }\n        else if (!value) {\n            value = caret;\n        }\n        pushString(out, ' ' + name);\n        if (value) {\n            pushString(out, '=' + lQuote);\n            pushTokens(value, state);\n            pushString(out, rQuote);\n        }\n        else if (config.options['output.selfClosingStyle'] !== 'html') {\n            pushString(out, '=' + lQuote + rQuote);\n        }\n    }\n}\nfunction pushSnippet(node, state, next) {\n    if (node.value && node.children.length) {\n        // We have a value and child nodes. In case if value contains fields,\n        // we should output children as a content of first field\n        const fieldIx = node.value.findIndex(isField);\n        if (fieldIx !== -1) {\n            pushTokens(node.value.slice(0, fieldIx), state);\n            const line = state.out.line;\n            let pos = fieldIx + 1;\n            node.children.forEach(next);\n            // If there was a line change, trim leading whitespace for better result\n            if (state.out.line !== line && typeof node.value[pos] === 'string') {\n                pushString(state.out, node.value[pos++].trimLeft());\n            }\n            pushTokens(node.value.slice(pos), state);\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Check if given node should be formatted in its parent context\n */\nfunction shouldFormat(node, index, items, state) {\n    const { config, parent } = state;\n    if (!config.options['output.format']) {\n        return false;\n    }\n    if (index === 0 && !parent) {\n        // Do not format very first node\n        return false;\n    }\n    // Do not format single child of snippet\n    if (parent && isSnippet(parent) && items.length === 1) {\n        return false;\n    }\n    /**\n     * Adjacent text-only/snippet nodes\n     */\n    if (isSnippet(node)) {\n        // Adjacent text-only/snippet nodes\n        const format = isSnippet(items[index - 1]) || isSnippet(items[index + 1])\n            // Has newlines: looks like wrapping code fragment\n            || node.value.some(hasNewline)\n            // Format as wrapper: contains children which will be outputted as field content\n            || (node.value.some(isField) && node.children.length);\n        if (format) {\n            return true;\n        }\n    }\n    if (isInline(node, config)) {\n        // Check if inline node is the next sibling of block-level node\n        if (index === 0) {\n            // First node in parent: format if it’s followed by a block-level element\n            for (let i = 0; i < items.length; i++) {\n                if (!isInline(items[i], config)) {\n                    return true;\n                }\n            }\n        }\n        else if (!isInline(items[index - 1], config)) {\n            // Node is right after block-level element\n            return true;\n        }\n        if (config.options['output.inlineBreak']) {\n            // check for adjacent inline elements before and after current element\n            let adjacentInline = 1;\n            let before = index;\n            let after = index;\n            while (isInlineElement(items[--before], config)) {\n                adjacentInline++;\n            }\n            while (isInlineElement(items[++after], config)) {\n                adjacentInline++;\n            }\n            if (adjacentInline >= config.options['output.inlineBreak']) {\n                return true;\n            }\n        }\n        // Edge case: inline node contains node that should receive formatting\n        for (let i = 0, il = node.children.length; i < il; i++) {\n            if (shouldFormat(node.children[i], i, node.children, state)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Returns indentation offset for given node\n */\nfunction getIndent(state) {\n    const { config, parent } = state;\n    if (!parent || isSnippet(parent) || (parent.name && config.options['output.formatSkip'].includes(parent.name))) {\n        return 0;\n    }\n    return 1;\n}\n/**\n * Check if given node value contains newlines\n */\nfunction hasNewline(value) {\n    return typeof value === 'string' && /\\r|\\n/.test(value);\n}\n/**\n * Check if given node value starts with block-level tag\n */\nfunction startsWithBlockTag(value, config) {\n    if (value.length && typeof value[0] === 'string') {\n        const matches = htmlTagRegex.exec(value[0]);\n        if ((matches === null || matches === void 0 ? void 0 : matches.length) && !config.options['inlineElements'].includes(matches[1].toLowerCase())) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction indentFormat(abbr, config, options) {\n    const state = createWalkState(config);\n    state.options = options || {};\n    walk$1(abbr, element$1, state);\n    return state.out.value;\n}\n/**\n * Outputs `node` content to output stream of `state`\n * @param node Context node\n * @param index Index of `node` in `items`\n * @param items List of `node`’s siblings\n * @param state Current walk state\n */\nfunction element$1(node, index, items, state, next) {\n    const { out, options } = state;\n    const { primary, secondary } = collectAttributes(node);\n    // Pick offset level for current node\n    const level = state.parent ? 1 : 0;\n    out.level += level;\n    // Do not indent top-level elements\n    if (shouldFormat$1(node, index, items, state)) {\n        pushNewline(out, true);\n    }\n    if (node.name && (node.name !== 'div' || !primary.length)) {\n        pushString(out, (options.beforeName || '') + node.name + (options.afterName || ''));\n    }\n    pushPrimaryAttributes(primary, state);\n    pushSecondaryAttributes(secondary.filter(shouldOutputAttribute), state);\n    if (node.selfClosing && !node.value && !node.children.length) {\n        if (state.options.selfClose) {\n            pushString(out, state.options.selfClose);\n        }\n    }\n    else {\n        pushValue(node, state);\n        node.children.forEach(next);\n    }\n    out.level -= level;\n}\n/**\n * From given node, collects all attributes as `primary` (id, class) and\n * `secondary` (all the rest) lists. In most indent-based syntaxes, primary attribute\n * has special syntax\n */\nfunction collectAttributes(node) {\n    const primary = [];\n    const secondary = [];\n    if (node.attributes) {\n        for (const attr of node.attributes) {\n            if (isPrimaryAttribute(attr)) {\n                primary.push(attr);\n            }\n            else {\n                secondary.push(attr);\n            }\n        }\n    }\n    return { primary, secondary };\n}\n/**\n * Outputs given attributes as primary into output stream\n */\nfunction pushPrimaryAttributes(attrs, state) {\n    for (const attr of attrs) {\n        if (attr.value) {\n            if (attr.name === 'class') {\n                pushString(state.out, '.');\n                // All whitespace characters must be replaced with dots in class names\n                const tokens = attr.value.map(t => typeof t === 'string' ? t.replace(/\\s+/g, '.') : t);\n                pushTokens(tokens, state);\n            }\n            else {\n                // ID attribute\n                pushString(state.out, '#');\n                pushTokens(attr.value, state);\n            }\n        }\n    }\n}\n/**\n * Outputs given attributes as secondary into output stream\n */\nfunction pushSecondaryAttributes(attrs, state) {\n    if (attrs.length) {\n        const { out, config, options } = state;\n        options.beforeAttribute && pushString(out, options.beforeAttribute);\n        for (let i = 0; i < attrs.length; i++) {\n            const attr = attrs[i];\n            pushString(out, attrName(attr.name || '', config));\n            if (isBooleanAttribute(attr, config) && !attr.value) {\n                if (!config.options['output.compactBoolean'] && options.booleanValue) {\n                    pushString(out, '=' + options.booleanValue);\n                }\n            }\n            else {\n                pushString(out, '=' + attrQuote(attr, config, true));\n                pushTokens(attr.value || caret, state);\n                pushString(out, attrQuote(attr, config));\n            }\n            if (i !== attrs.length - 1 && options.glueAttribute) {\n                pushString(out, options.glueAttribute);\n            }\n        }\n        options.afterAttribute && pushString(out, options.afterAttribute);\n    }\n}\n/**\n * Outputs given node value into state output stream\n */\nfunction pushValue(node, state) {\n    // We should either output value or add caret but for leaf nodes only (no children)\n    if (!node.value && node.children.length) {\n        return;\n    }\n    const value = node.value || caret;\n    const lines = splitByLines$1(value);\n    const { out, options } = state;\n    if (lines.length === 1) {\n        if (node.name || node.attributes) {\n            push(out, ' ');\n        }\n        pushTokens(value, state);\n    }\n    else {\n        // We should format multi-line value with terminating `|` character\n        // and same line length\n        const lineLengths = [];\n        let maxLength = 0;\n        // Calculate lengths of all lines and max line length\n        for (const line of lines) {\n            const len = valueLength(line);\n            lineLengths.push(len);\n            if (len > maxLength) {\n                maxLength = len;\n            }\n        }\n        // Output each line, padded to max length\n        out.level++;\n        for (let i = 0; i < lines.length; i++) {\n            pushNewline(out, true);\n            options.beforeTextLine && push(out, options.beforeTextLine);\n            pushTokens(lines[i], state);\n            if (options.afterTextLine) {\n                push(out, ' '.repeat(maxLength - lineLengths[i]));\n                push(out, options.afterTextLine);\n            }\n        }\n        out.level--;\n    }\n}\nfunction isPrimaryAttribute(attr) {\n    return attr.name === 'class' || attr.name === 'id';\n}\n/**\n * Calculates string length from given tokens\n */\nfunction valueLength(tokens) {\n    let len = 0;\n    for (const token of tokens) {\n        len += typeof token === 'string' ? token.length : token.name.length;\n    }\n    return len;\n}\nfunction shouldFormat$1(node, index, items, state) {\n    // Do not format first top-level element or snippets\n    if (!state.parent && index === 0) {\n        return false;\n    }\n    return !isSnippet(node);\n}\n\nfunction haml(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeName: '%',\n        beforeAttribute: '(',\n        afterAttribute: ')',\n        glueAttribute: ' ',\n        afterTextLine: ' |',\n        booleanValue: 'true',\n        selfClose: '/'\n    });\n}\n\nfunction slim(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeAttribute: ' ',\n        glueAttribute: ' ',\n        beforeTextLine: '| ',\n        selfClose: '/'\n    });\n}\n\nfunction pug(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeAttribute: '(',\n        afterAttribute: ')',\n        glueAttribute: ', ',\n        beforeTextLine: '| ',\n        selfClose: config.options['output.selfClosingStyle'] === 'xml' ? '/' : ''\n    });\n}\n\nconst formatters = { html, haml, slim, pug };\n/**\n * Parses given Emmet abbreviation into a final abbreviation tree with all\n * required transformations applied\n */\nfunction parse(abbr, config) {\n    let oldTextValue;\n    if (typeof abbr === 'string') {\n        let parseOpt = config;\n        if (config.options['jsx.enabled']) {\n            parseOpt = Object.assign(Object.assign({}, parseOpt), { jsx: true });\n        }\n        if (config.options['markup.href']) {\n            parseOpt = Object.assign(Object.assign({}, parseOpt), { href: true });\n        }\n        abbr = parseAbbreviation(abbr, parseOpt);\n        // remove text field before snippets(abbr, config) call\n        // as abbreviation(abbr, parseOpt) already handled it\n        oldTextValue = config.text;\n        config.text = undefined;\n    }\n    // Run abbreviation resolve in two passes:\n    // 1. Map each node to snippets, which are abbreviations as well. A single snippet\n    // may produce multiple nodes\n    // 2. Transform every resolved node\n    abbr = resolveSnippets(abbr, config);\n    walk(abbr, transform, config);\n    config.text = oldTextValue !== null && oldTextValue !== void 0 ? oldTextValue : config.text;\n    return abbr;\n}\n/**\n * Converts given abbreviation to string according to provided `config`\n */\nfunction stringify(abbr, config) {\n    const formatter = formatters[config.syntax] || html;\n    return formatter(abbr, config);\n}\n/**\n * Modifies given node and prepares it for output\n */\nfunction transform(node, ancestors, config) {\n    implicitTag(node, ancestors, config);\n    mergeAttributes(node, config);\n    lorem(node, ancestors, config);\n    if (config.syntax === 'xsl') {\n        xsl(node);\n    }\n    if (config.options['jsx.enabled']) {\n        jsx(node);\n    }\n    if (config.options['bem.enabled']) {\n        bem(node, ancestors, config);\n    }\n}\n\nconst reProperty = /^([a-z-]+)(?:\\s*:\\s*([^\\n\\r;]+?);*)?$/;\nconst opt = { value: true };\n/**\n * Creates structure for holding resolved CSS snippet\n */\nfunction createSnippet(key, value) {\n    // A snippet could be a raw text snippet (e.g. arbitrary text string) or a\n    // CSS property with possible values separated by `|`.\n    // In latter case, we have to parse snippet as CSS abbreviation\n    const m = value.match(reProperty);\n    if (m) {\n        const keywords = {};\n        const parsed = m[2] ? m[2].split('|').map(parseValue) : [];\n        for (const item of parsed) {\n            for (const cssVal of item) {\n                collectKeywords(cssVal, keywords);\n            }\n        }\n        return {\n            type: \"Property\" /* Property */,\n            key,\n            property: m[1],\n            value: parsed,\n            keywords,\n            dependencies: []\n        };\n    }\n    return { type: \"Raw\" /* Raw */, key, value };\n}\n/**\n * Nests more specific CSS properties into shorthand ones, e.g.\n * `background-position-x` -> `background-position` -> `background`\n */\nfunction nest(snippets) {\n    snippets = snippets.slice().sort(snippetsSort);\n    const stack = [];\n    let prev;\n    // For sorted list of CSS properties, create dependency graph where each\n    // shorthand property contains its more specific one, e.g.\n    // background -> background-position -> background-position-x\n    for (const cur of snippets.filter(isProperty)) {\n        // Check if current property belongs to one from parent stack.\n        // Since `snippets` array is sorted, items are perfectly aligned\n        // from shorthands to more specific variants\n        while (stack.length) {\n            prev = stack[stack.length - 1];\n            if (cur.property.startsWith(prev.property)\n                && cur.property.charCodeAt(prev.property.length) === 45 /* - */) {\n                prev.dependencies.push(cur);\n                stack.push(cur);\n                break;\n            }\n            stack.pop();\n        }\n        if (!stack.length) {\n            stack.push(cur);\n        }\n    }\n    return snippets;\n}\n/**\n * A sorting function for array of snippets\n */\nfunction snippetsSort(a, b) {\n    if (a.key === b.key) {\n        return 0;\n    }\n    return a.key < b.key ? -1 : 1;\n}\nfunction parseValue(value) {\n    return parse$2(value.trim(), opt)[0].value;\n}\nfunction isProperty(snippet) {\n    return snippet.type === \"Property\" /* Property */;\n}\nfunction collectKeywords(cssVal, dest) {\n    for (const v of cssVal.value) {\n        if (v.type === 'Literal') {\n            dest[v.value] = v;\n        }\n        else if (v.type === 'FunctionCall') {\n            dest[v.name] = v;\n        }\n        else if (v.type === 'Field') {\n            // Create literal from field, if available\n            const value = v.name.trim();\n            if (value) {\n                dest[value] = { type: 'Literal', value };\n            }\n        }\n    }\n}\n\n/**\n * Calculates how close `str1` matches `str2` using fuzzy match.\n * How matching works:\n * – first characters of both `str1` and `str2` *must* match\n * – `str1` length larger than `str2` length is allowed only when `unmatched` is true\n * – ideal match is when `str1` equals to `str2` (score: 1)\n * – next best match is `str2` starts with `str1` (score: 1 × percent of matched characters)\n * – other scores depend on how close characters of `str1` to the beginning of `str2`\n * @param partialMatch Allow length `str1` to be greater than `str2` length\n */\nfunction scoreMatch(str1, str2, partialMatch = false) {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n    if (str1 === str2) {\n        return 1;\n    }\n    // Both strings MUST start with the same character\n    if (!str1 || !str2 || str1.charCodeAt(0) !== str2.charCodeAt(0)) {\n        return 0;\n    }\n    const str1Len = str1.length;\n    const str2Len = str2.length;\n    if (!partialMatch && str1Len > str2Len) {\n        return 0;\n    }\n    // Characters from `str1` which are closer to the beginning of a `str2` should\n    // have higher score.\n    // For example, if `str2` is `abcde`, it’s max score is:\n    // 5 + 4 + 3 + 2 + 1 = 15 (sum of character positions in reverse order)\n    // Matching `abd` against `abcde` should produce:\n    // 5 + 4 + 2 = 11\n    // Acronym bonus for match right after `-`. Matching `abd` against `abc-de`\n    // should produce:\n    // 6 + 5 + 4 (use `d` position in `abd`, not in abc-de`)\n    const minLength = Math.min(str1Len, str2Len);\n    const maxLength = Math.max(str1Len, str2Len);\n    let i = 1;\n    let j = 1;\n    let score = maxLength;\n    let ch1 = 0;\n    let ch2 = 0;\n    let found = false;\n    let acronym = false;\n    while (i < str1Len) {\n        ch1 = str1.charCodeAt(i);\n        found = false;\n        acronym = false;\n        while (j < str2Len) {\n            ch2 = str2.charCodeAt(j);\n            if (ch1 === ch2) {\n                found = true;\n                score += maxLength - (acronym ? i : j);\n                break;\n            }\n            // add acronym bonus for exactly next match after unmatched `-`\n            acronym = ch2 === 45 /* - */;\n            j++;\n        }\n        if (!found) {\n            if (!partialMatch) {\n                return 0;\n            }\n            break;\n        }\n        i++;\n    }\n    const matchRatio = i / maxLength;\n    const delta = maxLength - minLength;\n    const maxScore = sum(maxLength) - sum(delta);\n    return (score * matchRatio) / maxScore;\n}\n/**\n * Calculates sum of first `n` numbers, e.g. 1+2+3+...n\n */\nfunction sum(n) {\n    return n * (n + 1) / 2;\n}\n\nfunction color(token, shortHex) {\n    if (!token.r && !token.g && !token.b && !token.a) {\n        return 'transparent';\n    }\n    else if (token.a === 1) {\n        return asHex(token, shortHex);\n    }\n    return asRGB(token);\n}\n/**\n * Output given color as hex value\n * @param short Produce short value (e.g. #fff instead of #ffffff), if possible\n */\nfunction asHex(token, short) {\n    const fn = (short && isShortHex(token.r) && isShortHex(token.g) && isShortHex(token.b))\n        ? toShortHex : toHex;\n    return '#' + fn(token.r) + fn(token.g) + fn(token.b);\n}\n/**\n * Output current color as `rgba?(...)` CSS color\n */\nfunction asRGB(token) {\n    const values = [token.r, token.g, token.b];\n    if (token.a !== 1) {\n        values.push(frac(token.a, 8));\n    }\n    return `${values.length === 3 ? 'rgb' : 'rgba'}(${values.join(', ')})`;\n}\nfunction frac(num, digits = 4) {\n    return num.toFixed(digits).replace(/\\.?0+$/, '');\n}\nfunction isShortHex(hex) {\n    return !(hex % 17);\n}\nfunction toShortHex(num) {\n    return (num >> 4).toString(16);\n}\nfunction toHex(num) {\n    return pad(num.toString(16), 2);\n}\nfunction pad(value, len) {\n    while (value.length < len) {\n        value = '0' + value;\n    }\n    return value;\n}\n\nfunction css(abbr, config) {\n    var _a;\n    const out = createOutputStream(config.options);\n    const format = config.options['output.format'];\n    if (((_a = config.context) === null || _a === void 0 ? void 0 : _a.name) === \"@@section\" /* Section */) {\n        // For section context, filter out unmatched snippets\n        abbr = abbr.filter(node => node.snippet);\n    }\n    for (let i = 0; i < abbr.length; i++) {\n        if (format && i !== 0) {\n            pushNewline(out, true);\n        }\n        property(abbr[i], out, config);\n    }\n    return out.value;\n}\n/**\n * Outputs given abbreviation node into output stream\n */\nfunction property(node, out, config) {\n    const isJSON = config.options['stylesheet.json'];\n    if (node.name) {\n        // It’s a CSS property\n        const name = isJSON ? toCamelCase(node.name) : node.name;\n        pushString(out, name + config.options['stylesheet.between']);\n        if (node.value.length) {\n            propertyValue(node, out, config);\n        }\n        else {\n            pushField(out, 0, '');\n        }\n        if (isJSON) {\n            // For CSS-in-JS, always finalize property with comma\n            // NB: seems like `important` is not available in CSS-in-JS syntaxes\n            push(out, ',');\n        }\n        else {\n            outputImportant(node, out, true);\n            push(out, config.options['stylesheet.after']);\n        }\n    }\n    else {\n        // It’s a regular snippet, output plain tokens without any additional formatting\n        for (const cssVal of node.value) {\n            for (const v of cssVal.value) {\n                outputToken(v, out, config);\n            }\n        }\n        outputImportant(node, out, node.value.length > 0);\n    }\n}\nfunction propertyValue(node, out, config) {\n    const isJSON = config.options['stylesheet.json'];\n    const num = isJSON ? getSingleNumeric(node) : null;\n    if (num && (!num.unit || num.unit === 'px')) {\n        // For CSS-in-JS, if property contains single numeric value, output it\n        // as JS number\n        push(out, String(num.value));\n    }\n    else {\n        const quote = getQuote(config);\n        isJSON && push(out, quote);\n        for (let i = 0; i < node.value.length; i++) {\n            if (i !== 0) {\n                push(out, ', ');\n            }\n            outputValue(node.value[i], out, config);\n        }\n        isJSON && push(out, quote);\n    }\n}\nfunction outputImportant(node, out, separator) {\n    if (node.important) {\n        if (separator) {\n            push(out, ' ');\n        }\n        push(out, '!important');\n    }\n}\nfunction outputValue(value, out, config) {\n    for (let i = 0, prevEnd = -1; i < value.value.length; i++) {\n        const token = value.value[i];\n        // Handle edge case: a field is written close to previous token like this: `foo${bar}`.\n        // We should not add delimiter here\n        if (i !== 0 && (token.type !== 'Field' || token.start !== prevEnd)) {\n            push(out, ' ');\n        }\n        outputToken(token, out, config);\n        prevEnd = token['end'];\n    }\n}\nfunction outputToken(token, out, config) {\n    if (token.type === 'ColorValue') {\n        push(out, color(token, config.options['stylesheet.shortHex']));\n    }\n    else if (token.type === 'Literal') {\n        pushString(out, token.value);\n    }\n    else if (token.type === 'NumberValue') {\n        pushString(out, frac(token.value, 4) + token.unit);\n    }\n    else if (token.type === 'StringValue') {\n        const quote = token.quote === 'double' ? '\"' : '\\'';\n        pushString(out, quote + token.value + quote);\n    }\n    else if (token.type === 'Field') {\n        pushField(out, token.index, token.name);\n    }\n    else if (token.type === 'FunctionCall') {\n        push(out, token.name + '(');\n        for (let i = 0; i < token.arguments.length; i++) {\n            if (i) {\n                push(out, ', ');\n            }\n            outputValue(token.arguments[i], out, config);\n        }\n        push(out, ')');\n    }\n}\n/**\n * If value of given property is a single numeric value, returns this token\n */\nfunction getSingleNumeric(node) {\n    if (node.value.length === 1) {\n        const cssVal = node.value[0];\n        if (cssVal.value.length === 1 && cssVal.value[0].type === 'NumberValue') {\n            return cssVal.value[0];\n        }\n    }\n}\n/**\n * Converts kebab-case string to camelCase\n */\nfunction toCamelCase(str) {\n    return str.replace(/\\-(\\w)/g, (_, letter) => letter.toUpperCase());\n}\nfunction getQuote(config) {\n    return config.options['stylesheet.jsonDoubleQuotes'] ? '\"' : '\\'';\n}\n\nconst gradientName = 'lg';\n/**\n * Parses given Emmet abbreviation into a final abbreviation tree with all\n * required transformations applied\n */\nfunction parse$1(abbr, config) {\n    var _a;\n    const snippets = ((_a = config.cache) === null || _a === void 0 ? void 0 : _a.stylesheetSnippets) || convertSnippets(config.snippets);\n    if (config.cache) {\n        config.cache.stylesheetSnippets = snippets;\n    }\n    if (typeof abbr === 'string') {\n        abbr = parse$2(abbr, { value: isValueScope(config) });\n    }\n    const filteredSnippets = getSnippetsForScope(snippets, config);\n    for (const node of abbr) {\n        resolveNode(node, filteredSnippets, config);\n    }\n    return abbr;\n}\n/**\n * Converts given raw snippets into internal snippets representation\n */\nfunction convertSnippets(snippets) {\n    const result = [];\n    for (const key of Object.keys(snippets)) {\n        result.push(createSnippet(key, snippets[key]));\n    }\n    return nest(result);\n}\n/**\n * Resolves given node: finds matched CSS snippets using fuzzy match and resolves\n * keyword aliases from node value\n */\nfunction resolveNode(node, snippets, config) {\n    if (!resolveGradient(node, config)) {\n        const score = config.options['stylesheet.fuzzySearchMinScore'];\n        if (isValueScope(config)) {\n            // Resolve as value of given CSS property\n            const propName = config.context.name;\n            const snippet = snippets.find(s => s.type === \"Property\" /* Property */ && s.property === propName);\n            resolveValueKeywords(node, config, snippet, score);\n            node.snippet = snippet;\n        }\n        else if (node.name) {\n            const snippet = findBestMatch(node.name, snippets, score, true);\n            node.snippet = snippet;\n            if (snippet) {\n                if (snippet.type === \"Property\" /* Property */) {\n                    resolveAsProperty(node, snippet, config);\n                }\n                else {\n                    resolveAsSnippet(node, snippet);\n                }\n            }\n        }\n    }\n    if (node.name || config.context) {\n        // Resolve numeric values for CSS properties only\n        resolveNumericValue(node, config);\n    }\n    return node;\n}\n/**\n * Resolves CSS gradient shortcut from given property, if possible\n */\nfunction resolveGradient(node, config) {\n    let gradientFn = null;\n    const cssVal = node.value.length === 1 ? node.value[0] : null;\n    if (cssVal && cssVal.value.length === 1) {\n        const v = cssVal.value[0];\n        if (v.type === 'FunctionCall' && v.name === gradientName) {\n            gradientFn = v;\n        }\n    }\n    if (gradientFn || node.name === gradientName) {\n        if (!gradientFn) {\n            gradientFn = {\n                type: 'FunctionCall',\n                name: 'linear-gradient',\n                arguments: [cssValue(field(0, ''))]\n            };\n        }\n        else {\n            gradientFn = Object.assign(Object.assign({}, gradientFn), { name: 'linear-gradient' });\n        }\n        if (!config.context) {\n            node.name = 'background-image';\n        }\n        node.value = [cssValue(gradientFn)];\n        return true;\n    }\n    return false;\n}\n/**\n * Resolves given parsed abbreviation node as CSS property\n */\nfunction resolveAsProperty(node, snippet, config) {\n    const abbr = node.name;\n    // Check for unmatched part of abbreviation\n    // For example, in `dib` abbreviation the matched part is `d` and `ib` should\n    // be considered as inline value. If unmatched fragment exists, we should check\n    // if it matches actual value of snippet. If either explicit value is specified\n    // or unmatched fragment did not resolve to to a keyword, we should consider\n    // matched snippet as invalid\n    const inlineValue = getUnmatchedPart(abbr, snippet.key);\n    if (inlineValue) {\n        if (node.value.length) {\n            // Already have value: unmatched part indicates matched snippet is invalid\n            return node;\n        }\n        const kw = resolveKeyword(inlineValue, config, snippet);\n        if (!kw) {\n            return node;\n        }\n        node.value.push(cssValue(kw));\n    }\n    node.name = snippet.property;\n    if (node.value.length) {\n        // Replace keyword alias from current abbreviation node with matched keyword\n        resolveValueKeywords(node, config, snippet);\n    }\n    else if (snippet.value.length) {\n        const defaultValue = snippet.value[0];\n        // https://github.com/emmetio/emmet/issues/558\n        // We should auto-select inserted value only if there’s multiple value\n        // choice\n        node.value = snippet.value.length === 1 || defaultValue.some(hasField)\n            ? defaultValue\n            : defaultValue.map(n => wrapWithField(n, config));\n    }\n    return node;\n}\nfunction resolveValueKeywords(node, config, snippet, minScore) {\n    for (const cssVal of node.value) {\n        const value = [];\n        for (const token of cssVal.value) {\n            if (token.type === 'Literal') {\n                value.push(resolveKeyword(token.value, config, snippet, minScore) || token);\n            }\n            else if (token.type === 'FunctionCall') {\n                // For function calls, we should find matching function call\n                // and merge arguments\n                const match = resolveKeyword(token.name, config, snippet, minScore);\n                if (match && match.type === 'FunctionCall') {\n                    value.push(Object.assign(Object.assign({}, match), { arguments: token.arguments.concat(match.arguments.slice(token.arguments.length)) }));\n                }\n                else {\n                    value.push(token);\n                }\n            }\n            else {\n                value.push(token);\n            }\n        }\n        cssVal.value = value;\n    }\n}\n/**\n * Resolves given parsed abbreviation node as a snippet: a plain code chunk\n */\nfunction resolveAsSnippet(node, snippet) {\n    // When resolving snippets, we have to do the following:\n    // 1. Replace field placeholders with actual field tokens.\n    // 2. If input values given, put them instead of fields\n    let offset = 0;\n    let m;\n    const reField = /\\$\\{(\\d+)(:[^}]+)?\\}/g;\n    const inputValue = node.value[0];\n    const outputValue = [];\n    while (m = reField.exec(snippet.value)) {\n        if (offset !== m.index) {\n            outputValue.push(literal(snippet.value.slice(offset, m.index)));\n        }\n        offset = m.index + m[0].length;\n        if (inputValue && inputValue.value.length) {\n            outputValue.push(inputValue.value.shift());\n        }\n        else {\n            outputValue.push(field(Number(m[1]), m[2] ? m[2].slice(1) : ''));\n        }\n    }\n    const tail = snippet.value.slice(offset);\n    if (tail) {\n        outputValue.push(literal(tail));\n    }\n    node.name = void 0;\n    node.value = [cssValue(...outputValue)];\n    return node;\n}\n/**\n * Finds best matching item from `items` array\n * @param abbr  Abbreviation to match\n * @param items List of items for match\n * @param minScore The minimum score the best matched item should have to be a valid match.\n */\nfunction findBestMatch(abbr, items, minScore = 0, partialMatch = false) {\n    let matchedItem = null;\n    let maxScore = 0;\n    for (const item of items) {\n        const score = scoreMatch(abbr, getScoringPart(item), partialMatch);\n        if (score === 1) {\n            // direct hit, no need to look further\n            return item;\n        }\n        if (score && score >= maxScore) {\n            maxScore = score;\n            matchedItem = item;\n        }\n    }\n    return maxScore >= minScore ? matchedItem : null;\n}\nfunction getScoringPart(item) {\n    return typeof item === 'string' ? item : item.key;\n}\n/**\n * Returns a part of `abbr` that wasn’t directly matched against `str`.\n * For example, if abbreviation `poas` is matched against `position`,\n * the unmatched part will be `as` since `a` wasn’t found in string stream\n */\nfunction getUnmatchedPart(abbr, str) {\n    for (let i = 0, lastPos = 0; i < abbr.length; i++) {\n        lastPos = str.indexOf(abbr[i], lastPos);\n        if (lastPos === -1) {\n            return abbr.slice(i);\n        }\n        lastPos++;\n    }\n    return '';\n}\n/**\n * Resolves given keyword shorthand into matched snippet keyword or global keyword,\n * if possible\n */\nfunction resolveKeyword(kw, config, snippet, minScore) {\n    let ref;\n    if (snippet) {\n        if (ref = findBestMatch(kw, Object.keys(snippet.keywords), minScore)) {\n            return snippet.keywords[ref];\n        }\n        for (const dep of snippet.dependencies) {\n            if (ref = findBestMatch(kw, Object.keys(dep.keywords), minScore)) {\n                return dep.keywords[ref];\n            }\n        }\n    }\n    if (ref = findBestMatch(kw, config.options['stylesheet.keywords'], minScore)) {\n        return literal(ref);\n    }\n    return null;\n}\n/**\n * Resolves numeric values in given abbreviation node\n */\nfunction resolveNumericValue(node, config) {\n    const aliases = config.options['stylesheet.unitAliases'];\n    const unitless = config.options['stylesheet.unitless'];\n    for (const v of node.value) {\n        for (const t of v.value) {\n            if (t.type === 'NumberValue') {\n                if (t.unit) {\n                    t.unit = aliases[t.unit] || t.unit;\n                }\n                else if (t.value !== 0 && !unitless.includes(node.name)) {\n                    t.unit = t.rawValue.includes('.')\n                        ? config.options['stylesheet.floatUnit']\n                        : config.options['stylesheet.intUnit'];\n                }\n            }\n        }\n    }\n}\n/**\n * Constructs CSS value token\n */\nfunction cssValue(...args) {\n    return {\n        type: 'CSSValue',\n        value: args\n    };\n}\n/**\n * Constructs literal token\n */\nfunction literal(value) {\n    return { type: 'Literal', value };\n}\n/**\n * Constructs field token\n */\nfunction field(index, name) {\n    return { type: 'Field', index, name };\n}\n/**\n * Check if given value contains fields\n */\nfunction hasField(value) {\n    for (const v of value.value) {\n        if (v.type === 'Field' || (v.type === 'FunctionCall' && v.arguments.some(hasField))) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Wraps tokens of given abbreviation with fields\n */\nfunction wrapWithField(node, config, state = { index: 1 }) {\n    let value = [];\n    for (const v of node.value) {\n        switch (v.type) {\n            case 'ColorValue':\n                value.push(field(state.index++, color(v, config.options['stylesheet.shortHex'])));\n                break;\n            case 'Literal':\n                value.push(field(state.index++, v.value));\n                break;\n            case 'NumberValue':\n                value.push(field(state.index++, `${v.value}${v.unit}`));\n                break;\n            case 'StringValue':\n                const q = v.quote === 'single' ? '\\'' : '\"';\n                value.push(field(state.index++, q + v.value + q));\n                break;\n            case 'FunctionCall':\n                value.push(field(state.index++, v.name), literal('('));\n                for (let i = 0, il = v.arguments.length; i < il; i++) {\n                    value = value.concat(wrapWithField(v.arguments[i], config, state).value);\n                    if (i !== il - 1) {\n                        value.push(literal(', '));\n                    }\n                }\n                value.push(literal(')'));\n                break;\n            default:\n                value.push(v);\n        }\n    }\n    return Object.assign(Object.assign({}, node), { value });\n}\n/**\n * Check if abbreviation should be expanded in CSS value context\n */\nfunction isValueScope(config) {\n    if (config.context) {\n        return config.context.name === \"@@value\" /* Value */ || !config.context.name.startsWith('@@');\n    }\n    return false;\n}\n/**\n * Returns snippets for given scope\n */\nfunction getSnippetsForScope(snippets, config) {\n    if (config.context) {\n        if (config.context.name === \"@@section\" /* Section */) {\n            return snippets.filter(s => s.type === \"Raw\" /* Raw */);\n        }\n        if (config.context.name === \"@@property\" /* Property */) {\n            return snippets.filter(s => s.type === \"Property\" /* Property */);\n        }\n    }\n    return snippets;\n}\n\nvar markupSnippets = {\n\t\"a\": \"a[href]\",\n\t\"a:blank\": \"a[href='http://${0}' target='_blank' rel='noopener noreferrer']\",\n\t\"a:link\": \"a[href='http://${0}']\",\n\t\"a:mail\": \"a[href='mailto:${0}']\",\n\t\"a:tel\": \"a[href='tel:+${0}']\",\n\t\"abbr\": \"abbr[title]\",\n\t\"acr|acronym\": \"acronym[title]\",\n\t\"base\": \"base[href]/\",\n\t\"basefont\": \"basefont/\",\n\t\"br\": \"br/\",\n\t\"frame\": \"frame/\",\n\t\"hr\": \"hr/\",\n\t\"bdo\": \"bdo[dir]\",\n\t\"bdo:r\": \"bdo[dir=rtl]\",\n\t\"bdo:l\": \"bdo[dir=ltr]\",\n\t\"col\": \"col/\",\n\t\"link\": \"link[rel=stylesheet href]/\",\n\t\"link:css\": \"link[href='${1:style}.css']\",\n\t\"link:print\": \"link[href='${1:print}.css' media=print]\",\n\t\"link:favicon\": \"link[rel='shortcut icon' type=image/x-icon href='${1:favicon.ico}']\",\n\t\"link:mf|link:manifest\": \"link[rel='manifest' href='${1:manifest.json}']\",\n\t\"link:touch\": \"link[rel=apple-touch-icon href='${1:favicon.png}']\",\n\t\"link:rss\": \"link[rel=alternate type=application/rss+xml title=RSS href='${1:rss.xml}']\",\n\t\"link:atom\": \"link[rel=alternate type=application/atom+xml title=Atom href='${1:atom.xml}']\",\n\t\"link:im|link:import\": \"link[rel=import href='${1:component}.html']\",\n\t\"meta\": \"meta/\",\n\t\"meta:utf\": \"meta[http-equiv=Content-Type content='text/html;charset=UTF-8']\",\n\t\"meta:vp\": \"meta[name=viewport content='width=${1:device-width}, initial-scale=${2:1.0}']\",\n\t\"meta:compat\": \"meta[http-equiv=X-UA-Compatible content='${1:IE=7}']\",\n\t\"meta:edge\": \"meta:compat[content='${1:ie=edge}']\",\n\t\"meta:redirect\": \"meta[http-equiv=refresh content='0; url=${1:http://example.com}']\",\n\t\"meta:kw\": \"meta[name=keywords content]\",\n\t\"meta:desc\": \"meta[name=description content]\",\n\t\"style\": \"style\",\n\t\"script\": \"script\",\n\t\"script:src\": \"script[src]\",\n\t\"img\": \"img[src alt]/\",\n\t\"img:s|img:srcset\": \"img[srcset src alt]\",\n\t\"img:z|img:sizes\": \"img[sizes srcset src alt]\",\n\t\"picture\": \"picture\",\n\t\"src|source\": \"source/\",\n\t\"src:sc|source:src\": \"source[src type]\",\n\t\"src:s|source:srcset\": \"source[srcset]\",\n\t\"src:t|source:type\": \"source[srcset type='${1:image/}']\",\n\t\"src:z|source:sizes\": \"source[sizes srcset]\",\n\t\"src:m|source:media\": \"source[media='(${1:min-width: })' srcset]\",\n\t\"src:mt|source:media:type\": \"source:media[type='${2:image/}']\",\n\t\"src:mz|source:media:sizes\": \"source:media[sizes srcset]\",\n\t\"src:zt|source:sizes:type\": \"source[sizes srcset type='${1:image/}']\",\n\t\"iframe\": \"iframe[src frameborder=0]\",\n\t\"embed\": \"embed[src type]/\",\n\t\"object\": \"object[data type]\",\n\t\"param\": \"param[name value]/\",\n\t\"map\": \"map[name]\",\n\t\"area\": \"area[shape coords href alt]/\",\n\t\"area:d\": \"area[shape=default]\",\n\t\"area:c\": \"area[shape=circle]\",\n\t\"area:r\": \"area[shape=rect]\",\n\t\"area:p\": \"area[shape=poly]\",\n\t\"form\": \"form[action]\",\n\t\"form:get\": \"form[method=get]\",\n\t\"form:post\": \"form[method=post]\",\n\t\"label\": \"label[for]\",\n\t\"input\": \"input[type=${1:text}]/\",\n\t\"inp\": \"input[name=${1} id=${1}]\",\n\t\"input:h|input:hidden\": \"input[type=hidden name]\",\n\t\"input:t|input:text\": \"inp[type=text]\",\n\t\"input:search\": \"inp[type=search]\",\n\t\"input:email\": \"inp[type=email]\",\n\t\"input:url\": \"inp[type=url]\",\n\t\"input:p|input:password\": \"inp[type=password]\",\n\t\"input:datetime\": \"inp[type=datetime]\",\n\t\"input:date\": \"inp[type=date]\",\n\t\"input:datetime-local\": \"inp[type=datetime-local]\",\n\t\"input:month\": \"inp[type=month]\",\n\t\"input:week\": \"inp[type=week]\",\n\t\"input:time\": \"inp[type=time]\",\n\t\"input:tel\": \"inp[type=tel]\",\n\t\"input:number\": \"inp[type=number]\",\n\t\"input:color\": \"inp[type=color]\",\n\t\"input:c|input:checkbox\": \"inp[type=checkbox]\",\n\t\"input:r|input:radio\": \"inp[type=radio]\",\n\t\"input:range\": \"inp[type=range]\",\n\t\"input:f|input:file\": \"inp[type=file]\",\n\t\"input:s|input:submit\": \"input[type=submit value]\",\n\t\"input:i|input:image\": \"input[type=image src alt]\",\n\t\"input:b|input:btn|input:button\": \"input[type=button value]\",\n\t\"input:reset\": \"input:button[type=reset]\",\n\t\"isindex\": \"isindex/\",\n\t\"select\": \"select[name=${1} id=${1}]\",\n\t\"select:d|select:disabled\": \"select[disabled.]\",\n\t\"opt|option\": \"option[value]\",\n\t\"textarea\": \"textarea[name=${1} id=${1} cols=${2:30} rows=${3:10}]\",\n\t\"marquee\": \"marquee[behavior direction]\",\n\t\"menu:c|menu:context\": \"menu[type=context]\",\n\t\"menu:t|menu:toolbar\": \"menu[type=toolbar]\",\n\t\"video\": \"video[src]\",\n\t\"audio\": \"audio[src]\",\n\t\"html:xml\": \"html[xmlns=http://www.w3.org/1999/xhtml]\",\n\t\"keygen\": \"keygen/\",\n\t\"command\": \"command/\",\n\t\"btn:s|button:s|button:submit\" : \"button[type=submit]\",\n\t\"btn:r|button:r|button:reset\" : \"button[type=reset]\",\n\t\"btn:d|button:d|button:disabled\" : \"button[disabled.]\",\n\t\"fst:d|fset:d|fieldset:d|fieldset:disabled\" : \"fieldset[disabled.]\",\n\n\t\"bq\": \"blockquote\",\n\t\"fig\": \"figure\",\n\t\"figc\": \"figcaption\",\n\t\"pic\": \"picture\",\n\t\"ifr\": \"iframe\",\n\t\"emb\": \"embed\",\n\t\"obj\": \"object\",\n\t\"cap\": \"caption\",\n\t\"colg\": \"colgroup\",\n\t\"fst\": \"fieldset\",\n\t\"btn\": \"button\",\n\t\"optg\": \"optgroup\",\n\t\"tarea\": \"textarea\",\n\t\"leg\": \"legend\",\n\t\"sect\": \"section\",\n\t\"art\": \"article\",\n\t\"hdr\": \"header\",\n\t\"ftr\": \"footer\",\n\t\"adr\": \"address\",\n\t\"dlg\": \"dialog\",\n\t\"str\": \"strong\",\n\t\"prog\": \"progress\",\n\t\"mn\": \"main\",\n\t\"tem\": \"template\",\n\t\"fset\": \"fieldset\",\n\t\"datag\": \"datagrid\",\n\t\"datal\": \"datalist\",\n\t\"kg\": \"keygen\",\n\t\"out\": \"output\",\n\t\"det\": \"details\",\n\t\"sum\": \"summary\",\n\t\"cmd\": \"command\",\n\n\t\"ri:d|ri:dpr\": \"img:s\",\n\t\"ri:v|ri:viewport\": \"img:z\",\n\t\"ri:a|ri:art\": \"pic>src:m+img\",\n\t\"ri:t|ri:type\": \"pic>src:t+img\",\n\n\t\"!!!\": \"{<!DOCTYPE html>}\",\n\t\"doc\": \"html[lang=${lang}]>(head>meta[charset=${charset}]+meta[http-equiv='X-UA-Compatible'][content='IE=edge']+meta:vp+title{${1:Document}})+body\",\n\t\"!|html:5\": \"!!!+doc\",\n\n\t\"c\": \"{<!-- ${0} -->}\",\n\t\"cc:ie\": \"{<!--[if IE]>${0}<![endif]-->}\",\n\t\"cc:noie\": \"{<!--[if !IE]><!-->${0}<!--<![endif]-->}\"\n};\n\nvar stylesheetSnippets = {\n\t\"@f\": \"@font-face {\\n\\tfont-family: ${1};\\n\\tsrc: url(${2});\\n}\",\n\t\"@ff\": \"@font-face {\\n\\tfont-family: '${1:FontName}';\\n\\tsrc: url('${2:FileName}.eot');\\n\\tsrc: url('${2:FileName}.eot?#iefix') format('embedded-opentype'),\\n\\t\\t url('${2:FileName}.woff') format('woff'),\\n\\t\\t url('${2:FileName}.ttf') format('truetype'),\\n\\t\\t url('${2:FileName}.svg#${1:FontName}') format('svg');\\n\\tfont-style: ${3:normal};\\n\\tfont-weight: ${4:normal};\\n}\",\n\t\"@i|@import\": \"@import url(${0});\",\n\t\"@kf\": \"@keyframes ${1:identifier} {\\n\\t${2}\\n}\",\n\t\"@m|@media\": \"@media ${1:screen} {\\n\\t${0}\\n}\",\n\t\"ac\": \"align-content:start|end|flex-start|flex-end|center|space-between|space-around|stretch|space-evenly\",\n\t\"ai\": \"align-items:start|end|flex-start|flex-end|center|baseline|stretch\",\n\t\"anim\": \"animation:${1:name} ${2:duration} ${3:timing-function} ${4:delay} ${5:iteration-count} ${6:direction} ${7:fill-mode}\",\n\t\"animdel\": \"animation-delay:time\",\n\t\"animdir\": \"animation-direction:normal|reverse|alternate|alternate-reverse\",\n\t\"animdur\": \"animation-duration:${1:0}s\",\n\t\"animfm\": \"animation-fill-mode:both|forwards|backwards\",\n\t\"animic\": \"animation-iteration-count:1|infinite\",\n\t\"animn\": \"animation-name\",\n\t\"animps\": \"animation-play-state:running|paused\",\n\t\"animtf\": \"animation-timing-function:linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(${1:0.1}, ${2:0.7}, ${3:1.0}, ${3:0.1})\",\n\t\"ap\": \"appearance:none\",\n\t\"as\": \"align-self:start|end|auto|flex-start|flex-end|center|baseline|stretch\",\n\t\"b\": \"bottom\",\n\t\"bd\": \"border:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdb\": \"border-bottom:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdbc\": \"border-bottom-color:${1:#000}\",\n\t\"bdbi\": \"border-bottom-image:url(${0})\",\n\t\"bdbk\": \"border-break:close\",\n\t\"bdbli\": \"border-bottom-left-image:url(${0})|continue\",\n\t\"bdblrs\": \"border-bottom-left-radius\",\n\t\"bdbri\": \"border-bottom-right-image:url(${0})|continue\",\n\t\"bdbrrs\": \"border-bottom-right-radius\",\n\t\"bdbs\": \"border-bottom-style\",\n\t\"bdbw\": \"border-bottom-width\",\n\t\"bdc\": \"border-color:${1:#000}\",\n\t\"bdci\": \"border-corner-image:url(${0})|continue\",\n\t\"bdcl\": \"border-collapse:collapse|separate\",\n\t\"bdf\": \"border-fit:repeat|clip|scale|stretch|overwrite|overflow|space\",\n\t\"bdi\": \"border-image:url(${0})\",\n\t\"bdl\": \"border-left:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdlc\": \"border-left-color:${1:#000}\",\n\t\"bdlen\": \"border-length\",\n\t\"bdli\": \"border-left-image:url(${0})\",\n\t\"bdls\": \"border-left-style\",\n\t\"bdlw\": \"border-left-width\",\n\t\"bdr\": \"border-right:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdrc\": \"border-right-color:${1:#000}\",\n\t\"bdri\": \"border-right-image:url(${0})\",\n\t\"bdrs\": \"border-radius\",\n\t\"bdrst\": \"border-right-style\",\n\t\"bdrw\": \"border-right-width\",\n\t\"bds\": \"border-style:none|hidden|dotted|dashed|solid|double|dot-dash|dot-dot-dash|wave|groove|ridge|inset|outset\",\n\t\"bdsp\": \"border-spacing\",\n\t\"bdt\": \"border-top:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdtc\": \"border-top-color:${1:#000}\",\n\t\"bdti\": \"border-top-image:url(${0})\",\n\t\"bdtli\": \"border-top-left-image:url(${0})|continue\",\n\t\"bdtlrs\": \"border-top-left-radius\",\n\t\"bdtri\": \"border-top-right-image:url(${0})|continue\",\n\t\"bdtrrs\": \"border-top-right-radius\",\n\t\"bdts\": \"border-top-style\",\n\t\"bdtw\": \"border-top-width\",\n\t\"bdw\": \"border-width\",\n\t\"bfv\": \"backface-visibility:hidden|visible\",\n\t\"bg\": \"background:${1:#000}\",\n\t\"bga\": \"background-attachment:fixed|scroll\",\n\t\"bgbk\": \"background-break:bounding-box|each-box|continuous\",\n\t\"bgc\": \"background-color:#${1:fff}\",\n\t\"bgcp\": \"background-clip:padding-box|border-box|content-box|no-clip\",\n\t\"bgi\": \"background-image:url(${0})\",\n\t\"bgo\": \"background-origin:padding-box|border-box|content-box\",\n\t\"bgp\": \"background-position:${1:0} ${2:0}\",\n\t\"bgpx\": \"background-position-x\",\n\t\"bgpy\": \"background-position-y\",\n\t\"bgr\": \"background-repeat:no-repeat|repeat-x|repeat-y|space|round\",\n\t\"bgsz\": \"background-size:contain|cover\",\n\t\"bxsh\": \"box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:#000}|none\",\n\t\"bxsz\": \"box-sizing:border-box|content-box|border-box\",\n\t\"c\": \"color:${1:#000}\",\n\t\"cr\": \"color:rgb(${1:0}, ${2:0}, ${3:0})\",\n\t\"cra\": \"color:rgba(${1:0}, ${2:0}, ${3:0}, ${4:.5})\",\n\t\"cl\": \"clear:both|left|right|none\",\n\t\"cm\": \"/* ${0} */\",\n\t\"cnt\": \"content:'${0}'|normal|open-quote|no-open-quote|close-quote|no-close-quote|attr(${0})|counter(${0})|counters(${0})\",\n\t\"coi\": \"counter-increment\",\n\t\"colm\": \"columns\",\n\t\"colmc\": \"column-count\",\n\t\"colmf\": \"column-fill\",\n\t\"colmg\": \"column-gap\",\n\t\"colmr\": \"column-rule\",\n\t\"colmrc\": \"column-rule-color\",\n\t\"colmrs\": \"column-rule-style\",\n\t\"colmrw\": \"column-rule-width\",\n\t\"colms\": \"column-span\",\n\t\"colmw\": \"column-width\",\n\t\"cor\": \"counter-reset\",\n\t\"cp\": \"clip:auto|rect(${1:top} ${2:right} ${3:bottom} ${4:left})\",\n\t\"cps\": \"caption-side:top|bottom\",\n\t\"cur\": \"cursor:pointer|auto|default|crosshair|hand|help|move|pointer|text\",\n\t\"d\": \"display:block|none|flex|inline-flex|inline|inline-block|grid|inline-grid|subgrid|list-item|run-in|compact|table|inline-table|table-caption|table-column|table-column-group|table-header-group|table-footer-group|table-row|table-row-group|table-cell|ruby|ruby-base|ruby-base-group|ruby-text|ruby-text-group\",\n\t\"ec\": \"empty-cells:show|hide\",\n\t\"f\": \"font:${1:1em} ${2:sans-serif}\",\n\t\"fd\": \"font-display:auto|block|swap|fallback|optional\",\n\t\"fef\": \"font-effect:none|engrave|emboss|outline\",\n\t\"fem\": \"font-emphasize\",\n\t\"femp\": \"font-emphasize-position:before|after\",\n\t\"fems\": \"font-emphasize-style:none|accent|dot|circle|disc\",\n\t\"ff\": \"font-family:serif|sans-serif|cursive|fantasy|monospace\",\n\t\"fft\": \"font-family:\\\"Times New Roman\\\", Times, Baskerville, Georgia, serif\",\n\t\"ffa\": \"font-family:Arial, \\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n\t\"ffv\": \"font-family:Verdana, Geneva, sans-serif\",\n\t\"fl\": \"float:left|right|none\",\n\t\"fs\": \"font-style:italic|normal|oblique\",\n\t\"fsm\": \"font-smoothing:antialiased|subpixel-antialiased|none\",\n\t\"fst\": \"font-stretch:normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\",\n\t\"fv\": \"font-variant:normal|small-caps\",\n\t\"fvs\": \"font-variation-settings:normal|inherit|initial|unset\",\n\t\"fw\": \"font-weight:normal|bold|bolder|lighter\",\n\t\"fx\": \"flex\",\n\t\"fxb\": \"flex-basis:fill|max-content|min-content|fit-content|content\",\n\t\"fxd\": \"flex-direction:row|row-reverse|column|column-reverse\",\n\t\"fxf\": \"flex-flow\",\n\t\"fxg\": \"flex-grow\",\n\t\"fxsh\": \"flex-shrink\",\n\t\"fxw\": \"flex-wrap:nowrap|wrap|wrap-reverse\",\n\t\"fsz\": \"font-size\",\n\t\"fsza\": \"font-size-adjust\",\n\t\"gtc\": \"grid-template-columns:repeat(${0})|minmax()\",\n\t\"gtr\": \"grid-template-rows:repeat(${0})|minmax()\",\n\t\"gta\": \"grid-template-areas\",\n\t\"gt\": \"grid-template\",\n\t\"gg\": \"grid-gap\",\n\t\"gcg\": \"grid-column-gap\",\n\t\"grg\": \"grid-row-gap\",\n\t\"gac\": \"grid-auto-columns:auto|minmax()\",\n\t\"gar\": \"grid-auto-rows:auto|minmax()\",\n\t\"gaf\": \"grid-auto-flow:row|column|dense|inherit|initial|unset\",\n\t\"gd\": \"grid\",\n\t\"gc\": \"grid-column\",\n\t\"gcs\": \"grid-column-start\",\n\t\"gce\": \"grid-column-end\",\n\t\"gr\": \"grid-row\",\n\t\"grs\": \"grid-row-start\",\n\t\"gre\": \"grid-row-end\",\n\t\"ga\": \"grid-area\",\n\t\"h\": \"height\",\n\t\"jc\": \"justify-content:start|end|stretch|flex-start|flex-end|center|space-between|space-around|space-evenly\",\n\t\"ji\": \"justify-items:start|end|center|stretch\",\n\t\"js\": \"justify-self:start|end|center|stretch\",\n\t\"l\": \"left\",\n\t\"lg\": \"background-image:linear-gradient(${1})\",\n\t\"lh\": \"line-height\",\n\t\"lis\": \"list-style\",\n\t\"lisi\": \"list-style-image\",\n\t\"lisp\": \"list-style-position:inside|outside\",\n\t\"list\": \"list-style-type:disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman\",\n\t\"lts\": \"letter-spacing:normal\",\n\t\"m\": \"margin\",\n\t\"mah\": \"max-height\",\n\t\"mar\": \"max-resolution\",\n\t\"maw\": \"max-width\",\n\t\"mb\": \"margin-bottom\",\n\t\"mih\": \"min-height\",\n\t\"mir\": \"min-resolution\",\n\t\"miw\": \"min-width\",\n\t\"ml\": \"margin-left\",\n\t\"mr\": \"margin-right\",\n\t\"mt\": \"margin-top\",\n\t\"ol\": \"outline\",\n\t\"olc\": \"outline-color:${1:#000}|invert\",\n\t\"olo\": \"outline-offset\",\n\t\"ols\": \"outline-style:none|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n\t\"olw\": \"outline-width|thin|medium|thick\",\n\t\"op|opa\": \"opacity\",\n\t\"ord\": \"order\",\n\t\"ori\": \"orientation:landscape|portrait\",\n\t\"orp\": \"orphans\",\n\t\"ov\": \"overflow:hidden|visible|hidden|scroll|auto\",\n\t\"ovs\": \"overflow-style:scrollbar|auto|scrollbar|panner|move|marquee\",\n\t\"ovx\": \"overflow-x:hidden|visible|hidden|scroll|auto\",\n\t\"ovy\": \"overflow-y:hidden|visible|hidden|scroll|auto\",\n\t\"p\": \"padding\",\n\t\"pb\": \"padding-bottom\",\n\t\"pgba\": \"page-break-after:auto|always|left|right\",\n\t\"pgbb\": \"page-break-before:auto|always|left|right\",\n\t\"pgbi\": \"page-break-inside:auto|avoid\",\n\t\"pl\": \"padding-left\",\n\t\"pos\": \"position:relative|absolute|relative|fixed|static\",\n\t\"pr\": \"padding-right\",\n\t\"pt\": \"padding-top\",\n\t\"q\": \"quotes\",\n\t\"qen\": \"quotes:'\\\\201C' '\\\\201D' '\\\\2018' '\\\\2019'\",\n\t\"qru\": \"quotes:'\\\\00AB' '\\\\00BB' '\\\\201E' '\\\\201C'\",\n\t\"r\": \"right\",\n\t\"rsz\": \"resize:none|both|horizontal|vertical\",\n\t\"t\": \"top\",\n\t\"ta\": \"text-align:left|center|right|justify\",\n\t\"tal\": \"text-align-last:left|center|right\",\n\t\"tbl\": \"table-layout:fixed\",\n\t\"td\": \"text-decoration:none|underline|overline|line-through\",\n\t\"te\": \"text-emphasis:none|accent|dot|circle|disc|before|after\",\n\t\"th\": \"text-height:auto|font-size|text-size|max-size\",\n\t\"ti\": \"text-indent\",\n\t\"tj\": \"text-justify:auto|inter-word|inter-ideograph|inter-cluster|distribute|kashida|tibetan\",\n\t\"to\": \"text-outline:${1:0} ${2:0} ${3:#000}\",\n\t\"tov\": \"text-overflow:ellipsis|clip\",\n\t\"tr\": \"text-replace\",\n\t\"trf\": \"transform:${1}|skewX(${1:angle})|skewY(${1:angle})|scale(${1:x}, ${2:y})|scaleX(${1:x})|scaleY(${1:y})|scaleZ(${1:z})|scale3d(${1:x}, ${2:y}, ${3:z})|rotate(${1:angle})|rotateX(${1:angle})|rotateY(${1:angle})|rotateZ(${1:angle})|translate(${1:x}, ${2:y})|translateX(${1:x})|translateY(${1:y})|translateZ(${1:z})|translate3d(${1:tx}, ${2:ty}, ${3:tz})\",\n\t\"trfo\": \"transform-origin\",\n\t\"trfs\": \"transform-style:preserve-3d\",\n\t\"trs\": \"transition:${1:prop} ${2:time}\",\n\t\"trsde\": \"transition-delay:${1:time}\",\n\t\"trsdu\": \"transition-duration:${1:time}\",\n\t\"trsp\": \"transition-property:${1:prop}\",\n\t\"trstf\": \"transition-timing-function:${1:fn}\",\n\t\"tsh\": \"text-shadow:${1:hoff} ${2:voff} ${3:blur} ${4:#000}\",\n\t\"tt\": \"text-transform:uppercase|lowercase|capitalize|none\",\n\t\"tw\": \"text-wrap:none|normal|unrestricted|suppress\",\n\t\"us\": \"user-select:none\",\n\t\"v\": \"visibility:hidden|visible|collapse\",\n\t\"va\": \"vertical-align:top|super|text-top|middle|baseline|bottom|text-bottom|sub\",\n\t\"w\": \"width\",\n\t\"whs\": \"white-space:nowrap|pre|pre-wrap|pre-line|normal\",\n\t\"whsc\": \"white-space-collapse:normal|keep-all|loose|break-strict|break-all\",\n\t\"wid\": \"widows\",\n\t\"wm\": \"writing-mode:lr-tb|lr-tb|lr-bt|rl-tb|rl-bt|tb-rl|tb-lr|bt-lr|bt-rl\",\n\t\"wob\": \"word-break:normal|keep-all|break-all\",\n\t\"wos\": \"word-spacing\",\n\t\"wow\": \"word-wrap:none|unrestricted|suppress|break-word|normal\",\n\t\"z\": \"z-index\",\n\t\"zom\": \"zoom:1\"\n};\n\nvar xslSnippets = {\n    \"tm|tmatch\": \"xsl:template[match mode]\",\n    \"tn|tname\": \"xsl:template[name]\",\n    \"call\": \"xsl:call-template[name]\",\n    \"ap\": \"xsl:apply-templates[select mode]\",\n    \"api\": \"xsl:apply-imports\",\n    \"imp\": \"xsl:import[href]\",\n    \"inc\": \"xsl:include[href]\",\n    \"ch\": \"xsl:choose\",\n    \"wh|xsl:when\": \"xsl:when[test]\",\n    \"ot\": \"xsl:otherwise\",\n    \"if\": \"xsl:if[test]\",\n    \"par\": \"xsl:param[name]\",\n    \"pare\": \"xsl:param[name select]\",\n    \"var\": \"xsl:variable[name]\",\n    \"vare\": \"xsl:variable[name select]\",\n    \"wp\": \"xsl:with-param[name select]\",\n    \"key\": \"xsl:key[name match use]\",\n    \"elem\": \"xsl:element[name]\",\n    \"attr\": \"xsl:attribute[name]\",\n    \"attrs\": \"xsl:attribute-set[name]\",\n    \"cp\": \"xsl:copy[select]\",\n    \"co\": \"xsl:copy-of[select]\",\n    \"val\": \"xsl:value-of[select]\",\n    \"for|each\": \"xsl:for-each[select]\",\n    \"tex\": \"xsl:text\",\n    \"com\": \"xsl:comment\",\n    \"msg\": \"xsl:message[terminate=no]\",\n    \"fall\": \"xsl:fallback\",\n    \"num\": \"xsl:number[value]\",\n    \"nam\": \"namespace-alias[stylesheet-prefix result-prefix]\",\n    \"pres\": \"xsl:preserve-space[elements]\",\n    \"strip\": \"xsl:strip-space[elements]\",\n    \"proc\": \"xsl:processing-instruction[name]\",\n    \"sort\": \"xsl:sort[select order]\",\n    \"choose\": \"xsl:choose>xsl:when+xsl:otherwise\",\n    \"xsl\": \"!!!+xsl:stylesheet[version=1.0 xmlns:xsl=http://www.w3.org/1999/XSL/Transform]>{\\n|}\",\n    \"!!!\": \"{<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>}\"\n};\n\nvar pugSnippets = {\n\t\"!!!\": \"{doctype html}\"\n};\n\nvar variables = {\n\t\"lang\": \"en\",\n\t\"locale\": \"en-US\",\n\t\"charset\": \"UTF-8\",\n\t\"indentation\": \"\\t\",\n\t\"newline\": \"\\n\"\n};\n\n/**\n * Default syntaxes for abbreviation types\n */\nconst defaultSyntaxes = {\n    markup: 'html',\n    stylesheet: 'css'\n};\nconst defaultOptions = {\n    'inlineElements': [\n        'a', 'abbr', 'acronym', 'applet', 'b', 'basefont', 'bdo',\n        'big', 'br', 'button', 'cite', 'code', 'del', 'dfn', 'em', 'font', 'i',\n        'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'object', 'q',\n        's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup',\n        'textarea', 'tt', 'u', 'var'\n    ],\n    'output.indent': '\\t',\n    'output.baseIndent': '',\n    'output.newline': '\\n',\n    'output.tagCase': '',\n    'output.attributeCase': '',\n    'output.attributeQuotes': 'double',\n    'output.format': true,\n    'output.formatLeafNode': false,\n    'output.formatSkip': ['html'],\n    'output.formatForce': ['body'],\n    'output.inlineBreak': 3,\n    'output.compactBoolean': false,\n    'output.booleanAttributes': [\n        'contenteditable', 'seamless', 'async', 'autofocus',\n        'autoplay', 'checked', 'controls', 'defer', 'disabled', 'formnovalidate',\n        'hidden', 'ismap', 'loop', 'multiple', 'muted', 'novalidate', 'readonly',\n        'required', 'reversed', 'selected', 'typemustmatch'\n    ],\n    'output.reverseAttributes': false,\n    'output.selfClosingStyle': 'html',\n    'output.field': (index, placeholder) => placeholder,\n    'output.text': text => text,\n    'markup.href': true,\n    'comment.enabled': false,\n    'comment.trigger': ['id', 'class'],\n    'comment.before': '',\n    'comment.after': '\\n<!-- /[#ID][.CLASS] -->',\n    'bem.enabled': false,\n    'bem.element': '__',\n    'bem.modifier': '_',\n    'jsx.enabled': false,\n    'stylesheet.keywords': ['auto', 'inherit', 'unset', 'none'],\n    'stylesheet.unitless': ['z-index', 'line-height', 'opacity', 'font-weight', 'zoom', 'flex', 'flex-grow', 'flex-shrink'],\n    'stylesheet.shortHex': true,\n    'stylesheet.between': ': ',\n    'stylesheet.after': ';',\n    'stylesheet.intUnit': 'px',\n    'stylesheet.floatUnit': 'em',\n    'stylesheet.unitAliases': { e: 'em', p: '%', x: 'ex', r: 'rem' },\n    'stylesheet.json': false,\n    'stylesheet.jsonDoubleQuotes': false,\n    'stylesheet.fuzzySearchMinScore': 0\n};\nconst defaultConfig = {\n    type: 'markup',\n    syntax: 'html',\n    variables,\n    snippets: {},\n    options: defaultOptions\n};\n/**\n * Default per-syntax config\n */\nconst syntaxConfig = {\n    markup: {\n        snippets: parseSnippets(markupSnippets),\n    },\n    xhtml: {\n        options: {\n            'output.selfClosingStyle': 'xhtml'\n        }\n    },\n    xml: {\n        options: {\n            'output.selfClosingStyle': 'xml'\n        }\n    },\n    xsl: {\n        snippets: parseSnippets(xslSnippets),\n        options: {\n            'output.selfClosingStyle': 'xml'\n        }\n    },\n    jsx: {\n        options: {\n            'jsx.enabled': true\n        }\n    },\n    pug: {\n        snippets: parseSnippets(pugSnippets)\n    },\n    stylesheet: {\n        snippets: parseSnippets(stylesheetSnippets)\n    },\n    sass: {\n        options: {\n            'stylesheet.after': ''\n        }\n    },\n    stylus: {\n        options: {\n            'stylesheet.between': ' ',\n            'stylesheet.after': '',\n        }\n    }\n};\n/**\n * Parses raw snippets definitions with possibly multiple keys into a plan\n * snippet map\n */\nfunction parseSnippets(snippets) {\n    const result = {};\n    Object.keys(snippets).forEach(k => {\n        for (const name of k.split('|')) {\n            result[name] = snippets[k];\n        }\n    });\n    return result;\n}\nfunction resolveConfig(config = {}, globals = {}) {\n    const type = config.type || 'markup';\n    const syntax = config.syntax || defaultSyntaxes[type];\n    return Object.assign(Object.assign(Object.assign({}, defaultConfig), config), { type,\n        syntax, variables: mergedData(type, syntax, 'variables', config, globals), snippets: mergedData(type, syntax, 'snippets', config, globals), options: mergedData(type, syntax, 'options', config, globals) });\n}\nfunction mergedData(type, syntax, key, config, globals = {}) {\n    const typeDefaults = syntaxConfig[type];\n    const typeOverride = globals[type];\n    const syntaxDefaults = syntaxConfig[syntax];\n    const syntaxOverride = globals[syntax];\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, defaultConfig[key]), (typeDefaults && typeDefaults[key])), (syntaxDefaults && syntaxDefaults[key])), (typeOverride && typeOverride[key])), (syntaxOverride && syntaxOverride[key])), config[key]);\n}\n\n/**\n * Creates structure for scanning given string in backward direction\n */\nfunction backwardScanner(text, start = 0) {\n    return { text, start, pos: text.length };\n}\n/**\n * Check if given scanner position is at start of scanned text\n */\nfunction sol(scanner) {\n    return scanner.pos === scanner.start;\n}\n/**\n * “Peeks” character code an current scanner location without advancing it\n */\nfunction peek$1(scanner, offset = 0) {\n    return scanner.text.charCodeAt(scanner.pos - 1 + offset);\n}\n/**\n * Returns current character code and moves character location one symbol back\n */\nfunction previous(scanner) {\n    if (!sol(scanner)) {\n        return scanner.text.charCodeAt(--scanner.pos);\n    }\n}\n/**\n * Consumes current character code if it matches given `match` code or function\n */\nfunction consume(scanner, match) {\n    if (sol(scanner)) {\n        return false;\n    }\n    const ok = typeof match === 'function'\n        ? match(peek$1(scanner))\n        : match === peek$1(scanner);\n    if (ok) {\n        scanner.pos--;\n    }\n    return !!ok;\n}\nfunction consumeWhile(scanner, match) {\n    const start = scanner.pos;\n    while (consume(scanner, match)) {\n        // empty\n    }\n    return scanner.pos < start;\n}\n\n/**\n * Check if given character code is a quote\n */\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\n/**\n * Consumes quoted value, if possible\n * @return Returns `true` is value was consumed\n */\nfunction consumeQuoted(scanner) {\n    const start = scanner.pos;\n    const quote = previous(scanner);\n    if (isQuote(quote)) {\n        while (!sol(scanner)) {\n            if (previous(scanner) === quote && peek$1(scanner) !== 92 /* Escape */) {\n                return true;\n            }\n        }\n    }\n    scanner.pos = start;\n    return false;\n}\n\nconst bracePairs = {\n    [91 /* SquareL */]: 93 /* SquareR */,\n    [40 /* RoundL */]: 41 /* RoundR */,\n    [123 /* CurlyL */]: 125 /* CurlyR */,\n};\n\n/**\n * Check if given reader’s current position points at the end of HTML tag\n */\nfunction isHtml(scanner) {\n    const start = scanner.pos;\n    if (!consume(scanner, 62 /* AngleRight */)) {\n        return false;\n    }\n    let ok = false;\n    consume(scanner, 47 /* Slash */); // possibly self-closed element\n    while (!sol(scanner)) {\n        consumeWhile(scanner, isWhiteSpace);\n        if (consumeIdent(scanner)) {\n            // ate identifier: could be a tag name, boolean attribute or unquoted\n            // attribute value\n            if (consume(scanner, 47 /* Slash */)) {\n                // either closing tag or invalid tag\n                ok = consume(scanner, 60 /* AngleLeft */);\n                break;\n            }\n            else if (consume(scanner, 60 /* AngleLeft */)) {\n                // opening tag\n                ok = true;\n                break;\n            }\n            else if (consume(scanner, isWhiteSpace)) {\n                // boolean attribute\n                continue;\n            }\n            else if (consume(scanner, 61 /* Equals */)) {\n                // simple unquoted value or invalid attribute\n                if (consumeIdent(scanner)) {\n                    continue;\n                }\n                break;\n            }\n            else if (consumeAttributeWithUnquotedValue(scanner)) {\n                // identifier was a part of unquoted value\n                ok = true;\n                break;\n            }\n            // invalid tag\n            break;\n        }\n        if (consumeAttribute(scanner)) {\n            continue;\n        }\n        break;\n    }\n    scanner.pos = start;\n    return ok;\n}\n/**\n * Consumes HTML attribute from given string.\n * @return `true` if attribute was consumed.\n */\nfunction consumeAttribute(scanner) {\n    return consumeAttributeWithQuotedValue(scanner) || consumeAttributeWithUnquotedValue(scanner);\n}\nfunction consumeAttributeWithQuotedValue(scanner) {\n    const start = scanner.pos;\n    if (consumeQuoted(scanner) && consume(scanner, 61 /* Equals */) && consumeIdent(scanner)) {\n        return true;\n    }\n    scanner.pos = start;\n    return false;\n}\nfunction consumeAttributeWithUnquotedValue(scanner) {\n    const start = scanner.pos;\n    const stack = [];\n    while (!sol(scanner)) {\n        const ch = peek$1(scanner);\n        if (isCloseBracket(ch)) {\n            stack.push(ch);\n        }\n        else if (isOpenBracket(ch)) {\n            if (stack.pop() !== bracePairs[ch]) {\n                // Unexpected open bracket\n                break;\n            }\n        }\n        else if (!isUnquotedValue(ch)) {\n            break;\n        }\n        scanner.pos--;\n    }\n    if (start !== scanner.pos && consume(scanner, 61 /* Equals */) && consumeIdent(scanner)) {\n        return true;\n    }\n    scanner.pos = start;\n    return false;\n}\n/**\n * Consumes HTML identifier from stream\n */\nfunction consumeIdent(scanner) {\n    return consumeWhile(scanner, isIdent);\n}\n/**\n * Check if given character code belongs to HTML identifier\n */\nfunction isIdent(ch) {\n    return ch === 58 /* Colon */ || ch === 45 /* Dash */ || isAlpha(ch) || isNumber(ch);\n}\n/**\n * Check if given character code is alpha code (letter though A to Z)\n */\nfunction isAlpha(ch) {\n    ch &= ~32; // quick hack to convert any char code to uppercase char code\n    return ch >= 65 && ch <= 90; // A-Z\n}\n/**\n * Check if given code is a number\n */\nfunction isNumber(ch) {\n    return ch > 47 && ch < 58;\n}\n/**\n * Check if given code is a whitespace\n */\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* Space */ || ch === 9 /* Tab */;\n}\n/**\n * Check if given code may belong to unquoted attribute value\n */\nfunction isUnquotedValue(ch) {\n    return !isNaN(ch) && ch !== 61 /* Equals */ && !isWhiteSpace(ch) && !isQuote(ch);\n}\nfunction isOpenBracket(ch) {\n    return ch === 123 /* CurlyL */ || ch === 40 /* RoundL */ || ch === 91 /* SquareL */;\n}\nfunction isCloseBracket(ch) {\n    return ch === 125 /* CurlyR */ || ch === 41 /* RoundR */ || ch === 93 /* SquareR */;\n}\n\nconst code = (ch) => ch.charCodeAt(0);\nconst specialChars = '#.*:$-_!@%^+>/'.split('').map(code);\nconst defaultOptions$1 = {\n    type: 'markup',\n    lookAhead: true,\n    prefix: ''\n};\n/**\n * Extracts Emmet abbreviation from given string.\n * The goal of this module is to extract abbreviation from current editor’s line,\n * e.g. like this: `<span>.foo[title=bar|]</span>` -> `.foo[title=bar]`, where\n * `|` is a current caret position.\n * @param line A text line where abbreviation should be expanded\n * @param pos Caret position in line. If not given, uses end of line\n * @param options Extracting options\n */\nfunction extractAbbreviation$1(line, pos = line.length, options = {}) {\n    // make sure `pos` is within line range\n    const opt = Object.assign(Object.assign({}, defaultOptions$1), options);\n    pos = Math.min(line.length, Math.max(0, pos == null ? line.length : pos));\n    if (opt.lookAhead) {\n        pos = offsetPastAutoClosed(line, pos, opt);\n    }\n    let ch;\n    const start = getStartOffset(line, pos, opt.prefix || '');\n    if (start === -1) {\n        return void 0;\n    }\n    const scanner = backwardScanner(line, start);\n    scanner.pos = pos;\n    const stack = [];\n    while (!sol(scanner)) {\n        ch = peek$1(scanner);\n        if (stack.includes(125 /* CurlyR */)) {\n            if (ch === 125 /* CurlyR */) {\n                stack.push(ch);\n                scanner.pos--;\n                continue;\n            }\n            if (ch !== 123 /* CurlyL */) {\n                scanner.pos--;\n                continue;\n            }\n        }\n        if (isCloseBrace(ch, opt.type)) {\n            stack.push(ch);\n        }\n        else if (isOpenBrace(ch, opt.type)) {\n            if (stack.pop() !== bracePairs[ch]) {\n                // unexpected brace\n                break;\n            }\n        }\n        else if (stack.includes(93 /* SquareR */) || stack.includes(125 /* CurlyR */)) {\n            // respect all characters inside attribute sets or text nodes\n            scanner.pos--;\n            continue;\n        }\n        else if (isHtml(scanner) || !isAbbreviation(ch)) {\n            break;\n        }\n        scanner.pos--;\n    }\n    if (!stack.length && scanner.pos !== pos) {\n        // Found something, remove some invalid symbols from the\n        // beginning and return abbreviation\n        const abbreviation = line.slice(scanner.pos, pos).replace(/^[*+>^]+/, '');\n        return {\n            abbreviation,\n            location: pos - abbreviation.length,\n            start: options.prefix\n                ? start - options.prefix.length\n                : pos - abbreviation.length,\n            end: pos\n        };\n    }\n}\n/**\n * Returns new `line` index which is right after characters beyound `pos` that\n * editor will likely automatically close, e.g. }, ], and quotes\n */\nfunction offsetPastAutoClosed(line, pos, options) {\n    // closing quote is allowed only as a next character\n    if (isQuote(line.charCodeAt(pos))) {\n        pos++;\n    }\n    // offset pointer until non-autoclosed character is found\n    while (isCloseBrace(line.charCodeAt(pos), options.type)) {\n        pos++;\n    }\n    return pos;\n}\n/**\n * Returns start offset (left limit) in `line` where we should stop looking for\n * abbreviation: it’s nearest to `pos` location of `prefix` token\n */\nfunction getStartOffset(line, pos, prefix) {\n    if (!prefix) {\n        return 0;\n    }\n    const scanner = backwardScanner(line);\n    const compiledPrefix = prefix.split('').map(code);\n    scanner.pos = pos;\n    let result;\n    while (!sol(scanner)) {\n        if (consumePair(scanner, 93 /* SquareR */, 91 /* SquareL */) || consumePair(scanner, 125 /* CurlyR */, 123 /* CurlyL */)) {\n            continue;\n        }\n        result = scanner.pos;\n        if (consumeArray(scanner, compiledPrefix)) {\n            return result;\n        }\n        scanner.pos--;\n    }\n    return -1;\n}\n/**\n * Consumes full character pair, if possible\n */\nfunction consumePair(scanner, close, open) {\n    const start = scanner.pos;\n    if (consume(scanner, close)) {\n        while (!sol(scanner)) {\n            if (consume(scanner, open)) {\n                return true;\n            }\n            scanner.pos--;\n        }\n    }\n    scanner.pos = start;\n    return false;\n}\n/**\n * Consumes all character codes from given array, right-to-left, if possible\n */\nfunction consumeArray(scanner, arr) {\n    const start = scanner.pos;\n    let consumed = false;\n    for (let i = arr.length - 1; i >= 0 && !sol(scanner); i--) {\n        if (!consume(scanner, arr[i])) {\n            break;\n        }\n        consumed = i === 0;\n    }\n    if (!consumed) {\n        scanner.pos = start;\n    }\n    return consumed;\n}\nfunction isAbbreviation(ch) {\n    return (ch > 64 && ch < 91) // uppercase letter\n        || (ch > 96 && ch < 123) // lowercase letter\n        || (ch > 47 && ch < 58) // number\n        || specialChars.includes(ch); // special character\n}\nfunction isOpenBrace(ch, syntax) {\n    return ch === 40 /* RoundL */ || (syntax === 'markup' && (ch === 91 /* SquareL */ || ch === 123 /* CurlyL */));\n}\nfunction isCloseBrace(ch, syntax) {\n    return ch === 41 /* RoundR */ || (syntax === 'markup' && (ch === 93 /* SquareR */ || ch === 125 /* CurlyR */));\n}\n\nfunction expandAbbreviation$1(abbr, config) {\n    const resolvedConfig = resolveConfig(config);\n    return resolvedConfig.type === 'stylesheet'\n        ? stylesheet(abbr, resolvedConfig)\n        : markup(abbr, resolvedConfig);\n}\n/**\n * Expands given *markup* abbreviation (e.g. regular Emmet abbreviation that\n * produces structured output like HTML) and outputs it according to options\n * provided in config\n */\nfunction markup(abbr, config) {\n    return stringify(parse(abbr, config), config);\n}\n/**\n * Expands given *stylesheet* abbreviation (a special Emmet abbreviation designed for\n * stylesheet languages like CSS, SASS etc.) and outputs it according to options\n * provided in config\n */\nfunction stylesheet(abbr, config) {\n    return css(parse$1(abbr, config), config);\n}\n\nvar cssData = {\n    \"properties\": [\"additive-symbols\", \"align-content\", \"align-items\", \"justify-items\", \"justify-self\", \"justify-items\", \"align-self\", \"all\", \"alt\", \"animation\", \"animation-delay\", \"animation-direction\", \"animation-duration\", \"animation-fill-mode\", \"animation-iteration-count\", \"animation-name\", \"animation-play-state\", \"animation-timing-function\", \"backface-visibility\", \"background\", \"background-attachment\", \"background-blend-mode\", \"background-clip\", \"background-color\", \"background-image\", \"background-origin\", \"background-position\", \"background-position-x\", \"background-position-y\", \"background-repeat\", \"background-size\", \"behavior\", \"block-size\", \"border\", \"border-block-end\", \"border-block-start\", \"border-block-end-color\", \"border-block-start-color\", \"border-block-end-style\", \"border-block-start-style\", \"border-block-end-width\", \"border-block-start-width\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\", \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\", \"border-image-repeat\", \"border-image-slice\", \"border-image-source\", \"border-image-width\", \"border-inline-end\", \"border-inline-start\", \"border-inline-end-color\", \"border-inline-start-color\", \"border-inline-end-style\", \"border-inline-start-style\", \"border-inline-end-width\", \"border-inline-start-width\", \"border-left\", \"border-left-color\", \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\", \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\", \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\", \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"caret-color\", \"clear\", \"clip\", \"clip-path\", \"clip-rule\", \"color\", \"color-interpolation-filters\", \"column-count\", \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\", \"column-rule-width\", \"columns\", \"column-span\", \"column-width\", \"contain\", \"content\", \"counter-increment\", \"counter-reset\", \"cursor\", \"direction\", \"display\", \"empty-cells\", \"enable-background\", \"fallback\", \"fill\", \"fill-opacity\", \"fill-rule\", \"filter\", \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\", \"float\", \"flood-color\", \"flood-opacity\", \"font\", \"font-family\", \"font-feature-settings\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\", \"font-weight\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-gap\", \"grid-column-start\", \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\", \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\", \"grid-template-rows\", \"height\", \"hyphens\", \"image-orientation\", \"image-rendering\", \"ime-mode\", \"inline-size\", \"isolation\", \"justify-content\", \"kerning\", \"left\", \"letter-spacing\", \"lighting-color\", \"line-break\", \"line-height\", \"list-style\", \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\", \"margin-block-end\", \"margin-block-start\", \"margin-bottom\", \"margin-inline-end\", \"margin-inline-start\", \"margin-left\", \"margin-right\", \"margin-top\", \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"mask-type\", \"max-block-size\", \"max-height\", \"max-inline-size\", \"max-width\", \"min-block-size\", \"min-height\", \"min-inline-size\", \"min-width\", \"mix-blend-mode\", \"motion\", \"motion-offset\", \"motion-path\", \"motion-rotation\", \"-moz-animation\", \"-moz-animation-delay\", \"-moz-animation-direction\", \"-moz-animation-duration\", \"-moz-animation-iteration-count\", \"-moz-animation-name\", \"-moz-animation-play-state\", \"-moz-animation-timing-function\", \"-moz-appearance\", \"-moz-backface-visibility\", \"-moz-background-clip\", \"-moz-background-inline-policy\", \"-moz-background-origin\", \"-moz-border-bottom-colors\", \"-moz-border-image\", \"-moz-border-left-colors\", \"-moz-border-right-colors\", \"-moz-border-top-colors\", \"-moz-box-align\", \"-moz-box-direction\", \"-moz-box-flex\", \"-moz-box-flexgroup\", \"-moz-box-ordinal-group\", \"-moz-box-orient\", \"-moz-box-pack\", \"-moz-box-sizing\", \"-moz-column-count\", \"-moz-column-gap\", \"-moz-column-rule\", \"-moz-column-rule-color\", \"-moz-column-rule-style\", \"-moz-column-rule-width\", \"-moz-columns\", \"-moz-column-width\", \"-moz-font-feature-settings\", \"-moz-hyphens\", \"-moz-perspective\", \"-moz-perspective-origin\", \"-moz-text-align-last\", \"-moz-text-decoration-color\", \"-moz-text-decoration-line\", \"-moz-text-decoration-style\", \"-moz-text-size-adjust\", \"-moz-transform\", \"-moz-transform-origin\", \"-moz-transition\", \"-moz-transition-delay\", \"-moz-transition-duration\", \"-moz-transition-property\", \"-moz-transition-timing-function\", \"-moz-user-focus\", \"-moz-user-select\", \"-ms-accelerator\", \"-ms-behavior\", \"-ms-block-progression\", \"-ms-content-zoom-chaining\", \"-ms-content-zooming\", \"-ms-content-zoom-limit\", \"-ms-content-zoom-limit-max\", \"-ms-content-zoom-limit-min\", \"-ms-content-zoom-snap\", \"-ms-content-zoom-snap-points\", \"-ms-content-zoom-snap-type\", \"-ms-filter\", \"-ms-flex\", \"-ms-flex-align\", \"-ms-flex-direction\", \"-ms-flex-flow\", \"-ms-flex-item-align\", \"-ms-flex-line-pack\", \"-ms-flex-order\", \"-ms-flex-pack\", \"-ms-flex-wrap\", \"-ms-flow-from\", \"-ms-flow-into\", \"-ms-grid-column\", \"-ms-grid-column-align\", \"-ms-grid-columns\", \"-ms-grid-column-span\", \"-ms-grid-layer\", \"-ms-grid-row\", \"-ms-grid-row-align\", \"-ms-grid-rows\", \"-ms-grid-row-span\", \"-ms-high-contrast-adjust\", \"-ms-hyphenate-limit-chars\", \"-ms-hyphenate-limit-lines\", \"-ms-hyphenate-limit-zone\", \"-ms-hyphens\", \"-ms-ime-mode\", \"-ms-interpolation-mode\", \"-ms-layout-grid\", \"-ms-layout-grid-char\", \"-ms-layout-grid-line\", \"-ms-layout-grid-mode\", \"-ms-layout-grid-type\", \"-ms-line-break\", \"-ms-overflow-style\", \"-ms-perspective\", \"-ms-perspective-origin\", \"-ms-perspective-origin-x\", \"-ms-perspective-origin-y\", \"-ms-progress-appearance\", \"-ms-scrollbar-3dlight-color\", \"-ms-scrollbar-arrow-color\", \"-ms-scrollbar-base-color\", \"-ms-scrollbar-darkshadow-color\", \"-ms-scrollbar-face-color\", \"-ms-scrollbar-highlight-color\", \"-ms-scrollbar-shadow-color\", \"-ms-scrollbar-track-color\", \"-ms-scroll-chaining\", \"-ms-scroll-limit\", \"-ms-scroll-limit-x-max\", \"-ms-scroll-limit-x-min\", \"-ms-scroll-limit-y-max\", \"-ms-scroll-limit-y-min\", \"-ms-scroll-rails\", \"-ms-scroll-snap-points-x\", \"-ms-scroll-snap-points-y\", \"-ms-scroll-snap-type\", \"-ms-scroll-snap-x\", \"-ms-scroll-snap-y\", \"-ms-scroll-translation\", \"-ms-text-align-last\", \"-ms-text-autospace\", \"-ms-text-combine-horizontal\", \"-ms-text-justify\", \"-ms-text-kashida-space\", \"-ms-text-overflow\", \"-ms-text-size-adjust\", \"-ms-text-underline-position\", \"-ms-touch-action\", \"-ms-touch-select\", \"-ms-transform\", \"-ms-transform-origin\", \"-ms-transform-origin-x\", \"-ms-transform-origin-y\", \"-ms-transform-origin-z\", \"-ms-user-select\", \"-ms-word-break\", \"-ms-word-wrap\", \"-ms-wrap-flow\", \"-ms-wrap-margin\", \"-ms-wrap-through\", \"-ms-writing-mode\", \"-ms-zoom\", \"-ms-zoom-animation\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\", \"nav-up\", \"negative\", \"-o-animation\", \"-o-animation-delay\", \"-o-animation-direction\", \"-o-animation-duration\", \"-o-animation-fill-mode\", \"-o-animation-iteration-count\", \"-o-animation-name\", \"-o-animation-play-state\", \"-o-animation-timing-function\", \"object-fit\", \"object-position\", \"-o-border-image\", \"-o-object-fit\", \"-o-object-position\", \"opacity\", \"order\", \"orphans\", \"-o-table-baseline\", \"-o-tab-size\", \"-o-text-overflow\", \"-o-transform\", \"-o-transform-origin\", \"-o-transition\", \"-o-transition-delay\", \"-o-transition-duration\", \"-o-transition-property\", \"-o-transition-timing-function\", \"offset-block-end\", \"offset-block-start\", \"offset-inline-end\", \"offset-inline-start\", \"outline\", \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\", \"overflow\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"pad\", \"padding\", \"padding-bottom\", \"padding-block-end\", \"padding-block-start\", \"padding-inline-end\", \"padding-inline-start\", \"padding-left\", \"padding-right\", \"padding-top\", \"page-break-after\", \"page-break-before\", \"page-break-inside\", \"paint-order\", \"perspective\", \"perspective-origin\", \"pointer-events\", \"position\", \"prefix\", \"quotes\", \"range\", \"resize\", \"right\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\", \"scrollbar-3dlight-color\", \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-darkshadow-color\", \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\", \"scrollbar-track-color\", \"scroll-behavior\", \"scroll-snap-coordinate\", \"scroll-snap-destination\", \"scroll-snap-points-x\", \"scroll-snap-points-y\", \"scroll-snap-type\", \"shape-image-threshold\", \"shape-margin\", \"shape-outside\", \"shape-rendering\", \"size\", \"src\", \"stop-color\", \"stop-opacity\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"suffix\", \"system\", \"symbols\", \"table-layout\", \"tab-size\", \"text-align\", \"text-align-last\", \"text-anchor\", \"text-decoration\", \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-style\", \"text-indent\", \"text-justify\", \"text-orientation\", \"text-overflow\", \"text-rendering\", \"text-shadow\", \"text-transform\", \"text-underline-position\", \"top\", \"touch-action\", \"transform\", \"transform-origin\", \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\", \"transition-property\", \"transition-timing-function\", \"unicode-bidi\", \"unicode-range\", \"user-select\", \"vertical-align\", \"visibility\", \"-webkit-animation\", \"-webkit-animation-delay\", \"-webkit-animation-direction\", \"-webkit-animation-duration\", \"-webkit-animation-fill-mode\", \"-webkit-animation-iteration-count\", \"-webkit-animation-name\", \"-webkit-animation-play-state\", \"-webkit-animation-timing-function\", \"-webkit-appearance\", \"-webkit-backdrop-filter\", \"-webkit-backface-visibility\", \"-webkit-background-clip\", \"-webkit-background-composite\", \"-webkit-background-origin\", \"-webkit-border-image\", \"-webkit-box-align\", \"-webkit-box-direction\", \"-webkit-box-flex\", \"-webkit-box-flex-group\", \"-webkit-box-ordinal-group\", \"-webkit-box-orient\", \"-webkit-box-pack\", \"-webkit-box-reflect\", \"-webkit-box-sizing\", \"-webkit-break-after\", \"-webkit-break-before\", \"-webkit-break-inside\", \"-webkit-column-break-after\", \"-webkit-column-break-before\", \"-webkit-column-break-inside\", \"-webkit-column-count\", \"-webkit-column-gap\", \"-webkit-column-rule\", \"-webkit-column-rule-color\", \"-webkit-column-rule-style\", \"-webkit-column-rule-width\", \"-webkit-columns\", \"-webkit-column-span\", \"-webkit-column-width\", \"-webkit-filter\", \"-webkit-flow-from\", \"-webkit-flow-into\", \"-webkit-font-feature-settings\", \"-webkit-hyphens\", \"-webkit-line-break\", \"-webkit-margin-bottom-collapse\", \"-webkit-margin-collapse\", \"-webkit-margin-start\", \"-webkit-margin-top-collapse\", \"-webkit-mask-clip\", \"-webkit-mask-image\", \"-webkit-mask-origin\", \"-webkit-mask-repeat\", \"-webkit-mask-size\", \"-webkit-nbsp-mode\", \"-webkit-overflow-scrolling\", \"-webkit-padding-start\", \"-webkit-perspective\", \"-webkit-perspective-origin\", \"-webkit-region-fragment\", \"-webkit-tap-highlight-color\", \"-webkit-text-fill-color\", \"-webkit-text-size-adjust\", \"-webkit-text-stroke\", \"-webkit-text-stroke-color\", \"-webkit-text-stroke-width\", \"-webkit-touch-callout\", \"-webkit-transform\", \"-webkit-transform-origin\", \"-webkit-transform-origin-x\", \"-webkit-transform-origin-y\", \"-webkit-transform-origin-z\", \"-webkit-transform-style\", \"-webkit-transition\", \"-webkit-transition-delay\", \"-webkit-transition-duration\", \"-webkit-transition-property\", \"-webkit-transition-timing-function\", \"-webkit-user-drag\", \"-webkit-user-modify\", \"-webkit-user-select\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"writing-mode\", \"z-index\", \"zoom\"]\n};\nvar htmlData = {\n    \"tags\": [\n        \"body\", \"head\", \"html\",\n        \"address\", \"blockquote\", \"dd\", \"div\", \"section\", \"article\", \"aside\", \"header\", \"footer\", \"nav\", \"menu\", \"dl\", \"dt\", \"fieldset\", \"form\", \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"iframe\", \"noframes\", \"object\", \"ol\", \"p\", \"ul\", \"applet\", \"center\", \"dir\", \"hr\", \"pre\",\n        \"a\", \"abbr\", \"acronym\", \"area\", \"b\", \"base\", \"basefont\", \"bdo\", \"big\", \"br\", \"button\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"del\", \"dfn\", \"em\", \"font\", \"i\", \"img\", \"input\", \"ins\", \"isindex\", \"kbd\", \"label\", \"legend\", \"li\", \"link\", \"map\", \"meta\", \"noscript\", \"optgroup\", \"option\", \"param\", \"q\", \"s\", \"samp\", \"script\", \"select\", \"small\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"title\", \"tr\", \"tt\", \"u\", \"var\",\n        \"canvas\", \"main\", \"figure\", \"plaintext\", \"figcaption\", \"hgroup\", \"details\", \"summary\"\n    ]\n};\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar snippetKeyCache = new Map();\nvar markupSnippetKeys;\nvar stylesheetCustomSnippetsKeyCache = new Map();\nvar htmlAbbreviationStartRegex = /^[a-z,A-Z,!,(,[,#,\\.\\{]/;\n// take off { for jsx because it interferes with the language\nvar jsxAbbreviationStartRegex = /^[a-z,A-Z,!,(,[,#,\\.]/;\nvar cssAbbreviationRegex = /^-?[a-z,A-Z,!,@,#]/;\nvar htmlAbbreviationRegex = /[a-z,A-Z\\.]/;\nvar commonlyUsedTags = __spreadArray(__spreadArray([], htmlData.tags, true), ['lorem'], false);\nvar bemFilterSuffix = 'bem';\nvar filterDelimitor = '|';\nvar trimFilterSuffix = 't';\nvar commentFilterSuffix = 'c';\nvar maxFilters = 3;\n/**\n * Returns all applicable emmet expansions for abbreviation at given position in a CompletionList\n * @param model TextModel in which completions are requested\n * @param position Position in the document at which completions are requested\n * @param syntax Emmet supported language\n * @param emmetConfig Emmet Configurations as derived from VS Code\n */\nfunction doComplete(monaco, model, position, syntax, emmetConfig) {\n    var _a;\n    var isStyleSheetRes = isStyleSheet(syntax);\n    // Fetch markupSnippets so that we can provide possible abbreviation completions\n    // For example, when text at position is `a`, completions should return `a:blank`, `a:link`, `acr` etc.\n    if (!isStyleSheetRes) {\n        if (!snippetKeyCache.has(syntax)) {\n            var registry = getDefaultSnippets(syntax);\n            snippetKeyCache.set(syntax, Object.keys(registry));\n        }\n        markupSnippetKeys = (_a = snippetKeyCache.get(syntax)) !== null && _a !== void 0 ? _a : [];\n    }\n    var extractOptions = {\n        lookAhead: !isStyleSheetRes,\n        type: getSyntaxType(syntax),\n    };\n    var extractedValue = extractAbbreviation(monaco, model, position, extractOptions);\n    if (!extractedValue)\n        return;\n    var abbreviationRange = extractedValue.abbreviationRange, abbreviation = extractedValue.abbreviation, currentLineTillPosition = extractedValue.currentLineTillPosition, filter = extractedValue.filter;\n    var currentWord = getCurrentWord(currentLineTillPosition);\n    // Don't attempt to expand open tags\n    if (currentWord === abbreviation && currentLineTillPosition.endsWith(\"<\".concat(abbreviation)) && !isStyleSheetRes) {\n        return;\n    }\n    var expandOptions = getExpandOptions(syntax, filter);\n    var expandedText = '';\n    var expandedAbbr;\n    var completionItems = [];\n    // Create completion item after expanding given abbreviation\n    // if abbreviation is valid and expanded value is not noise\n    var createExpandedAbbr = function (syntax, abbr) {\n        if (!isAbbreviationValid(syntax, abbreviation))\n            return;\n        try {\n            expandedText = expandAbbreviation$1(abbr, expandOptions);\n            // manually patch https://github.com/microsoft/vscode/issues/120245 for now\n            if (isStyleSheetRes && '!important'.startsWith(abbr)) {\n                expandedText = '!important';\n            }\n        }\n        catch (e) { }\n        if (!expandedText || isExpandedTextNoise(syntax, abbr, expandedText, expandOptions.options)) {\n            return;\n        }\n        expandedAbbr = {\n            kind: monaco.languages.CompletionItemKind.Property,\n            label: abbreviation + (filter ? '|' + filter.replace(',', '|') : ''),\n            documentation: replaceTabStopsWithCursors(expandedText),\n            detail: 'Emmet abbreviation',\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            range: abbreviationRange,\n            insertText: escapeNonTabStopDollar(addFinalTabStop(expandedText)),\n        };\n        completionItems = [expandedAbbr];\n    };\n    createExpandedAbbr(syntax, abbreviation);\n    if (isStyleSheetRes) {\n        // When abbr is longer than usual emmet snippets and matches better with existing css property, then no emmet\n        if (abbreviation.length > 4 && cssData.properties.some(function (x) { return x.startsWith(abbreviation); })) {\n            return { suggestions: [], incomplete: true };\n        }\n        if (expandedAbbr && expandedText.length) {\n            expandedAbbr.range = abbreviationRange;\n            expandedAbbr.insertText = escapeNonTabStopDollar(addFinalTabStop(expandedText));\n            expandedAbbr.documentation = replaceTabStopsWithCursors(expandedText);\n            expandedAbbr.label = removeTabStops(expandedText);\n            expandedAbbr.filterText = abbreviation;\n            // Custom snippets should show up in completions if abbreviation is a prefix\n            var stylesheetCustomSnippetsKeys = stylesheetCustomSnippetsKeyCache.has(syntax)\n                ? stylesheetCustomSnippetsKeyCache.get(syntax)\n                : stylesheetCustomSnippetsKeyCache.get('css');\n            completionItems = makeSnippetSuggestion(monaco, stylesheetCustomSnippetsKeys !== null && stylesheetCustomSnippetsKeys !== void 0 ? stylesheetCustomSnippetsKeys : [], abbreviation, abbreviation, abbreviationRange, expandOptions, 'Emmet Custom Snippet', false);\n            if (!completionItems.find(function (x) { return x.insertText === (expandedAbbr === null || expandedAbbr === void 0 ? void 0 : expandedAbbr.insertText); })) {\n                // Fix for https://github.com/Microsoft/vscode/issues/28933#issuecomment-309236902\n                // When user types in propertyname, emmet uses it to match with snippet names, resulting in width -> widows or font-family -> font: family\n                // Filter out those cases here.\n                var abbrRegex = new RegExp('.*' +\n                    abbreviation\n                        .split('')\n                        .map(function (x) { return (x === '$' || x === '+' ? '\\\\' + x : x); })\n                        .join('.*') +\n                    '.*', 'i');\n                if (/\\d/.test(abbreviation) || abbrRegex.test(expandedAbbr.label)) {\n                    completionItems.push(expandedAbbr);\n                }\n            }\n        }\n    }\n    else {\n        var tagToFindMoreSuggestionsFor = abbreviation;\n        var newTagMatches = abbreviation.match(/(>|\\+)([\\w:-]+)$/);\n        if (newTagMatches && newTagMatches.length === 3) {\n            tagToFindMoreSuggestionsFor = newTagMatches[2];\n        }\n        if (syntax !== 'xml') {\n            var commonlyUsedTagSuggestions = makeSnippetSuggestion(monaco, commonlyUsedTags, tagToFindMoreSuggestionsFor, abbreviation, abbreviationRange, expandOptions, 'Emmet Abbreviation');\n            completionItems = completionItems.concat(commonlyUsedTagSuggestions);\n        }\n        if (emmetConfig.showAbbreviationSuggestions === true) {\n            var abbreviationSuggestions = makeSnippetSuggestion(monaco, markupSnippetKeys.filter(function (x) { return !commonlyUsedTags.includes(x); }), tagToFindMoreSuggestionsFor, abbreviation, abbreviationRange, expandOptions, 'Emmet Abbreviation');\n            // Workaround for the main expanded abbr not appearing before the snippet suggestions\n            if (expandedAbbr && abbreviationSuggestions.length > 0 && tagToFindMoreSuggestionsFor !== abbreviation) {\n                expandedAbbr.sortText = '0' + expandedAbbr.label;\n                abbreviationSuggestions.forEach(function (item) {\n                    // Workaround for snippet suggestions items getting filtered out as the complete abbr does not start with snippetKey\n                    item.filterText = abbreviation;\n                    // Workaround for the main expanded abbr not appearing before the snippet suggestions\n                    item.sortText = '9' + abbreviation;\n                });\n            }\n            completionItems = completionItems.concat(abbreviationSuggestions);\n        }\n        // https://github.com/microsoft/vscode/issues/66680\n        if (syntax === 'html' &&\n            completionItems.length >= 2 &&\n            abbreviation.includes(':') &&\n            (expandedAbbr === null || expandedAbbr === void 0 ? void 0 : expandedAbbr.insertText) === \"<\".concat(abbreviation, \">${0}</\").concat(abbreviation, \">\")) {\n            completionItems = completionItems.filter(function (item) { return item.label !== abbreviation; });\n        }\n    }\n    if (emmetConfig.showSuggestionsAsSnippets === true) {\n        completionItems.forEach(function (x) { return (x.kind = monaco.languages.CompletionItemKind.Snippet); });\n    }\n    return completionItems.length ? { suggestions: completionItems, incomplete: true } : undefined;\n}\n/**\n * Create & return snippets for snippet keys that start with given prefix\n */\nfunction makeSnippetSuggestion(monaco, snippetKeys, prefix, abbreviation, abbreviationRange, expandOptions, snippetDetail, skipFullMatch) {\n    if (skipFullMatch === void 0) { skipFullMatch = true; }\n    if (!prefix || !snippetKeys) {\n        return [];\n    }\n    var snippetCompletions = [];\n    snippetKeys.forEach(function (snippetKey) {\n        if (!snippetKey.startsWith(prefix.toLowerCase()) || (skipFullMatch && snippetKey === prefix.toLowerCase())) {\n            return;\n        }\n        var currentAbbr = abbreviation + snippetKey.substr(prefix.length);\n        var expandedAbbr;\n        try {\n            expandedAbbr = expandAbbreviation$1(currentAbbr, expandOptions);\n        }\n        catch (e) { }\n        if (!expandedAbbr) {\n            return;\n        }\n        var item = {\n            kind: monaco.languages.CompletionItemKind.Property,\n            label: prefix + snippetKey.substr(prefix.length),\n            documentation: replaceTabStopsWithCursors(expandedAbbr),\n            detail: snippetDetail,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            range: abbreviationRange,\n            insertText: escapeNonTabStopDollar(addFinalTabStop(expandedAbbr)),\n        };\n        snippetCompletions.push(item);\n    });\n    return snippetCompletions;\n}\nfunction getCurrentWord(currentLineTillPosition) {\n    if (currentLineTillPosition) {\n        var matches = currentLineTillPosition.match(/[\\w,:,-,\\.]*$/);\n        if (matches) {\n            return matches[0];\n        }\n    }\n}\nfunction replaceTabStopsWithCursors(expandedWord) {\n    return expandedWord.replace(/([^\\\\])\\$\\{\\d+\\}/g, '$1|').replace(/\\$\\{\\d+:([^\\}]+)\\}/g, '$1');\n}\nfunction removeTabStops(expandedWord) {\n    return expandedWord.replace(/([^\\\\])\\$\\{\\d+\\}/g, '$1').replace(/\\$\\{\\d+:([^\\}]+)\\}/g, '$1');\n}\nfunction escapeNonTabStopDollar(text) {\n    return text ? text.replace(/([^\\\\])(\\$)([^\\{])/g, '$1\\\\$2$3') : text;\n}\nfunction addFinalTabStop(text) {\n    if (!text || !text.trim()) {\n        return text;\n    }\n    var maxTabStop = -1;\n    var maxTabStopRanges = [];\n    var foundLastStop = false;\n    var replaceWithLastStop = false;\n    var i = 0;\n    var n = text.length;\n    try {\n        while (i < n && !foundLastStop) {\n            // Look for ${\n            if (text[i++] != '$' || text[i++] != '{') {\n                continue;\n            }\n            // Find tabstop\n            var numberStart = -1;\n            var numberEnd = -1;\n            while (i < n && /\\d/.test(text[i])) {\n                numberStart = numberStart < 0 ? i : numberStart;\n                numberEnd = i + 1;\n                i++;\n            }\n            // If ${ was not followed by a number and either } or :, then its not a tabstop\n            if (numberStart === -1 || numberEnd === -1 || i >= n || (text[i] != '}' && text[i] != ':')) {\n                continue;\n            }\n            // If ${0} was found, then break\n            var currentTabStop = text.substring(numberStart, numberEnd);\n            foundLastStop = currentTabStop === '0';\n            if (foundLastStop) {\n                break;\n            }\n            var foundPlaceholder = false;\n            if (text[i++] == ':') {\n                // TODO: Nested placeholders may break here\n                while (i < n) {\n                    if (text[i] == '}') {\n                        foundPlaceholder = true;\n                        break;\n                    }\n                    i++;\n                }\n            }\n            // Decide to replace currentTabStop with ${0} only if its the max among all tabstops and is not a placeholder\n            if (Number(currentTabStop) > Number(maxTabStop)) {\n                maxTabStop = Number(currentTabStop);\n                maxTabStopRanges = [{ numberStart: numberStart, numberEnd: numberEnd }];\n                replaceWithLastStop = !foundPlaceholder;\n            }\n            else if (Number(currentTabStop) === maxTabStop) {\n                maxTabStopRanges.push({ numberStart: numberStart, numberEnd: numberEnd });\n            }\n        }\n    }\n    catch (e) { }\n    if (replaceWithLastStop && !foundLastStop) {\n        for (var i_1 = 0; i_1 < maxTabStopRanges.length; i_1++) {\n            var rangeStart = maxTabStopRanges[i_1].numberStart;\n            var rangeEnd = maxTabStopRanges[i_1].numberEnd;\n            text = text.substr(0, rangeStart) + '0' + text.substr(rangeEnd);\n        }\n    }\n    return text;\n}\nvar emmetSnippetField = function (index, placeholder) { return \"${\".concat(index).concat(placeholder ? ':' + placeholder : '', \"}\"); };\n/** Returns whether or not syntax is a supported stylesheet syntax, like CSS */\nfunction isStyleSheet(syntax) {\n    return syntax === 'css';\n}\n/** Returns the syntax type, either markup (e.g. for HTML) or stylesheet (e.g. for CSS) */\nfunction getSyntaxType(syntax) {\n    return isStyleSheet(syntax) ? 'stylesheet' : 'markup';\n}\n/** Returns the default snippets that Emmet suggests */\nfunction getDefaultSnippets(syntax) {\n    var syntaxType = getSyntaxType(syntax);\n    var emptyUserConfig = { type: syntaxType, syntax: syntax };\n    var resolvedConfig = resolveConfig(emptyUserConfig);\n    // https://github.com/microsoft/vscode/issues/97632\n    // don't return markup (HTML) snippets for XML\n    return syntax === 'xml' ? {} : resolvedConfig.snippets;\n}\nfunction getFilters(text, pos) {\n    var filter;\n    for (var i = 0; i < maxFilters; i++) {\n        if (text.endsWith(\"\".concat(filterDelimitor).concat(bemFilterSuffix), pos)) {\n            pos -= bemFilterSuffix.length + 1;\n            filter = filter ? bemFilterSuffix + ',' + filter : bemFilterSuffix;\n        }\n        else if (text.endsWith(\"\".concat(filterDelimitor).concat(commentFilterSuffix), pos)) {\n            pos -= commentFilterSuffix.length + 1;\n            filter = filter ? commentFilterSuffix + ',' + filter : commentFilterSuffix;\n        }\n        else if (text.endsWith(\"\".concat(filterDelimitor).concat(trimFilterSuffix), pos)) {\n            pos -= trimFilterSuffix.length + 1;\n            filter = filter ? trimFilterSuffix + ',' + filter : trimFilterSuffix;\n        }\n        else {\n            break;\n        }\n    }\n    return {\n        pos: pos,\n        filter: filter,\n    };\n}\n/**\n * Extracts abbreviation from the given position in the given document\n * @param model The TextModel from which abbreviation needs to be extracted\n * @param position The Position in the given document from where abbreviation needs to be extracted\n * @param options The options to pass to the @emmetio/extract-abbreviation module\n */\nfunction extractAbbreviation(monaco, model, position, options) {\n    var currentLine = model.getLineContent(position.lineNumber);\n    var currentLineTillPosition = currentLine.substr(0, position.column - 1);\n    var _a = getFilters(currentLineTillPosition, position.column - 1), pos = _a.pos, filter = _a.filter;\n    var lengthOccupiedByFilter = filter ? filter.length + 1 : 0;\n    var result = extractAbbreviation$1(currentLine, pos, options);\n    if (!result)\n        return;\n    var rangeToReplace = new monaco.Range(position.lineNumber, result.location + 1, position.lineNumber, result.location + result.abbreviation.length + lengthOccupiedByFilter + 1);\n    return {\n        abbreviationRange: rangeToReplace,\n        abbreviation: result.abbreviation,\n        currentLineTillPosition: currentLineTillPosition,\n        filter: filter,\n    };\n}\n/**\n * Returns a boolean denoting validity of given abbreviation in the context of given syntax\n * Not needed once https://github.com/emmetio/atom-plugin/issues/22 is fixed\n * @param syntax string\n * @param abbreviation string\n */\nfunction isAbbreviationValid(syntax, abbreviation) {\n    if (!abbreviation) {\n        return false;\n    }\n    if (isStyleSheet(syntax)) {\n        if (abbreviation.includes('#')) {\n            if (abbreviation.startsWith('#')) {\n                var hexColorRegex = /^#[\\d,a-f,A-F]{1,6}$/;\n                return hexColorRegex.test(abbreviation);\n            }\n            else if (commonlyUsedTags.includes(abbreviation.substring(0, abbreviation.indexOf('#')))) {\n                return false;\n            }\n        }\n        return cssAbbreviationRegex.test(abbreviation);\n    }\n    if (abbreviation.startsWith('!')) {\n        return !/[^!]/.test(abbreviation);\n    }\n    // Its common for users to type (sometextinsidebrackets), this should not be treated as an abbreviation\n    // Grouping in abbreviation is valid only if it's inside a text node or preceeded/succeeded with one of the symbols for nesting, sibling, repeater or climb up\n    // Also, cases such as `span[onclick=\"alert();\"]` are valid\n    if ((/\\(/.test(abbreviation) || /\\)/.test(abbreviation)) &&\n        !/\\{[^\\}\\{]*[\\(\\)]+[^\\}\\{]*\\}(?:[>\\+\\*\\^]|$)/.test(abbreviation) &&\n        !/\\(.*\\)[>\\+\\*\\^]/.test(abbreviation) &&\n        !/\\[[^\\[\\]\\(\\)]+=\".*\"\\]/.test(abbreviation) &&\n        !/[>\\+\\*\\^]\\(.*\\)/.test(abbreviation)) {\n        return false;\n    }\n    if (syntax === 'jsx') {\n        return jsxAbbreviationStartRegex.test(abbreviation) && htmlAbbreviationRegex.test(abbreviation);\n    }\n    return htmlAbbreviationStartRegex.test(abbreviation) && htmlAbbreviationRegex.test(abbreviation);\n}\nfunction isExpandedTextNoise(syntax, abbreviation, expandedText, options) {\n    var _a, _b;\n    // Unresolved css abbreviations get expanded to a blank property value\n    // Eg: abc -> abc: ; or abc:d -> abc: d; which is noise if it gets suggested for every word typed\n    if (isStyleSheet(syntax) && options) {\n        var between = (_a = options['stylesheet.between']) !== null && _a !== void 0 ? _a : ': ';\n        var after = (_b = options['stylesheet.after']) !== null && _b !== void 0 ? _b : ';';\n        // Remove overlapping between `abbreviation` and `between`, if any\n        var endPrefixIndex = abbreviation.indexOf(between[0], Math.max(abbreviation.length - between.length, 0));\n        endPrefixIndex = endPrefixIndex >= 0 ? endPrefixIndex : abbreviation.length;\n        var abbr = abbreviation.substring(0, endPrefixIndex);\n        return (expandedText === \"\".concat(abbr).concat(between, \"${0}\").concat(after) ||\n            expandedText.replace(/\\s/g, '') === abbreviation.replace(/\\s/g, '') + after);\n    }\n    // we don't want common html tags suggested for xml\n    if (syntax === 'xml' && commonlyUsedTags.some(function (tag) { return tag.startsWith(abbreviation.toLowerCase()); })) {\n        return true;\n    }\n    if (commonlyUsedTags.includes(abbreviation.toLowerCase()) || markupSnippetKeys.includes(abbreviation)) {\n        return false;\n    }\n    // Custom tags can have - or :\n    if (/[-,:]/.test(abbreviation) && !/--|::/.test(abbreviation) && !abbreviation.endsWith(':')) {\n        return false;\n    }\n    // Its common for users to type some text and end it with period, this should not be treated as an abbreviation\n    // Else it becomes noise.\n    // When user just types '.', return the expansion\n    // Otherwise emmet loses change to participate later\n    // For example in `.foo`. See https://github.com/Microsoft/vscode/issues/66013\n    if (abbreviation === '.') {\n        return false;\n    }\n    var dotMatches = abbreviation.match(/^([a-z,A-Z,\\d]*)\\.$/);\n    if (dotMatches) {\n        // Valid html tags such as `div.`\n        if (dotMatches[1] && htmlData.tags.includes(dotMatches[1])) {\n            return false;\n        }\n        return true;\n    }\n    // Fix for https://github.com/microsoft/vscode/issues/89746\n    // PascalCase tags are common in jsx code, which should not be treated as noise.\n    // Eg: MyAwesomComponent -> <MyAwesomComponent></MyAwesomComponent>\n    if (syntax === 'jsx' && /^([A-Z][A-Za-z0-9]*)+$/.test(abbreviation)) {\n        return false;\n    }\n    // Unresolved html abbreviations get expanded as if it were a tag\n    // Eg: abc -> <abc></abc> which is noise if it gets suggested for every word typed\n    return expandedText.toLowerCase() === \"<\".concat(abbreviation.toLowerCase(), \">${1}</\").concat(abbreviation.toLowerCase(), \">\");\n}\n/**\n * Returns options to be used by emmet\n */\nfunction getExpandOptions(syntax, filter) {\n    var type = getSyntaxType(syntax);\n    var filters = filter ? filter.split(',').map(function (x) { return x.trim(); }) : [];\n    var bemEnabled = filters.includes('bem');\n    var commentEnabled = filters.includes('c');\n    var combinedOptions = {\n        'output.formatSkip': ['html'],\n        'output.formatForce': ['body'],\n        'output.field': emmetSnippetField,\n        'output.inlineBreak': 0,\n        'output.compactBoolean': false,\n        'output.reverseAttributes': false,\n        'markup.href': true,\n        'comment.enabled': commentEnabled,\n        'comment.trigger': ['id', 'class'],\n        'comment.before': '',\n        'comment.after': '\\n<!-- /[#ID][.CLASS] -->',\n        'bem.enabled': bemEnabled,\n        'bem.element': '__',\n        'bem.modifier': '_',\n        'jsx.enabled': syntax === 'jsx',\n        'stylesheet.shortHex': true,\n        'stylesheet.between': syntax === 'stylus' ? ' ' : ': ',\n        'stylesheet.after': syntax === 'sass' || syntax === 'stylus' ? '' : ';',\n        'stylesheet.intUnit': 'px',\n        'stylesheet.floatUnit': 'em',\n        'stylesheet.unitAliases': {\n            e: 'em',\n            p: '%',\n            x: 'ex',\n            r: 'rem',\n        },\n        'stylesheet.fuzzySearchMinScore': 0.3,\n        'output.format': true,\n        'output.selfClosingStyle': 'html',\n    };\n    return {\n        type: type,\n        options: combinedOptions,\n        variables: {},\n        snippets: {},\n        syntax: syntax,\n        // context: null,\n        text: undefined,\n        maxRepeat: 1000,\n        // cache: null\n    };\n}\n/**\n * Expands given abbreviation using given options\n * @param abbreviation string or parsed abbreviation\n * @param config options used by the @emmetio/expand-abbreviation module to expand given abbreviation\n */\nfunction expandAbbreviation(abbreviation, config) {\n    var expandedText;\n    var resolvedConfig = resolveConfig(config);\n    if (config.type === 'stylesheet') {\n        if (typeof abbreviation === 'string') {\n            expandedText = expandAbbreviation$1(abbreviation, resolvedConfig);\n        }\n        else {\n            expandedText = css(abbreviation, resolvedConfig);\n        }\n    }\n    else {\n        if (typeof abbreviation === 'string') {\n            expandedText = expandAbbreviation$1(abbreviation, resolvedConfig);\n        }\n        else {\n            expandedText = stringify(abbreviation, resolvedConfig);\n        }\n    }\n    return escapeNonTabStopDollar(addFinalTabStop(expandedText));\n}\n\nfunction isValidEmmetToken(tokens, index, syntax, language) {\n    var currentTokenType = tokens[index].type;\n    if (syntax === 'html') {\n        // prevent emmet triggered within attributes\n        return ((currentTokenType === '' && (index === 0 || tokens[index - 1].type === 'delimiter.html')) ||\n            // #7 compatible with https://github.com/NeekSandhu/monaco-textmate\n            tokens[0].type === 'text.html.basic');\n    }\n    if (syntax === 'css') {\n        if (currentTokenType === '')\n            return true;\n        // less / scss allow nesting\n        return currentTokenType === 'tag.' + language;\n    }\n    if (syntax === 'jsx') {\n        // type must be `identifier` and not at start\n        return (!!index &&\n            ['identifier.js', 'type.identifier.js', 'identifier.ts', 'type.identifier.ts'].includes(currentTokenType));\n    }\n    return false;\n}\n// vscode did a complex node analysis, we just use monaco's built-in tokenizer\n// to achieve almost the same effect\nfunction isValidLocationForEmmetAbbreviation(model, position, syntax, language) {\n    var column = position.column, lineNumber = position.lineNumber;\n    // get current line's tokens\n    var _tokenization = \n    // monaco-editor < 0.34.0\n    model._tokenization ||\n        // monaco-editor >= 0.34.0\n        model.tokenization._tokenization;\n    var _tokenizationStateStore = _tokenization._tokenizationStateStore;\n    var _tokenizationSupport = \n    // monaco-editor >= 0.32.0\n    _tokenizationStateStore.tokenizationSupport ||\n        // monaco-editor < 0.32.0\n        _tokenization._tokenizationSupport;\n    var state = _tokenizationStateStore.getBeginState(lineNumber - 1).clone();\n    var tokenizationResult = _tokenizationSupport.tokenize(model.getLineContent(lineNumber), true, state, 0);\n    var tokens = tokenizationResult.tokens;\n    var valid = false;\n    // get token type at current column\n    for (var i = tokens.length - 1; i >= 0; i--) {\n        if (column - 1 > tokens[i].offset) {\n            valid = isValidEmmetToken(tokens, i, syntax, language);\n            break;\n        }\n    }\n    return valid;\n}\n\n// https://github.com/microsoft/vscode/blob/main/extensions/emmet/src/util.ts#L86\nvar LANGUAGE_MODES = {\n    html: ['!', '.', '}', ':', '*', '$', ']', '/', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    jade: ['!', '.', '}', ':', '*', '$', ']', '/', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    slim: ['!', '.', '}', ':', '*', '$', ']', '/', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    haml: ['!', '.', '}', ':', '*', '$', ']', '/', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    xml: ['.', '}', '*', '$', ']', '/', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    xsl: ['!', '.', '}', '*', '$', '/', ']', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    css: [':', '!', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    scss: [':', '!', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    sass: [':', '!', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    less: [':', '!', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    stylus: [':', '!', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    javascript: ['!', '.', '}', '*', '$', ']', '/', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    typescript: ['!', '.', '}', '*', '$', ']', '/', '>', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n};\n// https://github.com/microsoft/vscode/blob/main/extensions/emmet/src/util.ts#L124\nvar MAPPED_MODES = {\n    handlebars: 'html',\n    php: 'html',\n    twig: 'html',\n};\nvar DEFAULT_CONFIG = {\n    showExpandedAbbreviation: 'always',\n    showAbbreviationSuggestions: true,\n    showSuggestionsAsSnippets: false,\n};\n/**\n * add completion provider\n * @param monaco monaco self\n * @param language added language\n * @param isMarkup is markup language\n * @param isLegalToken check whether given token is legal or not\n * @param getLegalEmmetSets get legal emmet substring from a string.\n */\nfunction registerProvider(monaco, languages, syntax) {\n    if (!monaco) {\n        console.error(\"emmet-monaco-es: 'monaco' should be either declared on window or passed as first parameter\");\n        return;\n    }\n    var providers = languages.map(function (language) {\n        return monaco.languages.registerCompletionItemProvider(language, {\n            triggerCharacters: LANGUAGE_MODES[MAPPED_MODES[language] || language],\n            provideCompletionItems: function (model, position) {\n                return isValidLocationForEmmetAbbreviation(model, position, syntax, language)\n                    ? doComplete(monaco, model, position, syntax, DEFAULT_CONFIG)\n                    : undefined;\n            },\n        });\n    });\n    return function () {\n        providers.forEach(function (provider) { return provider.dispose(); });\n    };\n}\nfunction emmetHTML(monaco, languages) {\n    if (monaco === void 0) { monaco = window.monaco; }\n    if (languages === void 0) { languages = ['html']; }\n    return registerProvider(monaco, languages, 'html');\n}\nfunction emmetCSS(monaco, languages) {\n    if (monaco === void 0) { monaco = window.monaco; }\n    if (languages === void 0) { languages = ['css']; }\n    return registerProvider(monaco, languages, 'css');\n}\nfunction emmetJSX(monaco, languages) {\n    if (monaco === void 0) { monaco = window.monaco; }\n    if (languages === void 0) { languages = ['javascript']; }\n    return registerProvider(monaco, languages, 'jsx');\n}\n\nexport { emmetCSS, emmetHTML, emmetJSX, expandAbbreviation };\n","// Import stylesheets\nimport \"./styles.css\";\nimport loader from \"@monaco-editor/loader\";\nimport { emmetHTML } from \"emmet-monaco-es\";\n\n// Write Javascript code!\n// const appDiv = document.getElementById('app');\n// Initial data\nconst HTML_CODE = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n   <meta charset=\"UTF-8\">\n   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n   <title>Document</title>\n</head>\n<body>\n   <div class=\"p-4\">\n   <div class=\"alert alert-warning\" role=\"alert\">\n      Bootstrap 5 CSS injected\n   </div>\n\n   <div class=\"card\">\n      <div class=\"card-body\">\n         <h5 class=\"card-title\">Special title treatment</h5>\n         <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n         <a href=\"https://triputra-ard.vercel.app\" class=\"btn btn-primary\">Go somewhere</a>\n      </div>\n   </div>\n</div>\n</body>\n</html>\n`;\nconst CSS_LINKS = [\n  `https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css`\n];\n\n// Elements\nconst editorCode = document.getElementById(\"editorCode\");\nconst editorPreview = document.getElementById(\"editorPreview\").contentWindow\n  .document;\nconst editorCopyButton = document.getElementById(\"editorCopyClipboard\");\nconst editorFormatter = document.getElementById(\"formatter\");\n\n// <iframe> inject CSS\nCSS_LINKS.forEach((linkURL) => {\n  const link = document.createElement(\"link\");\n  link.href = linkURL;\n  link.rel = \"stylesheet\";\n  editorPreview.head.appendChild(link);\n});\n\n// Monaco loader\n// loader.config({\n//   paths: { vs: './node_modules/monaco-editor/min/vs' },\n// });\n\nloader.init().then((monaco) => {\n  createEditor(editorCode);\n  emmetHTML();\n});\n\nfunction createEditor(editorContainer) {\n  let editor = monaco.editor.create(editorContainer, {\n    value: HTML_CODE,\n    language: \"html\",\n    minimap: { enabled: true },\n    autoIndent: true,\n    formatOnPaste: true,\n    formatOnType: true,\n    automaticLayout: true,\n    contextmenu: false,\n    fontSize: 12,\n    theme: \"vs-light\",\n    scrollbar: {\n      useShadows: false,\n      vertical: \"visible\",\n      horizontal: \"visible\",\n      horizontalScrollbarSize: 12,\n      verticalScrollbarSize: 12\n    }\n  });\n\n  //   emmetHTML(editor);\n  editorPreview.body.innerHTML = HTML_CODE;\n\n  editor.onDidChangeModelContent(() => {\n    editorPreview.body.innerHTML = editor.getValue();\n  });\n\n  setTimeout(() => {\n    editor.getAction(\"editor.action.formatDocument\").run();\n    editor.trigger(\"anyString\", \"editor.action.formatDocument\");\n  }, 1000);\n\n  editorFormatter.onclick = () => {\n    editor.getAction(\"editor.action.formatDocument\").run();\n  };\n  editorCopyButton.onclick = () => {\n    console.log(editor.getValue());\n    copyToClipboard(editor.getValue());\n    const editorCopyButtonText = editorCopyButton.innerHTML;\n    editorCopyButton.innerHTML = \"Copied!\";\n    editorCopyButton.disabled = true;\n    setTimeout(() => {\n      editorCopyButton.disabled = false;\n      editorCopyButton.innerHTML = editorCopyButtonText;\n    }, 500);\n  };\n}\n\nfunction copyToClipboard(str) {\n  const el = document.createElement(\"textarea\");\n  el.value = str;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}